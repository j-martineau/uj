% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmp_ccc.R
\name{cmp_ccc.}
\alias{cmp_ccc.}
\alias{cmp_ccc_vals}
\alias{cmp_arr}
\alias{cmp_gen}
\alias{cmp_dtf}
\alias{cmp_vls}
\alias{cmp_vtp}
\alias{cmp_mat}
\alias{cmp_mvc}
\alias{cmp_scl}
\alias{cmp_vec}
\title{Complete + atomic extended class properties}
\usage{
cmp_ccc.()

cmp_ccc_vals()

cmp_arr(x)

cmp_gen(x)

cmp_dtf(x)

cmp_vls(x)

cmp_vtp(x.)

cmp_mat(x)

cmp_mvc(x)

cmp_scl(x)

cmp_vec(x)
}
\arguments{
\item{x.}{An object.}

\item{xxx.}{A character scalar containing one or more values from
\code{ccc_vals()} separated by pipes and/or underscores. Combinations of
extended classes can be specified by separating them with underscores.
Separating extended classes or combinations of extended classes with pipes
will result in a value of \code{TRUE} if any of them applies to \code{x.}.}

\item{...}{Additional arguments to \code{\link{meets}} containing value and
element/row/column count restrictions.}
}
\value{
\code{ccc_vals} returns a character vector containing all valid
extended class property values. \code{ccc} returns a character scalar
or vector containing all extended class properties from
\code{ccc_vals()} applicable to \code{x.}. All others return either
\code{TRUE} or \code{FALSE}.
}
\description{
Complete + atomic extended class properties
}
\section{Functions}{
\itemize{
\item \code{cmp_ccc_vals()}: Get a character vector of all possible complete +
atomic extended class properties.

\item \code{cmp_arr()}: Is \code{x.} a complete atomic array?

\item \code{cmp_gen()}: Is \code{x.} a complete atomic generic?

\item \code{cmp_dtf()}: Is \code{x.} a complete \code{\link[itab]{atomic df}}?

\item \code{cmp_vls()}: Is \code{x.} a complete atomic vlist?

\item \code{cmp_vtp()}: Is \code{x.} a complete atomic vtype?

\item \code{cmp_mat()}: Is \code{x.} a complete atomic matrix?

\item \code{cmp_mvc()}: Is \code{x.} a complete atomic mvect?

\item \code{cmp_scl()}: Is \code{x.} a complete atomic scalar?

\item \code{cmp_vec()}: Is \code{x.} a complete atomic vect?

}}
\section{Submitting additional arguments to \code{ccc} via \code{...}}{

Allows for checking not just the ccc but whether length, number of rows,
number of columns, and element values meet flexible criteria.
}

\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{is_ccc_uj}()},
\code{\link{is_mmm.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()},
\code{\link{xxx.}()}
}
\concept{props}
