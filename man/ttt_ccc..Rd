% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ttt_ccc.R
\name{ttt_ccc.}
\alias{ttt_ccc.}
\alias{ttt_ccc_vals}
\alias{any_arr}
\alias{any_gen}
\alias{any_mat}
\alias{any_mvc}
\alias{any_scl}
\alias{any_dtf}
\alias{any_vec}
\alias{any_vls}
\alias{any_vtp}
\alias{atm_arr}
\alias{atm_gen}
\alias{atm_mat}
\alias{atm_mvc}
\alias{atm_scl}
\alias{atm_dtf}
\alias{atm_vec}
\alias{atm_vls}
\alias{atm_vtp}
\alias{pop_arr}
\alias{pop_gen}
\alias{pop_mat}
\alias{pop_mvc}
\alias{pop_scl}
\alias{pop_dtf}
\alias{pop_vec}
\alias{pop_vls}
\alias{pop_vtp}
\alias{cmp_arr}
\alias{cmp_gen}
\alias{cmp_mat}
\alias{cmp_mvc}
\alias{cmp_scl}
\alias{cmp_dtf}
\alias{cmp_vec}
\alias{cmp_vls}
\alias{cmp_avt}
\alias{emp_arr}
\alias{emp_gen}
\alias{emp_mat}
\alias{emp_mvc}
\alias{emp_scl}
\alias{emp_dtf}
\alias{emp_vec}
\alias{emp_vls}
\alias{emp_avt}
\alias{rcr_arr}
\alias{rcr_gen}
\alias{rcr_mat}
\alias{rcr_mvc}
\alias{rcr_scl}
\alias{rcr_dtf}
\alias{rcr_vec}
\alias{rcr_vls}
\alias{rcr_vtp}
\title{Fundamental type plus extended class properties}
\usage{
ttt_ccc.()

ttt_ccc_vals()

any_arr(x)

any_gen(x)

any_mat(x)

any_mvc(x)

any_scl(x)

any_dtf(x)

any_vec(x)

any_vls(x)

any_vtp(x)

atm_arr(x, xxx = NULL)

atm_gen(x, xxx = NULL)

atm_mat(x, xxx = NULL)

atm_mvc(x, xxx = NULL)

atm_scl(x, xxx = NULL)

atm_dtf(x, xxx = NULL)

atm_vec(x, xxx = NULL)

atm_vls(x, xxx = NULL)

atm_vtp(x, xxx = NULL)

pop_arr(x, xxx = NULL)

pop_gen(x, xxx = NULL)

pop_mat(x, xxx = NULL)

pop_mvc(x, xxx = NULL)

pop_scl(x, xxx = NULL)

pop_dtf(x, xxx = NULL)

pop_vec(x, xxx = NULL)

pop_vls(x, xxx = NULL)

pop_vtp(x, xxx = NULL)

cmp_arr(x)

cmp_gen(x)

cmp_mat(x)

cmp_mvc(x)

cmp_scl(x)

cmp_dtf(x)

cmp_vec(x)

cmp_vls(x)

cmp_avt(x)

emp_arr(x)

emp_gen(x)

emp_mat(x)

emp_mvc(x)

emp_scl(x)

emp_dtf(x)

emp_vec(x)

emp_vls(x)

emp_avt(x)

rcr_arr(x)

rcr_gen(x)

rcr_mat(x)

rcr_mvc(x)

rcr_scl(x)

rcr_dtf(x)

rcr_vec(x)

rcr_vls(x)

rcr_vtp(x)
}
\arguments{
\item{x}{An object.}

\item{xxx}{Optional \link[cmp_chr_scl]{Complete character scalar} naming an
extended mode from \code{\link{mmm_vals}()}.}
}
\value{
Logical scalar.
}
\description{
Combinations of \link[ttt]{fundamental type} and
\link[ccc]{extended class}.
}
\section{Functions}{
\itemize{
\item \code{ttt_ccc_vals()}: Get a character vector of all possible fundamental
type plus extended class properties.

\item \code{any_arr()}: Is \code{x} an \link[is_arr]{array of any type}?

\item \code{any_gen()}: Is \code{x} a \link[is_gen]{generic of any type}?

\item \code{any_mat()}: Is \code{x} a \link[is_mat]{matrix of any type}?

\item \code{any_mvc()}: Is \code{x} a \link[is_mvc]{multivec of any type}?

\item \code{any_scl()}: Is \code{x} a \link[is_scl]{scalar of any type}?

\item \code{any_dtf()}: Is \code{x} a \link[is_dft]{dtf of any type}?

\item \code{any_vec()}: Is \code{x} a \link[is_vec]{vec of any type}?

\item \code{any_vls()}: Is \code{x} a \link[is_vls]{vlist of any type}?

\item \code{any_vtp()}: Is \code{x} a \link[is_vtp]{vtype of any type}?

\item \code{atm_arr()}: Is \code{x} an \link[iatm]{atomic} \link[iarr]{array}?

\item \code{atm_gen()}: Is \code{x} an \link[iatm]{atomic} \link[igen]{generic}?

\item \code{atm_mat()}: Is \code{x} an \link[iatm]{atomic} \link[imat]{matrix}?

\item \code{atm_mvc()}: Is \code{x} an \link[iatm]{atomic}
\link[imvc]{multivec}?

\item \code{atm_scl()}: Is \code{x} an \link[iatm]{atomic} \link[iscl]{scalar}?

\item \code{atm_dtf()}: Is \code{x} an \link[iatm]{atomic} \link[idtf]{dtf}?

\item \code{atm_vec()}: Is \code{x} an \link[iatm]{atomic} \link[ivec]{vec}?

\item \code{atm_vls()}: Is \code{x} an \link[iatm]{atomic} \link[ivls]{vlist}?

\item \code{atm_vtp()}: Is \code{x} an \link[iatm]{atomic} \link[ivtp]{vtype}?

\item \code{pop_arr()}: Is \code{x} a \link[ipop]{populated} \link[iarr]{array}?

\item \code{pop_gen()}: Is \code{x} a \link[ipop]{populated}
\link[igen]{generic}?

\item \code{pop_mat()}: Is \code{x} a \link[ipop]{populated}
\link[imat]{matrix}?

\item \code{pop_mvc()}: Is \code{x} a \link[ipop]{populated}
\link[imvc]{multivec}?

\item \code{pop_scl()}: Is \code{x} a \link[ipop]{populated}
\link[iscl]{scalar}?

\item \code{pop_dtf()}: Is \code{x} a \link[ipop]{populated} \link[idtf]{dtf}?

\item \code{pop_vec()}: Is \code{x} a \link[ipop]{populated} \link[ivec]{vec}?

\item \code{pop_vls()}: Is \code{x} a \link[ipop]{populated} \link[ivls]{vlist}?

\item \code{pop_vtp()}: Is \code{x} a \link[ipop]{populated} \link[ivtp]{vtype}?

\item \code{cmp_arr()}: Is \code{x} a \link[icmp]{complete} \link[iarr]{array}?

\item \code{cmp_gen()}: Is \code{x} a \link[icmp]{complete}
\link[igen]{generic}?

\item \code{cmp_mat()}: Is \code{x} a \link[icmp]{complete} \link[imat]{matrix}?

\item \code{cmp_mvc()}: Is \code{x} a \link[icmp]{complete}
\link[imvc]{multivec}?

\item \code{cmp_scl()}: Is \code{x} a \link[icmp]{complete} \link[iscl]{scalar}?

\item \code{cmp_dtf()}: Is \code{x} a \link[icmp]{complete} \link[idtf]{dtf}?

\item \code{cmp_vec()}: Is \code{x} a \link[icmp]{complete} \link[ivec]{vec}?

\item \code{cmp_vls()}: Is \code{x} a \link[icmp]{complete} \link[ivls]{vlist}?

\item \code{cmp_avt()}: Is \code{x} a \link[icmp]{complete} \link[ivtp]{vtype}?

\item \code{emp_arr()}: Is \code{x} an \link[iemp]{empty} \link[iarr]{array}?

\item \code{emp_gen()}: Is \code{x} an \link[iemp]{empty} \link[igen]{generic}?

\item \code{emp_mat()}: Is \code{x} an \link[iemp]{empty} \link[imat]{matrix}?

\item \code{emp_mvc()}: Is \code{x} an \link[iemp]{empty} \link[imvc]{multivec}?

\item \code{emp_scl()}: Is \code{x} an \link[iemp]{empty} \link[iscl]{scalar}?

\item \code{emp_dtf()}: Is \code{x} an \link[iemp]{empty} \link[idtf]{dtf}?

\item \code{emp_vec()}: Is \code{x} an \link[iemp]{empty} \link[ivec]{vec}?

\item \code{emp_vls()}: Is \code{x} an \link[iemp]{empty} \link[ivls]{vlist}?

\item \code{emp_avt()}: Is \code{x} an \link[iemp]{empty} \link[ivtp]{vtype}?

\item \code{rcr_arr()}: Is \code{x} a \link[ircr]{recursive} \link[iarr]{array}?

\item \code{rcr_gen()}: Is \code{x} a \link[ircr]{recursive}
\link[igen]{generic}?

\item \code{rcr_mat()}: Is \code{x} a \link[ircr]{recursive}
\link[imat]{matrix}?

\item \code{rcr_mvc()}: Is \code{x} a \link[ircr]{recursive}
\link[imvc]{multivec}?

\item \code{rcr_scl()}: Is \code{x} a \link[ircr]{recursive}
\link[iscl]{scalar}?

\item \code{rcr_dtf()}: Is \code{x} a \link[ircr]{recursive} \link[idtf]{dtf}?

\item \code{rcr_vec()}: Is \code{x} a \link[ircr]{recursive} \link[ivec]{vec}?

\item \code{rcr_vls()}: Is \code{x} a \link[ircr]{recursive} \link[ivls]{vlist}?

\item \code{rcr_vtp()}: Is \code{x} a \link[ircr]{recursive} \link[ivtp]{vtype}?

}}
\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{is_ccc.}()},
\code{\link{is_mmm.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_mmm.}()},
\code{\link{xxx.}()}
}
\concept{props}
