% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binfuns.R
\name{binfuns.}
\alias{binfuns.}
\alias{\%IS\%}
\alias{\%!IS\%}
\alias{\%EQ\%}
\alias{\%!EQ\%}
\alias{\%AND\%}
\alias{\%OR\%}
\alias{\%!\%}
\alias{\%1\%}
\alias{\%IN\%}
\alias{\%!IN\%}
\alias{\%HAS\%}
\alias{\%LACKS\%}
\title{Binary functions returning scalar \code{TRUE} or \code{FALSE}.}
\usage{
binfuns.()

x \%IS\% y

x \%!IS\% y

x \%EQ\% y

x \%!EQ\% y

x \%AND\% y

x \%OR\% y

x \%!\% y

x \%1\% y

x \%IN\% y

x \%!IN\% y

x \%HAS\% y

x \%LACKS\% y
}
\arguments{
\item{x, y}{Any objects.}
}
\description{
Binary functions returning scalar \code{TRUE} or \code{FALSE}.
}
\section{Functions}{
\itemize{
\item \code{x \%IS\% y}: Evaluates whether \code{x} and \code{y} are
identical.

\item \code{x \%!IS\% y}: Evaluates whether \code{x} and \code{y} are not
identical.

\item \code{x \%EQ\% y}: Evaluates whether \code{x} and \code{y} are setequal.
If \code{x} and \code{y} are not compatible, returns \code{FALSE}.

\item \code{x \%!EQ\% y}: Evaluates whether \code{x} and \code{y} are not
setequal. If \code{x} and \code{y} are not compatible, returns \code{TRUE}.

\item \code{x \%AND\% y}: Evaluates whether \code{x} and \code{y} are both
\code{TRUE} (that is, a scalar \code{TRUE} value).

\item \code{x \%OR\% y}: Evaluates whether \code{x} and/or \code{y} is
\code{TRUE}.

\item \code{x \%!\% y}: Evaluates whether \code{x} and \code{y} are both
\code{FALSE} (that is, a scalar \code{FALSE} value).

\item \code{x \%1\% y}: Evaluates whether one of \code{x} or \code{y} is
\code{TRUE}.

\item \code{x \%IN\% y}: Evaluates whether atomic scalar \code{x} is contained
in atomic object \code{y}. If \code{x} is not atomic scalar, \code{y} is
not atomic, or \code{x} and \code{y} are not compatible, returns
\code{FALSE}.

\item \code{x \%!IN\% y}: Evaluates whether atomic scalar \code{x} is contained
in atomic object \code{y}. If \code{x} is not atomic scalar, \code{y} is
not atomic, or \code{x} and \code{y} are not compatible, returns
\code{FALSE}.

\item \code{x \%HAS\% y}: Evaluates whether atomic object \code{x} contains
atomic scalar \code{y}. If \code{x} is not atomic, \code{y} is not atomic
scalar, or \code{x} and \code{y} are not compatible, returns \code{FALSE}.

\item \code{x \%LACKS\% y}: Evaluates whether atomic object \code{x} lacks (does
not contain) atomic scalar \code{y}. If \code{x} is not atomic, \code{y} is
not atomic scalar, or \code{x} and \code{y} are not compatible, returns
\code{TRUE}.

}}
\seealso{
Other extensions: 
\code{\link{a.}()},
\code{\link{callers.}()},
\code{\link{case.}()},
\code{\link{dots.}()},
\code{\link{ex.}()},
\code{\link{failsafe.}()},
\code{\link{files.}()},
\code{\link{fork.}()},
\code{\link{fsub.}()},
\code{\link{is_failsafe.}()},
\code{\link{is_unq.}()},
\code{\link{logicals.}()},
\code{\link{make.}()},
\code{\link{n_th.}()},
\code{\link{na.}()},
\code{\link{naming.}()},
\code{\link{nx.}()},
\code{\link{os.}()},
\code{\link{pause.}()},
\code{\link{ply.}()},
\code{\link{put.}()},
\code{\link{reclass.}()},
\code{\link{recycling.}()},
\code{\link{run.}()},
\code{\link{stats.}()},
\code{\link{swap.}()},
\code{\link{values.}()},
\code{\link{x.}()},
\code{\link{xb.}()}

Other logicals: 
\code{\link{is_failsafe.}()},
\code{\link{logicals.}()}
}
\concept{extensions}
\concept{logicals}
