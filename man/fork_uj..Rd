% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fx.R
\name{fork_uj.}
\alias{fork_uj.}
\alias{f0.}
\alias{f1.}
\alias{ff.}
\title{Bare Bones Fork}
\usage{
fork_uj.()

f0.(test, yes, no)

f1.(test, yes, no)

ff.(test, yes, no)
}
\arguments{
\item{test}{A logical scalar (\code{f0.}) or a logical vector (\code{f1.} and
\code{ff.}).}

\item{yes, no}{Any object (\code{f0.}), an atomic scalar \code{f1.}, or an
atomic vector of the same length as \code{test}.}
}
\value{
An arbitrary type of object (\code{f0.}) or an atomic vector
(\code{f1.} and \code{ff.}).
}
\description{
Bare bones extended functionality for
\code{\link[base]{ifelse}}. Functions wrapping \code{\link[base]{ifelse}},
expecting (but not checking for) characteristics of \code{test},
\code{yes}, and \code{no}.
}
\section{Functions}{
\itemize{
\item \code{f0.}: If \code{test} is logical scalar \code{TRUE}, return
\code{yes} (all of it), otherwise return \code{no} (all of it).

\item \code{f1.}: Create a new vector the same length as \code{test},
placing the atomic scalar value \code{yes} into the elements of the new
vector corresponding to the \code{TRUE} elements of \code{test} and placing
the atomic scalar value in \code{no} into elements of the new vector
corresponding to \code{FALSE} elements of \code{test}.

\item \code{ff.}: Create a new vector the same length as \code{test},
placing values of atomic vector \code{yes} corresponding to \code{TRUE}
elements of \code{test} into those same elements of the new vector and
placing values of atomic vector \code{no} corresponding to \code{FALSE}
elements of \code{test} into those same elements of the new vector.
}}

\seealso{
Other meta: 
\code{\link{av_uj}()},
\code{\link{bin_uj}()},
\code{\link{callers_uj}()},
\code{\link{case_uj}()},
\code{\link{dots_uj}()},
\code{\link{ex_uj}()},
\code{\link{failsafe_uj}()},
\code{\link{fx_uj}()},
\code{\link{is_failsafe_uj}()},
\code{\link{is_unique_uj}()},
\code{\link{logicals_uj}()},
\code{\link{make_uj}()},
\code{\link{n_uj}},
\code{\link{na_vals_uj}()},
\code{\link{names_uj}()},
\code{\link{os_uj}()},
\code{\link{ply_uj}()},
\code{\link{put_uj}()},
\code{\link{reclass_uj}()},
\code{\link{recycling_uj}()},
\code{\link{reps_uj}()},
\code{\link{run_uj}()},
\code{\link{swap_uj}()},
\code{\link{values_uj}()},
\code{\link{x_uj}()},
\code{\link{xb_uj}()}

Other fork: 
\code{\link{case_uj}()},
\code{\link{fx_uj}()}
}
\concept{fork}
\concept{meta}
