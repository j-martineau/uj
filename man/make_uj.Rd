% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.R
\name{make_uj}
\alias{make_uj}
\alias{vec}
\alias{vec.}
\alias{vec_na}
\alias{mat}
\alias{dtf0}
\alias{dtf_na}
\alias{dtf}
\alias{vls}
\alias{vls.}
\alias{diag.}
\title{Extended object creation functionality}
\usage{
vec(..., r. = 1, vn. = NULL)

vec.(...)

vec_na(r.)

mat(..., nr. = 1, nc. = NULL, br. = F, rn. = NULL, cn. = NULL)

dtf0(cn)

dtf_na(cn, nr)

dtf(..., cn. = NULL)

vls(..., en. = NULL)

vls.(...)

diag.(x = 1, r = 1)
}
\arguments{
\item{...}{Objects to placed in an atomic vector+, atomic matrix, atomic data.frame, vlist, or square atomic diagonal matrix.}

\item{vn.}{An optional \link[=cmp_chr_vec]{complete character vec} of names to apply to vector or list elements. May be pipe-delimited.}

\item{br.}{A complete non-\code{NA} scalar indicating whether to fill matrices by row.}

\item{rn.}{An optional complete character vec of names to apply to rows of a matrix or data.frame. May be pipe-delimited.}

\item{cn, cn.}{Optional complete character vec of names to apply to columns of a matrix or dtf May be pipe-delimited. For tibbles, this argument can be used only if the \code{...} arguments are not named.}

\item{nr, nr.}{Complete positive whole-number scalars giving number of rows.}

\item{x}{A numeric, logical, or character object of length \code{1} or greater.}

\item{r, r.}{\link[=cmp_psw_scl]{Complete positive whole-number scalars} giving number of replications.}

\item{nc, nc.}{Complete positive whole-number scalars giving number of columns.}
}
\value{
\itemize{
\item \strong{\code{vec}, \code{vec.}, \code{vec_na}}: an atomic vector.
\item \strong{\code{mat}}: an atomic matrix.
\item \strong{\verb{diag.'**: a square atomic matrix. \\item **}dtf\verb{, }dtf0\verb{, }dtf_na\verb{**: an atomic data.frame. \\item **}vls\verb{, }vls.`}: a \link[=ivls]{vlist}.
}
}
\description{
\itemize{
\item \strong{\code{vec}}: Collapse \code{...} to any atomic vector, replicated \code{r.} times, with optional element names.
\item \strong{\code{vec.}}: Create a named atomic vec by taking the original call and parsing arguments to get element names. Allows for more concise code such as \code{vec.(a, b)} giving the same result as \code{list(a = a, b = b)}.
\item \strong{\code{vec_na}}: Create a vector of \code{r.} \code{NA} values.
\item \strong{\code{mat}}: Create an atomic matrix from the atomic elements in \code{...} with \item **\code{nr.} rows, \code{nc.} columns, optionally filling by row, with optional row and column names.
\item \strong{\code{dtf}}: Create an \link[=idtf]{atomic data.frame} from the \link[=ivec]{atomic vec} \code{...} arguments with optional row names, plus optional column names to replace any names of \code{...} arguments.
\item \strong{\code{dtf0}}: Create a data.frame with 0 rows and columns with names from \code{cn}, which may be pipe delimited.
\item \strong{\code{dtf_na}}: Create an \link[idtf]{atomic data.frame} with \code{nr} rows and columns with names from \code{cn} (which may be pipe delimited). All cells of the resulting tibble are populated with \code{NA} values.
\item \strong{\code{vls}}: Create an atomic \link[=ivls]{vlist} from \code{...} arguments with optional names to replace any names of \code{...} arguments.
\item \strong{\code{vls.}}: Create a named \link[ivls]{atomic vlist} by taking the original call and parsing arguments to get element names. Allows for more concise code such as \code{vls.(letters, LETTERS)} giving the same result as \code{list(letters = letters, LETTERS = LETTERS)}.
\item \strong{\code{diag.}}: Create a square atomic diagonal matrix. For numeric \code{x}, off-diagonals are 0. For logical \code{x}, off diagonals are \code{FALSE}. For character \code{x}, off diagonals are blank strings (\code{""}). For all others, off diagonals are \code{NA}.
}
}
\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{binary_failsafe}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{os}()},
\code{\link{paths}},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put}()},
\code{\link{reclass}()},
\code{\link{recycling}},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{r}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uj_logicals}},
\code{\link{xb}()}
}
\concept{extensions}
