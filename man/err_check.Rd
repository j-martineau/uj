% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/errs.R
\name{err_check}
\alias{err_check}
\alias{bank_err}
\alias{bank_lgl}
\alias{bank_not}
\alias{bank_pop}
\alias{bank_funs}
\alias{bank_ppp}
\alias{bank_vals}
\alias{bank_dots}
\alias{bank_when}
\alias{bank_pats}
\alias{bank_fail}
\title{Error checking, banking, and processing}
\usage{
err_check(gens. = 0)

bank_err(..., gens. = 0)

bank_lgl(..., nas. = F, extras. = NULL)

bank_not(...)

bank_pop(...)

bank_funs(funs., ...)

bank_ppp(ppp., ..., nas. = F)

bank_vals(...)

bank_dots(ppp., ..., named. = F)

bank_when(whens., values., ...)

bank_pats(pats., ...)

bank_fail(x)
}
\arguments{
\item{gens.}{A \link[cmp_nnw_scl]{complete non-negative whole-number scalar} indicating the number of generations back in the call stack in which to bank and/or check for error messages.}

\item{...}{\itemize{
\item For \code{bank_err}: An arbitrary number of atomic arguments that when collapsed into a character scalar form an error message.
\item For \verb{bank_lgl, bank_pop, bank_funs, bank_prop, bank_pats}: An arbitrary number of named arguments to be error checked.
\item For \code{bank_not}: An arbitrary number of named logical scalar arguments to be checked for \code{TRUE}-ness plus an arbitrary number of unnamed atomic arguments that when collapsed form an error message.
\item For \code{bank_vals}: An arbitrary number of named atomic scalar arguments and an arbitrary number of unnamed atomic arguments holding valid values of the named arguments.
\item For \code{bank_dots}: An arbitrary number of named or unnamed arguments to be error checked.
\item For \code{bank_when}: Two named atomic scalars to be error checked.
}}

\item{nas.}{A non-\code{NA} logical scalar indicating whether atomic scalar \code{NA} values qualify.}

\item{named.}{A non-\code{NA} logical scalar indicating whether \code{...} arguments must be uniquely named without using blank strings.}

\item{whens., values.}{\link[=ipop]{Populated atomic objects}.}

\item{pats.}{An \link[=ivls]{atomic vlist} containing multiple elements, each of which must be a \link[=cmp_chr_mvc]{complete character multivec} of the same length as the number of \code{...} arguments. Each element gives a pattern of valid properties for the argument in \code{...} in the form of one property specification per argument in \code{...} in the same order of those arguments.}

\item{x}{An R object.}

\item{extras}{\code{NUlL} or an \link[=icmp]{complete atomic object} containing additional atomic values that qualify as valid.}

\item{funs}{A \link[=cmp_chr_scl]{complete character scalar} containing a \link[=ppp_funs]{property function} name or multiple property function names separated by pipes, which are used to check if named arguments in \code{...} satisfy the property specification in any of the function names.}

\item{ppp}{A complete character scalar containing one or more property combos (combos are created by separating one or more \link[=all_props]{property values} with underscores. Multiple combos are separated by pipes.}
}
\value{
\code{NULL} (called for the side effect of banking and/or processing error messages).
}
\description{
Bank error messages in the immediate environment of a function to allow for exhaustive error checking before throwing an exception. Results in a combined, multiple-error message to be reported at the completion of all error checks.
\tabular{rl}{
  \code{err_check}   \tab \emph{Process any banked error messages}.
\cr               \tab Checks for banked error messages in the environment of the function \code{gens} generations back in the call stack, and if there are any, processes them, stopping execution. If there are none, takes no action. To be called after error checking is complete.
\cr               \tab   
\cr \code{bank_funs}   \tab \emph{Bank errors for args not meeting property functions}.
\cr               \tab For each named \code{...} argument, checks whether it satisfies any of the property functions named in \code{funs.}, and if not, banks an error message. \code{funs.} must be a character scalar containing the names of one or more \link[=ppp_funs]{property functions}, separated by pipes. An argument passes the test if calling any one of the functions results in a value of \code{TRUE}.
\cr               \tab   
\cr \code{bank_vals}   \tab \emph{Bank errors for args with out-of-bounds values}.
\cr               \tab  Banks errors if atomic scalar arguments do not have one of a list of values. For each named atomic scalar \code{...} argument, checks it against the remaining (unnamed) atomic \code{...} arguments (which do not have to be of the same mode), and if the named argument's value does not match a value from any unnamed \code{...} argument, banks an error message.
\cr               \tab   
\cr \code{bank_dots}   \tab \emph{Bank errors for \code{...} args}.
\cr               \tab Bank errors if \code{...} arguments do not satisfy a property specification, and optionally, if they are not named. Checks if each \code{...} argument satisfies the property specification in \code{prop.} and if not, banks an error message. If \code{named. = TRUE}, checks whether all \code{...} arguments are named, and if not banks an error message.
\cr               \tab   
\cr \code{bank_when}   \tab \emph{Bank errors for one arg conditional on the value of another}.
\cr               \tab  Bank errors conditionally on the value of two arguments. Banks an error if the first named atomic scalar \code{...} argument has a value contained in \code{whens.} and the second named atomic scalar \code{...} argument does not contain a value from \code{values.}.
\cr               \tab   
\cr \code{bank_pats}   \tab \emph{Bank errors for args not matching any patterns of properties}.
\cr               \tab  Bank errors conditionally on the pattern of properties of arguments in \code{...} matching none of the specified patterns of associated properties in \code{pats.}.
\cr               \tab   
\cr \code{bank_fail}   \tab \emph{Bank errors for args producing an error when evaluated}.
\cr               \tab   
\cr  \code{bank_err}   \tab \emph{Bank an arbitrary error message}.
\cr               \tab  Banks the error message in \code{...} in the environment of the function \code{gens} generations back in the call stack. The error message is constructed by \link[=av]{atomizing} and collapsing \code{...} into a character scalar.
\cr               \tab   
\cr  \code{bank_lgl}   \tab \emph{Check for logical scalar args}.
\cr               \tab Checks named \code{...} arguments for whether they are scalar \code{TRUE} or scalar \code{FALSE}. If \code{na = TRUE}, also allows atomic scalar \code{NA}. If \code{extras} contains atomic values (logical or not), also allows those values. For each named argument that does not meet the requirements, banks an error.
\cr               \tab   
\cr  \code{bank_not}   \tab \emph{Bank errors for \code{FALSE} args}.
\cr               \tab For each scalar \code{FALSE} named \code{...} argument, creates an error message by collapsing unnamed \code{...} arguments into a character scalar message template, banking the error message for that named argument. The location where the name of a \code{FALSE} named argument should occur in the message is indicated by the escape sequence \code{'{@}'}.
\cr               \tab   
\cr  \code{bank_pop}   \tab \emph{Bank errors for non-populated args}.
\cr               \tab For each named \code{...} argument that is either \code{NULL} or empty (of length \code{0}), banks an error message.
\cr               \tab   
\cr  \code{bank_ppp}   \tab \emph{Bank errors for args not passing arbitrary property check}.
\cr               \tab More flexible but less efficient than \code{bank_funs}. For each named \code{...} argument, banks an error message if it does satisfy the \link[=ippp]{property specification} in \code{ppp}. If \code{nas. = TRUE}, arguments may also be atomic scalar \code{NA} values. \code{ppp.} must be a character scalar containing one or more property combos. Property combos are created by separating multiple properties from \link[=all_props]{all_props()}. A property combo may be a single property. Multiple property combos are separated from each other using pipes. An argument satisfies the property specification if it satisfies any of the property combos.
}
}
\seealso{
Other errs: 
\code{\link{failsafe}()}
}
\concept{errs}
