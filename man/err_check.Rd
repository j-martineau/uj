% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/err_check.R
\encoding{UTF-8}
\name{err_check}
\alias{err_check}
\alias{banked_errs}
\alias{bank_err}
\alias{bank_lgl}
\alias{bank_not}
\alias{bank_class}
\alias{bank_pop}
\alias{bank_funs}
\alias{bank_spec}
\alias{bank_vals}
\alias{bank_chars}
\alias{bank_dots}
\alias{bank_when}
\alias{bank_fail}
\title{Error checking, banking, and processing}
\usage{
err_check(gens. = 0)

banked_errs(gens. = 0)

bank_err(..., gens. = 0)

bank_lgl(..., nas. = F, extras. = NULL)

bank_not(...)

bank_class(class., ...)

bank_pop(...)

bank_funs(funs., ..., vals. = NULL)

bank_spec(spec., ..., nas. = F)

bank_vals(vals., ..., atm. = TRUE, nas. = FALSE)

bank_chars(chars., ..., atm. = TRUE)

bank_dots(spec., ..., named. = F)

bank_when(whens., values., ...)

bank_fail(...)
}
\arguments{
\item{gens.}{A \link[=cmp_nnw_scl]{complete non-negative whole-number scalar} indicating the number of generations back in the call stack in which to bank and/or check for error messages.}

\item{...}{Differs by function in terms of whether they are named, how many there are, and their \link[=ppp]{property requirements} as described in the section entitled \emph{the} \code{...} \emph{arguments}.}

\item{nas.}{\code{TRUE} or \code{FALSE} indicating whether \code{NA} values qualify as \code{'logical'}.}

\item{extras.}{\code{NULL} or a \link[=cmp_atm]{complete atomic object} containing additional valid values.}

\item{funs.}{A \link[=cmp_chr_vec]{complete character vec} containing \code{1} or more \link[=prop_funs]{property function} names.}

\item{spec.}{A \link[=cmp_chr_scl]{complete character scalar} containing a \link[=is_prop_spec]{property spec}.}

\item{named.}{\code{TRUE} or \code{FALSE} indicating whether \code{...} args must uniquely named without using \code{""}.}

\item{whens.}{A \link[=pop_atm]{populated atomic object} of length \code{length(values.)}.}

\item{values.}{A \link[=cmp_atm]{complete atomic object} of length \code{length(whens.)}.}
}
\value{
\code{NULL}
}
\description{
Bank error messages in the immediate environment of a function to allow for exhaustive error checking before throwing an exception. Results in a possibly multiple-error, accumulated message to be processed upon completion of error checking.
\cr\cr
\strong{General purpose functions}
\tabular{rl}{
  \code{banked_errs}   \tab Retrieves the bank of error message stored in the environment of the function \code{gens.} generations back in the calls stack.
\cr               \tab  
\cr \code{err_check}   \tab Checks for banked error messages in the environment of the function \code{gens.} generations back in the call stack, and if there are any, processes them, stopping execution. If there are none, takes no action.
\cr               \tab  
\cr  \code{bank_err}   \tab Banks an arbitrary error message (built by collapsing \code{...} args) in the environment of the function \code{gens.} generations back in the call stack.
}
\strong{Condition-based functions}
\tabular{rl}{
  \strong{Function}   \tab \strong{Condition for banking an error message}
\cr \code{bank_class}   \tab A named \code{...} arg is not of any class named in the \code{class.} argument.
\cr                \tab  
\cr \code{bank_chars}   \tab A named \code{...} arg contains characters not supplied in the \code{chars.} argument.
\cr                \tab  
\cr  \code{bank_when}   \tab The first named \code{...} arg is the \code{n}-th value in the \code{whens.} argument, but the second \emph{is not} the \code{n}-th value in the \code{values.} argument.
\cr                \tab  
\cr  \code{bank_dots}   \tab A \code{...} arg\eqn{^a} fails to satisfy the \link[=is_prop_spec]{property spec} in the \code{spec.} argument.
\cr                \tab  
\cr  \code{bank_spec}   \tab A named \code{...} arg fails to satisfy the \link[=is_prop_spec]{property spec} in the \code{spec.} argument\eqn{^b}.
\cr                \tab  
\cr  \code{bank_funs}   \tab A named \code{...} arg fails to satisfy \emph{any} of the \link[=prop_funs]{property function(s)} named in the \code{funs.} argument.
\cr                \tab  
\cr  \code{bank_vals}   \tab A named \code{...} arg contains values not supplied in the \code{vals.} argument.
\cr                \tab  
\cr  \code{bank_fail}   \tab A named \code{...} arg produces an error when submitted to \code{\link[base]{identity}}.
\cr                \tab  
\cr   \code{bank_lgl}   \tab A named \code{...} arg is neither \code{TRUE}, \code{FALSE}, \code{NA}\eqn{^c}, nor contained in the \code{extras.} argument\eqn{^d}.
\cr                \tab  
\cr   \code{bank_not}   \tab A named \code{...} arg is \code{FALSE}\eqn{^e}.
\cr                \tab  
\cr   \code{bank_pop}   \tab A named \code{...} arg is either \code{NULL} or otherwise of length \code{0}.
}
\eqn{^{a.}} Named when \verb{named. = TRUE}.
\cr\eqn{^{b.}} May also be scalar \code{NA} when \verb{nas. = TRUE}.
\cr\eqn{^{c.}} When \verb{nas. = TRUE}.
\cr\eqn{^{d.}} When \code{extras.} is non-\code{NULL}.
\cr\eqn{^{e.}} Collapses \emph{unnamed} \code{...} args to an error message template, replacing the escape sequence \code{'{@}'} with the named \code{...} arg's name.
}
\section{The \code{...} arguments}{
 Arguments supplied in \code{...} differ across functions in terms of whether they are named, how many named and/or unnamed \code{...} args there are, and their \link[=ppp]{property requirements} as follows:
\tabular{rlll}{
  \strong{Function} \tab    \strong{Number of}        \tab \code{...} \strong{args}       \tab   \strong{Property}
\cr       \strong{Name} \tab    \strong{(named)}          \tab  \strong{(unnamed)}       \tab   \strong{requirement}
\cr   \code{bank_class} \tab    \verb{1+}                 \tab  \code{0}                 \tab   \emph{none}
\cr   \code{bank_chars} \tab    \verb{1+}                 \tab  \verb{1+}                \tab   \code{atomic}\eqn{^b}
\cr    \code{bank_when} \tab    \code{2}                  \tab  \code{2}                 \tab   \link[=atm_scl]{atomic scalar}
\cr    \code{bank_vals} \tab    \verb{1+}                 \tab  \verb{1+}                \tab   \code{atomic}\eqn{^b}
\cr    \code{bank_dots} \tab    \verb{1+}\eqn{^c} or \verb{0+} \tab  \code{0}\eqn{^c} or \verb{0+} \tab   \emph{none}
\cr    \code{bank_fail} \tab    \verb{1+}                 \tab  \code{0}                 \tab   \emph{none}
\cr    \code{bank_funs} \tab    \verb{1+}                 \tab  \code{0}                 \tab   \emph{none}
\cr    \code{bank_spec} \tab    \verb{1+}                 \tab  \code{0}                 \tab   \emph{none}
\cr     \code{bank_err} \tab    \verb{0+}\eqn{^a}         \tab  \verb{0+}\eqn{^a}        \tab   \link[=pop_atm]{populated and atomic}
\cr     \code{bank_lgl} \tab    \verb{1+}                 \tab  \verb{1+}                \tab   \link[=atm_scl]{logical scalar}
\cr     \code{bank_not} \tab    \verb{1+}                 \tab  \code{0}                 \tab   logical scalar
\cr     \code{bank_pop} \tab    \verb{1+}                 \tab  \code{0}                 \tab   \emph{none}
}
\eqn{^{a.}} At least \verb{1 ...} arg in total.
\cr\eqn{^{b.}} When \verb{atm. = TRUE}.
\cr\eqn{^{c.}} When \verb{named. = TRUE}.
}

\seealso{
Other properties: 
\code{\link{as_mmm}},
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{iii}()},
\code{\link{is_unq}()},
\code{\link{meets}()},
\code{\link{mmm_ccc}()},
\code{\link{mmm}()},
\code{\link{ppp}()},
\code{\link{reclass}()},
\code{\link{sss}()},
\code{\link{unq_ccc}()}

Other errs: 
\code{\link{failsafe}()}
}
\concept{errs}
\concept{properties}
