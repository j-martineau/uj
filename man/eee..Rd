% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eee.R
\name{eee.}
\alias{eee.}
\alias{eee}
\alias{neee}
\alias{ie0D}
\alias{ie1D}
\alias{ie2D}
\alias{ieHD}
\alias{ieUD}
\alias{eee_vals}
\alias{ieee}
\title{Effective dimensionality properties}
\usage{
eee.()

eee(x)

neee(x)

ie0D(x)

ie1D(x)

ie2D(x)

ieHD(x)

ieUD(x)

eee_vals()

ieee(x, eee, ...)
}
\arguments{
\item{x}{An object.}

\item{eee}{\link[=cmp_chr_scl]{Complete character scalar} containing one or
more values from \code{eee_vals()} separated by pipes and/or underscores.
Combinations of effective dimensionality properties can be specified by
underscore-delimiting them. Pipe-delimiting effective dimensionality
properties or combinations of effective dimensionality will result in a
value of \code{TRUE} if any of them applies to \code{x}.}

\item{...}{
  Arguments passed on to \code{\link[=meets.]{meets.}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
\tabular{lll}{
\code{eee_vals} and \code{eee}\tab   \tab A character scalar or vector. \cr
\code{neee(x)}                \tab   \tab \code{NaN} or a non-negative
whole-number scalar.          \cr
\code{ieee} and \code{i[eee]} \tab   \tab A logical scalar.               }
}
\description{
Effective dimensionality of a non-empty object is defined as
the number of dimensions with multiple indexed positions. Effective
dimensionality is undefined for empty objects. The following table
describes values of effective dimensionality, property names assigned to
them, and a definition of those values.\tabular{llll}{
NUMBER OF    \tab EFFECTIVE        \tab EFFECTIVE
\tab CHARACTERISTICS\cr
EFFECTIVE    \tab DIMENSIONALITY   \tab DIMENSIONALITY   
\tab OF QUALIFYING\cr
DIMENSIONS   \tab PROPERTY VALUE   \tab PROPERTY NAME   
\tab OBJECTS      \cr
\code{NaN}\tab\code{'eUD'}\tab Effectively dimensionally undefined
\tab \code{NULL} or of length 0.              \cr
\code{0}  \tab\code{'e0D'}\tab Effectively \code{0}-dimensional
\tab Vector of length 1, vlist of length 1, array
of length 1, or code{1 × 1} data.frame   \cr
\code{1}  \tab\code{'e1D'}\tab Effectively \code{1}-dimensional
\tab Vector or vlist of length 2+ or
non-empty array with multiple index
positions in \code{1} dimension.         \cr
\code{2}  \tab\code{'e2D'}\tab Effectively \code{2}-dimensional
\tab Data frames or matrices with multiple rows
and multiple columns and non-empty arrays
with multiple index positions in exactly
\code{2} dimensions.                     \cr
\code{≥ 3}\tab\code{'eHD'}\tab Effectively hyper-dimensional
\tab Non-empty array with multiple index
positions in at least 3 dimensions.        }
Functions related to effective dimensionality are described in the following
table:\tabular{ll}{
FUNCTION          \tab WHAT THE                                           \cr
FORMAT            \tab FUNCTION DOES                                      \cr
\code{i[eee]}     \tab Evaluates whether an object is of the effective
dimensionality represented by \code{[eee]}.        \cr
\code{eee}        \tab Gets a character scalar containing the effective
dimensionality of an object.                       \cr
\code{ieee}       \tab Evaluates an object for a specific effective
dimensionality and any additional properties
specified in \code{...}.                           \cr
\code{neee}       \tab Gets a whole-number scalar giving the number of
effective dimensions.                              \cr
\code{eee_vals}   \tab Gets a character vector of all possible effective
dimensionality property values.                      }
}
\section{Specifying Additional Property Requirements}{

Specifying additional requirements in \code{...} is optional. The full set
of recognized arguments names are defined in the following table along with
the properties each specifies:\tabular{ll}{
NAME          \tab WHAT IT SPECIFIES                                    \cr
\code{n}      \tab Vec of valid lengths/numbers of elements.            \cr
\code{nr}     \tab Vec of valid numbers of rows.                        \cr
\code{nc}     \tab Vec of valid numbers of columns.                     \cr
\code{min}    \tab Scalar minimum valid length/number of element.       \cr
\code{minr}   \tab Scalar minimum valid number of rows.                 \cr
\code{minc}   \tab Scalar minimum valid number of columns.              \cr
\code{max}    \tab Scalar maximum valid length/number of element.       \cr
\code{maxr}   \tab Scalar maximum valid number of rows.                 \cr
\code{maxc}   \tab Scalar maximum valid number of columns.              \cr
\code{vals}   \tab Vec of valid values.                                 \cr
\code{lt}     \tab Scalar value all values of \code{x} must be less
than.                                                \cr
\code{le}     \tab Scalar value all values of \code{x} must be less than or
equal to.                                            \cr
\code{ge}     \tab Scalar value all values of \code{x} must be greater than
or equal to.                                         \cr
\code{gt}     \tab Scalar value all values of \code{x} must be greater
than.                                                  }
}

\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{fff.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{ppp.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()}
}
\concept{props}
