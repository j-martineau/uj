% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recyclableN.R
\encoding{UTF-8}
\name{recyclable_ns}
\alias{recyclable_ns}
\alias{recyclable}
\alias{recycle}
\title{Recycling and recyclability}
\usage{
recyclable_ns(..., .n = NULL, .min = NULL, .max = NULL, .targ = NULL)

recyclable(..., .n = NULL, .min = 1, .max = NULL, .targ = NULL, .err = FALSE)

recycle(..., .n = NULL, .min = 1, .max = NULL, .targ = NULL)
}
\arguments{
\item{...}{For \code{recycle}, named arguments to be recycled in the environment of the calling function. For \code{recyclable_n}, one or more objects containing only positive whole number values (\link[=av]{atomized} before processing).}

\item{.n}{Either \code{NULL} or a \link[=cmp_psw_vec]{complete positive whole-number vec} (?cmp_psw_vec) giving the set of valid recycled argument lengths.}

\item{.min}{Either \code{NULL} or a \link[=cmp_psw_scl]{complete positive whole-number scalar} (?cmp_psw_scl) giving the minimum valid recycled argument length.}

\item{.max}{Either \code{NULL} or a complete positive whole-number scalar giving the maximum valid recycled argument length.}

\item{.targ}{Either \code{NULL} or a complete positive whole-number scalar giving the target length of recycled arguments. May be greater than \code{length(av(...))}.}

\item{.err}{\code{TRUE} or \code{FALSE} indicating whether to throw an error if the \code{...} arguments are not recyclable.}
}
\value{
\strong{A logical scalar}    \cr\cr   \verb{recyclableN, recyclable}
\cr\cr  \emph{\emph{The} \code{NULL} \emph{object}} \cr\cr   \code{recycle}
}
\description{
Check for and conduct recycling in the environment that calls functions from this family.
}
\details{
Arguments are recyclable if all of their lengths are divisors of the argument with the greatest length subject to any settings in the optional arguments \code{ns.}, \code{min.}, \code{max.}, and/or \code{targ.}.
\cr\cr Functions in this family are:
\tabular{ll}{  \code{recyclableN}   \tab Are lengths in \code{...} recyclable?.                 \cr   \tab   \cr
  \code{recyclable}    \tab Are \code{...} arguments are recyclable?               \cr   \tab   \cr
  \code{recycle}       \tab Recycles \code{...} arguments in the calling function.                }
}
\examples{
egN1. <- 1
egN2 <- 1:2
egN3 <- 1:3
egN4 <- 1:4
egC1 <- paste0("'", letters[egN1], "'")
egC2 <- paste0("'", letters[egN2], "'")
egC3 <- paste0("'", letters[egN3], "'")
egC4 <- paste0("'", letters[egN4], "'")

egRecycle <- function(A, B, C) {
  asc <- function(n, v) {paste0(n, " = c(", paste0(v, collapse = ", "), ")")}
  recycle(A = A, B = B, C = C)
  cat(paste0(asc("A", A), "\n", asc("B", B), "\n", asc("C", C)))
}

egRecycle(egN4, egC2, egN1)
egRecycle(egC1, egN2, egC4)
egRecycle(egN3, egC3, egC1)
egRecycle(egN3, egC3, egN3)
recyclableN(1:3)
recyclableN(2, 4, 8)
recyclableN(2, 4, 8, .n = c(2, 4, 8, 16))
recyclableN(2, 4, 8, .min = 4)
recyclableN(2, 4, 8, .max = 4)
recyclableN(2, 4, 8, .targ = 7)
recyclableN(2, 4, 8, .targ = 8)
recyclableN(2, 4, 8, .targ = 16)
recyclable(egN1, egC2, egN3)
recyclable(egN4, egC2, egN1)
recyclable(egC1, egN2, egC4)
recyclable(egN3, egC3, egC1)
recyclable(egN3, egC3, egN3)
}
\seealso{
Other environments: 
\code{\link{callers}()},
\code{\link{os}()},
\code{\link{value_exists}()}

Other meta: 
\code{\link{callers}()},
\code{\link{dot_args}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{purge}()},
\code{\link{run}()}
}
\concept{environments}
\concept{meta}
