% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccc.R
\name{ccc.}
\alias{ccc.}
\alias{iarr}
\alias{idtf}
\alias{igen}
\alias{imat}
\alias{imvc}
\alias{iscl}
\alias{ivec}
\alias{ivls}
\alias{ccc_vals}
\alias{ccc}
\alias{iccc}
\title{Extended class properties}
\usage{
ccc.()

iarr(x)

idtf(x)

igen(x)

imat(x)

imvc(x)

iscl(x)

ivec(x)

ivls(x)

ccc_vals()

ccc(x)

iccc(x, ccc, ...)
}
\arguments{
\item{x}{An object.}

\item{ccc}{\code{NULL} or \link[=cmp_chr_scl]{complete character scalar}
containing one or more values from \code{ccc_vals()} separated by pipes
and/or underscores. Combinations of extended classes can be specified by
separating them with underscores. Separating extended classes or
combinations of extended classes with pipes will result in a value of
\code{TRUE} if any of them applies to \code{x}.}

\item{...}{
  Arguments passed on to \code{\link[=meets.]{meets.}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
\tabular{lll}{
\code{ccc_vals}              \tab   \tab A character vector.            \cr
\code{ccc}                   \tab   \tab A character scalar or vector.  \cr
\code{iccc} and \code{i[ccc]}\tab   \tab A logical scalar.                }
}
\description{
Extended classes are not formally defined, but are dynamically
evaluated. Extended classes come in two varieties: universal and atomic. The
following two tables define each extended class in universal and atomic form,
respectively.:\tabular{lll}{
EXTENDED     \tab PROPERTY     \tab QUALIFYING                            \cr
CLASS        \tab VALUE        \tab OBJECTS                               \cr
vlist        \tab \code{'vls'} \tab Vector-list (i.e., not a data.frame). \cr
data.frame   \tab \code{'dtf'} \tab Data.frame.                           \cr
generic      \tab \code{'gen'} \tab Vector, array, or vlist.              \cr
matrix       \tab \code{'mat'} \tab Matrix.                               \cr
array+       \tab \code{'arr'} \tab Array or vector of any length.        \cr
scalar       \tab \code{'scl'} \tab Array or vector of any length.        \cr
vector+      \tab \code{'vec'} \tab Vector of length 1+ or array of length 1+
with multiple index positions in either 0
or 1 dimensions.                      \cr
multivec     \tab \code{'mvc'} \tab Vector of length 2+ or array of length 2+
with multiple index positions in exactly
1 dimension.                            }
Functions related to extended are described in the following
table:\tabular{ll}{
FUNCTION          \tab WHAT THE                                           \cr
FORMAT            \tab FUNCTION DOES                                      \cr
\code{i[ccc]}       \tab Evaluates whether an object is of the extended class
represented by \code{[ccc]}.                       \cr
\code{ccc}        \tab Gets a character vector containing all extended class
properties of an object.                           \cr
\code{iccc}       \tab Evaluates an object for a specific extended class and
any additional properties specified in \code{...}. \cr
\code{ccc_vals}   \tab Gets a character vector of all possible extended class
type property values.                                }
}
\section{Specifying Additional Property Requirements}{

Specifying additional requirements in \code{...} is optional. The full set
of recognized arguments names are defined in the following table along with
the properties each specifies:\tabular{ll}{
NAME          \tab WHAT IT SPECIFIES                                    \cr
\code{n}      \tab Vec of valid lengths/numbers of elements.            \cr
\code{nr}     \tab Vec of valid numbers of rows.                        \cr
\code{nc}     \tab Vec of valid numbers of columns.                     \cr
\code{min}    \tab Scalar minimum valid length/number of element.       \cr
\code{minr}   \tab Scalar minimum valid number of rows.                 \cr
\code{minc}   \tab Scalar minimum valid number of columns.              \cr
\code{max}    \tab Scalar maximum valid length/number of element.       \cr
\code{maxr}   \tab Scalar maximum valid number of rows.                 \cr
\code{maxc}   \tab Scalar maximum valid number of columns.              \cr
\code{vals}   \tab Vec of valid values.                                 \cr
\code{lt}     \tab Scalar value all values of \code{x} must be less
than.                                                \cr
\code{le}     \tab Scalar value all values of \code{x} must be less than or
equal to.                                            \cr
\code{ge}     \tab Scalar value all values of \code{x} must be greater than
or equal to.                                         \cr
\code{gt}     \tab Scalar value all values of \code{x} must be greater
than.                                                  }
}

\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{ppp.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()}
}
\concept{props}
