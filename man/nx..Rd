% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nx.R
\name{nx.}
\alias{nx.}
\alias{n_is}
\alias{nx}
\alias{ns}
\alias{nmin}
\alias{nmax}
\alias{nsame}
\alias{nw}
\alias{nt}
\alias{nf}
\alias{nu}
\alias{nr}
\alias{nc}
\alias{nch}
\alias{nna}
\alias{nok}
\alias{nat}
\alias{n0}
\alias{n1}
\alias{n2}
\alias{n3}
\alias{n1p}
\alias{n2p}
\alias{n3p}
\alias{nd}
\alias{nd0}
\alias{nd1}
\alias{nd2}
\alias{nd3}
\alias{nd1p}
\alias{nd2p}
\alias{nd3p}
\title{Dedicated counting functions}
\usage{
nx.()

n_is(x, n = NULL, min = NULL, max = NULL, eq = F)

nx(
  ...,
  n = NULL,
  min = NULL,
  max = NULL,
  eq = F,
  a = F,
  na = F,
  vals = NULL,
  lt = NULL,
  le = NULL,
  ge = NULL,
  gt = NULL
)

ns(
  ...,
  n = NULL,
  min = NULL,
  max = NULL,
  na = F,
  vals = NULL,
  lt = NULL,
  le = NULL,
  ge = NULL,
  gt = NULL
)

nmin(..., na = F, vals = NULL, lt = NULL, le = NULL, ge = NULL, gt = NULL)

nmax(..., na = F, vals = NULL, lt = NULL, le = NULL, ge = NULL, gt = NULL)

nsame(
  ...,
  min = NULL,
  max = NULL,
  na = F,
  vals = NULL,
  lt = NULL,
  le = NULL,
  ge = NULL,
  gt = NULL
)

nw(..., n = NULL, min = NULL, max = NULL, eq = F, na = F, a = T)

nt(..., n = NULL, min = NULL, max = NULL, eq = F, na = F, a = T)

nf(..., n = NULL, min = NULL, max = NULL, eq = F, na = F, a = T)

nu(..., n = NULL, min = NULL, max = NULL, eq = F, na = F, a = T)

nr(..., n = NULL, min = NULL, max = NULL, eq = F)

nc(..., n = NULL, min = NULL, max = NULL, eq = F)

nch(..., n = NULL, min = NULL, max = NULL, eq = F, na = F, a = T)

nna(..., n = NULL, min = NULL, max = NULL, eq = F, a = T)

nok(..., n = NULL, min = NULL, max = NULL, eq = F, a = T)

nat(..., n = NULL, min = NULL, max = NULL, eq = F, a = T)

n0(..., na = F, a = T)

n1(..., na = F, a = T)

n2(..., na = F, a = T)

n3(..., na = F, a = T)

n1p(..., na = F, eq = T, a = T)

n2p(..., na = F, eq = T, a = T)

n3p(..., na = F, eq = T, a = T)

nd()

nd0()

nd1()

nd2()

nd3()

nd1p()

nd2p()

nd3p()
}
\arguments{
\item{x}{\link[innw]{Non-negative whole-number} object.}

\item{n}{Optional \link[cmp_nnw_vec]{complete non-negative whole-number vect}
of valid element, row, or column counts.}

\item{min, max}{Optional \link[cmp_nnw_scl]{complete non-negative whole-number
scalars} giving minimum and maximum valid element, row, or column counts.}

\item{eq, na, a}{\link[cmp_lgl_scl]{Complete logical scalars} indicating,
respectively, whether all counts must be equal, whether \code{NA} values
are allowed, and whether to atomize \code{...} to create a single atomic
vector before processing. If \code{a} is \code{FALSE}, each argument in
\code{...} is processed separately.}

\item{...}{One or more arguments to be examined for counts.}

\item{vals}{Optional \link[is_vec]{atomic vec} indicating specific values to
be counted.}

\item{lt, le, .ge, gt}{Optional \link[cmp_scl]{complete atomic scalars}
indicating specific values elements of arguments in \code{...} must be less
than, less than or equal to, greater than or equal to, or greater than,
respectively, to be counted.}
}
\value{
An integer or logical scalar or vector.
}
\description{
Dedicated counting functions
}
\section{Functions}{
\itemize{
\item \code{n_is()}: Check for specific counts, minimum counts, maximum counts,
and equal counts. Returns counts themselves if no checks are specified.

\item \code{nx()}: Length of arguments.

\item \code{ns()}: Lengths of \code{...} arguments.

\item \code{nmin()}: Minimum length of any \code{...} argument.

\item \code{nmax()}: Maximum length of any \code{...} argument.

\item \code{nsame()}: Whether all \code{...} arguments have the same length.

\item \code{nw()}: Number of \code{TRUE} elements.

\item \code{nt()}: Number of \code{TRUE} elements.

\item \code{nf()}: Number of \code{FALSE} elements.

\item \code{nu()}: Number of unique elements.

\item \code{nr()}: Number of rows.

\item \code{nc()}: Number of columns.

\item \code{nch()}: Number of characters in each element.
argument.

\item \code{nna()}: Number of \code{NA} values.

\item \code{nok()}: Number of non-\code{NA} values.

\item \code{nat()}: Number of atomic elements.

\item \code{n0()}: Is the number of elements 0?

\item \code{n1()}: Is the number of elements 1?

\item \code{n2()}: Is the number of elements 2?

\item \code{n3()}: Is the number of elements 3?

\item \code{n1p()}: Is the number of elements 1 or gerater?

\item \code{n2p()}: Is the number of elements 2 or greater?

\item \code{n3p()}: Is the number of elements 3 or greater?

\item \code{nd()}: Is the number of dot arguments 0?

\item \code{nd0()}: Is the number of dot arguments 0?

\item \code{nd1()}: Is the number of dot arguments 1?

\item \code{nd2()}: Is the number of dot arguments 2?

\item \code{nd3()}: Is the number of dot arguments 2?

\item \code{nd1p()}: Is the number of dot arguments 1 or greater?

\item \code{nd2p()}: Is the number of dot arguments 2 or greater?

\item \code{nd3p()}: Is the number of dot arguments 3 or greater?

}}
\examples{
N <- 0:15
n_is(N, n = 0:5)
n_is(N, min = 3, max = 12)
n_is(N, eq = T)
n_is(rep(0, 3), eq = T)
nx(letters, LETTERS, 0:9, NULL)
nx(letters, LETTERS, 0:9, vals = letters)
nx(letters, LETTERS, vals = letters)
nx(letters, LETTERS, le = "M", ge = "m")
nx(letters, LETTERS, lt = "M", gt = "m")
n0(letters, LETTERS, TRUE, 0:1, 0:2, 0:9)
n1(letters, LETTERS, TRUE, 0:1, 0:2, 0:9)
n1p(letters, LETTERS, TRUE, 0:1, 0:2, 0:9)
n2p(letters, LETTERS, TRUE, 0:1, 0:2, 0:9)
nmin(letters, LETTERS, 0:9)
nmax(letters, LETTERS, 0:9)
nsame(letters, LETTERS, 0:9)
nsame(letters, LETTERS)
nsame(letters, LETTERS, lt = "M", gt = "m")
nmin(letters, LETTERS, 0:9, min = 11)
nmax(letters, LETTERS, 0:9, max = 11)
nsame(letters, LETTERS, 0:9, min = 11, max = 25)
nw(0:99 \%in\% 50:59, 0:99 \%in\% 41:49)
nw(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, n = 0:9)
nw(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, min = 9, max = 19)
nw(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, min = 9, max = 19, eq = T)
nf(0:99 \%in\% 50:59, 0:99 \%in\% 41:49)
nf(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, n = 0:9)
nf(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, min = 9, max = 19)
nf(0:99 \%in\% 50:59, 0:99 \%in\% 41:49, min = 9, max = 19, eq = T)
nr(tibble(letters, LETTERS), matrix(c(letters, LETTERS), nrow = 2))
nc(tibble(letters, LETTERS), matrix(c(letters, LETTERS), nrow = 2))
nch(letters, eq = T)
nch(letters, "a string")
nch(letters, "a string", a = T)
}
\seealso{
Other extensions: 
\code{\link{a.}()},
\code{\link{binfuns.}()},
\code{\link{callers.}()},
\code{\link{case.}()},
\code{\link{dots.}()},
\code{\link{ex.}()},
\code{\link{failsafe.}()},
\code{\link{files.}()},
\code{\link{fork.}()},
\code{\link{fsub.}()},
\code{\link{is_failsafe.}()},
\code{\link{is_unq.}()},
\code{\link{logicals.}()},
\code{\link{make.}()},
\code{\link{n_th.}()},
\code{\link{na.}()},
\code{\link{naming.}()},
\code{\link{os.}()},
\code{\link{pause.}()},
\code{\link{ply.}()},
\code{\link{put.}()},
\code{\link{reclass.}()},
\code{\link{recycling.}()},
\code{\link{run.}()},
\code{\link{stats.}()},
\code{\link{swap.}()},
\code{\link{values.}()},
\code{\link{x.}()},
\code{\link{xb.}()}
}
\concept{extensions}
