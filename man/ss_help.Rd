% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ss_funs.R
\encoding{UTF-8}
\name{ss_help}
\alias{ss_help}
\alias{ss}
\alias{sstb}
\alias{ss0}
\alias{chars}
\alias{ch}
\alias{ss1}
\alias{ssp}
\alias{ssd}
\alias{ssb}
\alias{sspd}
\alias{sspb}
\alias{ssdb}
\alias{sspdb}
\alias{uss}
\alias{uss0}
\alias{uchars}
\alias{uch}
\alias{usstb}
\alias{uss1}
\alias{ussp}
\alias{ussd}
\alias{ussb}
\alias{usspd}
\alias{usspb}
\alias{ussdb}
\alias{usspdb}
\title{Split strings and select/check for elements}
\usage{
ss_help()

ss(d, ..., trm = TRUE, sqz = TRUE, drop = TRUE, u = FALSE, n = NULL)

sstb(
  d,
  ...,
  name = "string",
  part = "part",
  trm = TRUE,
  sqz = TRUE,
  drop = TRUE,
  u = FALSE,
  n = NULL
)

ss0(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

chars(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ch(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ss1(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ssp(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ssd(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ssb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

sspd(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

sspb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

ssdb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

sspdb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL, u = FALSE)

uss(d, ..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

uss0(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

uchars(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

uch(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

usstb(
  d,
  ...,
  name = "string",
  part = "part",
  trm = TRUE,
  sqz = TRUE,
  drop = TRUE,
  n = NULL
)

uss1(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

ussp(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

ussd(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

ussb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

usspd(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

usspb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

ussdb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)

usspdb(..., trm = TRUE, sqz = TRUE, drop = TRUE, n = NULL)
}
\arguments{
\item{d}{A complete character vec of a delimiter or delimiters to use in splitting strings.}

\item{...}{An arbitrary number of objects to be \link[=av]{atomized} before splitting.}

\item{trm}{\code{TRUE} or \code{FALSE} indicating whether to trim white space from each side of each element of the result.}

\item{sqz}{\code{TRUE} or \code{FALSE} indicating whether to squeeze the result by removing extra internal whitespace.}

\item{drop}{\code{TRUE} or \code{FALSE}. For functions associated character-wise splitting (i.e., ending in \code{0} or \code{ch}), indicates whether to drop resulting values that are not letters, digits, or spaces. For all others, indicates whether to drop resulting blank string values.}

\item{u}{complete non-\code{NA} scalar indicating whether to reduce the result to unique values.}

\item{n}{An optional \link[=cmp_psw_scl]{complete positive whole-number vec} specifying one or more elements to be extracted from the result.}

\item{name}{A \link[=cmp_chr_scl]{complete character scalar} name of the variable to hold the original strings.}

\item{part}{A complete character scalar prefix for labeling components of vectors resulting from split strings.}

\item{x}{A \link[=chr_vec]{character vec} of string(s) to be split.}
}
\description{
\emph{Order of operations}
\cr\cr All functions in this family follow the same order of operations based on processing specs in \code{d}, \code{trm}, \code{sqz}, \code{n}, and \code{u} in performing string splitting:
\itemize{\item \link[=av]{Atomize} \code{...}, collapsing it to a simple atomic vector.
\item Coerce the result to a character vector.
\item Split each element of the vector along the delimiter(s) in \code{d}, producing a potentially longer character vector.
\item If \code{n} is not \code{NULL}, extract the \code{n}-th elements(s) from the result.
\item If \code{trm = TRUE}, trim white space (i.e., spaces, tabs, newlines) from both ends of each element of the result.
\item If \code{sqz = TRUE}, remove leading and trailing white space and replace any multi character interior white-space sequences inside the result with a single space.
\item If \code{u = TRUE}, reduce the result to unique values.}
}
\section{Functions}{
\itemize{
\item \code{ss()}: Splits strings in \code{...} along the delimiter \code{d} subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{u}, and \code{n}. Returns a character vector.

\item \code{sstb()}: Requires that splitting each element of \code{x} along the delimiter \code{d} and post-processing the results based on optional args \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u} will result in vectors of the same length. Those resulting same-length vectors are then placed into a data.frame. For example, the following console excerpt demonstrates a call to \code{ss_tb} and its result.

\if{html}{\out{<div class="sourceCode">}}\preformatted{> sstb('|', 'a|b|c|d', 'e|f|g|h', 'i|j|k|l', 'm|n|o|p', name = 'original', part = 'letter')

  original letter.1 letter.2 letter.3 letter.4
1  a|b|c|d        a        b        c        d
2  e|f|g|h        e        f        g        h
3  i|j|k|l        i        j        k        l
4  m|n|o|p        m        n        o        p
}\if{html}{\out{</div>}}

\item \code{ss0()}: Split strings in \code{...} into constituent characters subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector composed of single characters.

\item \code{chars()}: An alias for \code{ss0(.)}

\item \code{ch()}: An alias for \code{ss0(.)}

\item \code{ss1()}: Splits strings in \code{...} using a space (\code{' '}) as a delimiter, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{ssp()}: Splits strings in \code{...} using a pipe (\code{'|'}) as a delimiter, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{ssd()}: Splits strings in \code{...} using a dot/period (\code{'.'}) as a delimiter, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{ssb()}: Splits strings in \code{...} using a broken pipe (\code{'¦'}) as a delimiter, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{sspd()}: Splits strings in \code{...} using both pipes (\code{'|'}) and dots/periods (\code{'.'}) as delimiters, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{sspb()}: Splits strings in \code{...} using both pipes (\code{'|'}) and broken pipe (\code{'¦'}) as delimiters, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{ssdb()}: Splits strings in \code{...} using both dots/periods (\code{'.'}) and broken pipe (\code{'¦'}) as delimiters, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{sspdb()}: Splits strings in \code{...} using pipes (\code{'|'}), dots/periods (\code{'.'}), and broken pipe (\code{'¦'}) as delimiters, subject to processing specs in \code{trm}, \code{sqz}, \code{drop}, \code{n}, and \code{u}. Returns a character vector.

\item \code{uss()}: Splits strings in \code{...} using the delimiter \code{d} and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{uss0()}: Splits strings in \code{...} into constituent character and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{uchars()}: An alias for \code{uss0}.

\item \code{uch()}: An alias for \code{uss0}.

\item \code{usstb()}: Calls \code{sstb} and returns only unique rows of the result,  with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a data.frame.

\item \code{uss1()}: Splits strings in \code{...} using a space (\code{' '}) as delimiter and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{ussp()}: Splits strings in \code{...} using a pipe (\code{'|'}) as delimiter and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{ussd()}: Splits strings in \code{...} using a dot/period (\code{'.'}) as delimiter and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{ussb()}: Splits strings in \code{...} using a broken pipe (\code{'¦'}) as delimiter and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{usspd()}: Splits strings in \code{...} using pipes (\code{'|'}) and dots/periods (\code{'.'}) as delimiters and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{usspb()}: Splits strings in \code{...} using pipes (\code{'|'}) and broken pipes (\code{'¦'}) as delimiters and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{ussdb()}: Splits strings in \code{...} using dots/periods (\code{'.'}) and broken pipes (\code{'¦'}) as delimiters and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

\item \code{usspdb()}: Splits strings in \code{...} using pipes (\code{'|'}), dots/periods (\code{'.'}), and broken pipes (\code{'¦'}) as delimiters and returns the unique values with pre-processing subject to specs in \code{trm}, \code{sqz}, and \code{drop} and post-processing subject to \code{n}. Returns a character vector.

}}
\examples{
ss("", "super-cooled")
ss("|", "super||cooled", "super|heated")
ss0("super-cooled", "super-heated")
ss1("super cooled", "super heated")
ssp("super|cooled", "super|heated", u = TRUE)
ssd("super.cooled", "super.heated")
ssb("super¦cooled", "super¦heated")
sspd("super|cooled", "super.heated")
sspb("super|cooled", "super¦heated")
ssdb("super.cooled", "super¦heated")
sspdb("super|cooled¦|super|heated", u = TRUE)
sspdb(" super|cooled  ¦super..  heated", n = 3)
sspdb(" super|cooled  ¦super..  heated", trm = F, sqz = F, drop = F, n = 3)
uss("", "super-cooled")
uss("|", "super|cooled", "super|heated")
uss0("super-cooled", "super-heated")
uss1("super cooled", "super heated")
ussp("super|cooled", "super|heated")
ussp("super|cooled", "super|heated")
ussd("super.cooled", "super.heated")
ussb("super¦cooled", "super¦heated")
usspd("super|cooled", "super.heated")
usspb("super|cooled", "super¦heated")
ussdb("super.cooled", "super¦heated")
usspdb("super|cooled¦super|heated")
sstb("|", 'a|b|c|d', 'e|f|g|h', 'i|j|k|l', 'm|n|o|p')
sstb("|", 'a|b|c|d', 'e|f|g|h', 'i|j|k|l', 'm|n|o|p', name = 'original', part = 'letter')
}
\seealso{
Other strings: 
\code{\link{blank}()},
\code{\link{chn}()},
\code{\link{delim}()},
\code{\link{fsub}()},
\code{\link{gr}},
\code{\link{ipat}()},
\code{\link{makestr}()},
\code{\link{markdown_help}()},
\code{\link{maxnch}()},
\code{\link{ox}()},
\code{\link{ox_vals}()},
\code{\link{pgrid_help}()},
\code{\link{revstr}()},
\code{\link{spaces}()},
\code{\link{tocase}()},
\code{\link{weave}()}

Other chars: 
\code{\link{chn}()},
\code{\link{maxnch}()},
\code{\link{revstr}()},
\code{\link{spaces}()}
}
\concept{chars}
\concept{strings}
