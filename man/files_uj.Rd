% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files.R
\name{files_uj}
\alias{files_uj}
\alias{is_path}
\alias{as_path}
\alias{object_path}
\alias{parent_path}
\alias{object_name}
\alias{parent_name}
\alias{object_dirs}
\alias{parent_dirs}
\alias{newdirs}
\title{Evaluate and Manipulate Paths to Files or Folders}
\usage{
is_path(..., err = F)

as_path(...)

object_path(path, err = T)

parent_path(path, err = T)

object_name(path, err = T)

parent_name(path, err = T)

object_dirs(path, err = T)

parent_dirs(path, err = T)

newdirs(dirs, path = NULL)
}
\arguments{
\item{...}{Atomic arguments pasted to create}

\item{err}{\link[=cmp_atm_scl]{Complete logical scalar} indicating whether an
error should be thrown if \code{...} is not a valid object path when
collapsed to a character scalar.}

\item{path}{A \link[=cmp_chr_scl]{complete character scalar} path to either a
directory or a file.}

\item{dirs}{A \link[=cmp_chr_vec]{complete character vec} of new sub-directory
names.}
}
\value{
\tabular{ll}{
FUNCTIONS                      \tab RETURN VALUE                        \cr
\code{is_path}                      \tab A logical scalar.                   \cr
\code{object_path}, \code{folder_path}   \tab A character scalar.                 \cr
\code{object_name}, \code{folder_name}   \tab A character scalar.                 \cr
\code{object_dirs}, \code{folder_dirs}   \tab A character vector.                   }
}
\description{
\tabular{ll}{
FUNCTION        \tab WHAT IT DOES                                       \cr
\code{is_path}        \tab Check whether \code{...} resolves to a valid path for an
object (file or folder) when \code{...} arguments are
collapsed into a character scalar.                 \cr
\code{as_path}       \tab Collapse \code{...} into a path using the current platform
file path separator \code{.Platform$file.sep}.          \cr
\code{object_path}   \tab Collapse \code{...} into a character scalar and expand the
path to the object indicated by the result to account
for relative paths.                                \cr
\code{parent_path}   \tab Call \code{object_path} and extract from the resulting
character scalar just the path to the parent folder of
the object specified by \code{...} (i.e., discarding the
name of the object itself).                        \cr
\code{object_name}   \tab Call \code{object_path} and extract from the resulting
character scalar just the name of the object,
discarding the path to its parent.                 \cr
\code{parent_name}   \tab Call \code{parent_path} and extract from the resulting
character scalar just the name of last folder in the
path.                                              \cr
\code{object_dirs}   \tab Call \code{object_path} and split the resulting character
scalar into a character vector containing the name of
the root folder, the names of any intermediate
folders, the name of the parent folder of the object,
and the name of the object.                        \cr
\code{parent_dirs}   \tab Call \code{folder_path} and split the resulting character
scalar into a character vector containing the name of
the root folder, the names of any intermediate
folders, and the name of the parent folder of the
object specified by \code{...}.                         \cr
\code{new_dirs}      \tab Creates sub-directories within an existing directory,
optionally asking the user to choose that existing
directory.                                           }
}
\details{
In most cases, if (optionally) specified, functions throw an error
if \code{...} does not resolve to a valid object path.
}
\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{binfuns}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{make_uj}},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{os}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put}()},
\code{\link{reclass}()},
\code{\link{recycling}},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uj_logicals}},
\code{\link{xb}()}
}
\concept{extensions}
\concept{files}
