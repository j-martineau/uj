% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files.R
\name{files_uj}
\alias{files_uj}
\alias{is_path}
\alias{as_path}
\alias{object_path}
\alias{parent_path}
\alias{object_name}
\alias{parent_name}
\alias{object_dirs}
\alias{parent_dirs}
\alias{newdirs}
\title{Evaluate and Manipulate Paths to Files or Dolders on Disk}
\usage{
is_path(..., err = F)

as_path(...)

object_path(path, err = T)

parent_path(path, err = T)

object_name(path, err = T)

parent_name(path, err = T)

object_dirs(path, err = T)

parent_dirs(path, err = T)

newdirs(dirs, path = NULL)
}
\arguments{
\item{...}{Atomic arguments pasted to create}

\item{err}{\link[=cmp_atm_scl]{Complete logical scalar} indicating whether an
error should be thrown if \code{...} is not a valid object path when
collapsed to a character scalar.}

\item{path}{\link[=cmp_chr_scl]{Complete character scalar} path to either a
directory or a file.}

\item{dirs}{\link[=cmp_chr_vec]{Complete character vec} of new sub-directory
names.}
}
\value{
\strong{\code{is_path}}
\cr A logical scalar.
\cr\cr
\strong{\code{object_path, folder_path, object_name, folder_name}}
\cr A character scalar.
\cr\cr
\strong{\code{object_dirs, folder_dirs}}
\cr A character vector.
}
\description{
Evaluate and Manipulate Paths to Files or Dolders on Disk
}
\details{
In most cases, if (optionally) specified, functions throw an error
if \code{...} does not resolve to a valid object path.
}
\section{Functions in this Family}{

\strong{\code{is_path}}
\cr Checks whether \code{...} resolves to a valid path for an object (file
or folder) when \code{...} arguments are collapsed into a character
scalar.
\cr\cr
\strong{\code{as_path}}
\cr Collapses \code{...} into a path using the current platform file path
separator (\code{.Platform$file.sep}).
\cr\cr
\strong{\code{object_path}}
\cr Collapses \code{...} into a character scalar and expands the path to
the object indicated by the result to account for relative paths.
\cr\cr
\strong{\code{parent_path}}
\cr Calls \code{object_path} and extracts from the resulting character
scalar just the path to the parent folder of the object specified by
\code{...} (i.e., discarding the name of the object itself).
\cr\cr
\strong{\code{object_name}}
\cr Calls \code{object_path} and extracts from the resulting character
scalar just the name of the object, discarding the path to its parent.
\cr\cr
\strong{\code{parent_name}}
\cr Call \code{parent_path} and extracts from the resulting character
scalar just the name of last folder in the path
\cr\cr
\strong{\code{object_dirs}}
\cr Calls \code{object_path} and splits the resulting character scalar into
a character vector containing the name of the root folder, the names of any
intermediate folders, the name of the parent folder of the object, and the
name of the object.
\cr\cr
\strong{\code{parent_dirs}}
\cr Calls \code{folder_path} and splits the resulting character scalar into
a character vector containing the name of the root folder, the names of any
intermediate folders, and the name of the parent folder of the object
specified by \code{...}.
\cr\cr
\strong{\code{new_dirs}}
\cr Creates sub-directories within an existing directory, optionally asking
the user to choose that existing directory.
}

\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{binfuns}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{make_uj}},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{os}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put}()},
\code{\link{reclass}()},
\code{\link{recycling}},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uj_logicals}},
\code{\link{xb}()}
}
\concept{extensions}
\concept{files}
