% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/na_vals.R
\name{na}
\alias{na}
\alias{ok}
\alias{sub_na}
\alias{nas}
\alias{oks}
\alias{rm_na}
\title{Manage \code{NA} and non-\code{NA} values}
\usage{
na(x)

ok(x)

sub_na(x, s)

nas(x)

oks(x)

rm_na(x)
}
\arguments{
\item{x}{The argument to be inspected/managed.}

\item{s}{\link[=atm_scl]{Atomic scalar} to replace \code{NA} values. Mode must
be \code{\link{compatible}} with \code{x}.}
}
\value{
\tabular{lll}{
\code{na} and \code{ok}  \tab   \tab A logical object of the same dimension
as \code{x}.                        \cr
\code{nas} and \code{oks}\tab   \tab A logical scalar.                   \cr
\code{rm_na}             \tab   \tab Either an atomic vector or \code{x}.\cr
\code{sub_na}            \tab   \tab \code{x} with \code{NA} values
replaced.                            }
}
\description{
All functions in this group take objects of atomic mode,
\link[=atm_dtf]{atomic dtfs}, or \link[=atm_vls]{atomic vlists}.
\cr\cr
\code{na}
\cr Indexes \code{NA} values of \code{x}.
\cr\cr
\code{ok}
\cr Indexes non-\code{NA} values of \code{x}.
\cr\cr
\code{nas}
\cr Evaluates whether \code{x} an \code{NA} scalar.
\cr\cr
\code{oks}
\cr Evaluates whether \code{x} a non-\code{NA} scalar.
\cr\cr
\code{rm_na}
\cr Removes \code{NA} values of \code{x}. If there are no \code{NA} values
in \code{x}, this function returns \code{x} unchanged. \strong{However}, if
there are \code{NA} values in \code{x}, by removing \code{NA} values from
\code{x}, this function changes the dimensions of and/or class of \code{x}.
If \code{x} is an array or an \code{\link[atm_dtf]{atomic data.frame}}, its
class is reduced to an atomic vector sans \code{NA} values. If \code{x} is
an \code{\link[=atm_vls]{atomic vlist}}, any elements with \code{NA} values
are reduced to atomic vectors sans their \code{NA} values.
\cr\cr
\code{sub_na}
\cr Substitutes \code{s} for \code{NA} values of \code{x}. Modes of
\code{x} and \code{s} must be compatible (\code{\link{=compatible}}).
}
\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{binfuns}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{files_uj}},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{logicals_uj}()},
\code{\link{make_uj}},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{os}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put.}()},
\code{\link{reclass}()},
\code{\link{recycling}},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{xb}()}
}
\concept{extensions}
