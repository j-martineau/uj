% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case.R
\name{case_uj}
\alias{case_uj}
\alias{case}
\title{Case as an extension of switch}
\usage{
case_uj()

case(name., ..., names. = NULL, def. = "err")
}
\arguments{
\item{name.}{\code{NULL} or an atomic scalar naming an argument in
\code{...}. \code{NULL} is converted to \code{'NULL'} and \code{NA} is
converted to \code{'NA'}. Coerced to mode character.}

\item{...}{Any number of uniquely named arguments to select from to be the
return value. Selection is based on which element's name equals the value
of \code{name.}. When there is no match, if \code{def.} is \code{'err'}, an
error is thrown, otherwise \code{def.} is returned as the default value.}

\item{names.}{Either \code{NULL} or a character scalar/vector. If this
argument is of mode character, it is split using pipe (\code{'|'})
delimiters. Its length (after potential splitting) must match the number of
arguments in \code{...}. Values of \code{names.} must be unique.}

\item{def.}{The default value to return if no match is found, unless
\code{def.} is the character scalar \code{'err'}. In that case, if no match
is found, an error is thrown.}
}
\value{
Either the value of an argument selected from \code{...} or the value
of \code{def.}.
}
\description{
Case as an extension of switch
}
\section{Functions}{
\itemize{
\item \code{case}: Takes a name (i.e., any atomic scalar) and matches that
name to the name matching an element of \code{...} where matching can be
achieved by matching the name of an argument in \code{...}. When names are
supplied via \code{names.}, they substituted for the names of arguments in
\code{...}. When no match is found and \code{def. = "err"} an error is
thrown, otherwise, the value of \code{def.} is returned.
}}

\seealso{
Other meta: 
\code{\link{av_uj}()},
\code{\link{bin_uj}()},
\code{\link{callers_uj}()},
\code{\link{dots_uj}()},
\code{\link{ex_uj}()},
\code{\link{failsafe_uj}()},
\code{\link{fork_uj.}()},
\code{\link{fx_uj}()},
\code{\link{is_failsafe_uj}()},
\code{\link{is_unique_uj}()},
\code{\link{logicals_uj}()},
\code{\link{make_uj}()},
\code{\link{n_uj}},
\code{\link{na_vals_uj}()},
\code{\link{names_uj}()},
\code{\link{os_uj}()},
\code{\link{ply_uj}()},
\code{\link{put_uj}()},
\code{\link{reclass_uj}()},
\code{\link{recycling_uj}()},
\code{\link{reps_uj}()},
\code{\link{run_uj}()},
\code{\link{swap_uj}()},
\code{\link{values_uj}()},
\code{\link{x_uj}()},
\code{\link{xb_uj}()}

Other fork: 
\code{\link{fork_uj.}()},
\code{\link{fx_uj}()}
}
\concept{fork}
\concept{meta}
