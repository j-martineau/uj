% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dups.R
\encoding{UTF-8}
\name{dups}
\alias{dups}
\alias{idups}
\title{Duplicate values.}
\usage{
dups(...)

idups(x, .INT = F)
}
\arguments{
\item{...}{One or more atomic vectors to be evaluated for duplicated values.}

\item{x}{An \link[=atm_vec]{atomic vec}.}

\item{.INT}{\code{TRUE} or \code{FALSE} indicating whether to return a logical vector (\code{.INT = FALSE}) or an integer vector (\code{.INT = TRUE}).}
}
\value{
\strong{A logical vector} (when \verb{.INT = FALSE)} \cr\cr \code{idups}
\cr\cr  \strong{An integer vector} (when \verb{.INT = TRUE}) \cr\cr \code{idups}
\cr\cr  \strong{An atomic vector}                      \cr\cr \code{dups}
}
\description{
Extensions of \code{\link[base]{duplicated}}. Logically and numerically index duplicate values.
}
\details{
\tabular{ll}{  \code{idups}   \tab Indexes all elements of \code{x} that are duplicates of its earlier element, either as a logical vector of the same length as \code{x} (when \code{.INT = FALSE})
or as an integer vector whose length is the same as the number of elements in \code{x} that are duplicates of earlier elements (when \code{.INT = TRUE}).    \cr   \tab   \cr
  \code{dups}    \tab \link[=av]{Atomizes} \code{...}, then reduce the resulting vector to contain one copy of each duplicated element.                                                     }
}
\examples{
dups(0:5, 5:10, 10:15, 15:20)
idups(c(0:5, 5:10, 10:15, 15:20))
idups(c(0:5, 5:10, 10:15, 15:20), .INT = T)
}
\seealso{
Other extensions: 
\code{\link{N}()},
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{failsafe}()},
\code{\link{flex_rbind}()},
\code{\link{fork}()},
\code{\link{is_unique}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}()},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{sum0}()},
\code{\link{swap}()},
\code{\link{value_exists}()}
}
\concept{extensions}
