% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callers.R
\name{callers.}
\alias{callers.}
\alias{callers}
\alias{caller}
\alias{ncallers}
\title{Functions in the Call Stack}
\usage{
callers.()

callers(gens. = NULL)

caller()

ncallers()
}
\arguments{
\item{gens.}{Positive whole-number vec giving the number(s) of generations
back in the function call stack to go.}
}
\value{
\code{callers} and \code{caller} return a character scalar or vector.
\code{ncallers} returns a non-negative whole-number scalar.
}
\description{
Functions in the Call Stack
}
\section{Functions}{
\itemize{
\item \code{callers()}: Gets names of all calling functions, with the immediate
calling function in the first position and, if \code{gens.} is not
\code{NULL}, selects the \code{gens.}-th element(s) from the call stack.

\item \code{caller()}: Get the immediate calling function.

\item \code{ncallers()}: Get the number of calling functions in the call stack.

}}
\examples{
fun.a <- function() {A <- 0; fun.b()}
fun.b <- function() {B <- 1; fun.c()}
fun.c <- function() {
  cat("\n callstack(): " , paste0("'", callstack(), "'"))
  cat("\n caller(1)  : '", caller(1), "'")
  cat("\n caller(2)  : '", caller(2), "'")
  cat("\n exist('A', err = F, gens = 1): ", exist('A', err = F, gens = 1))
  cat("\n exist('A', err = F, gens = 2): ", exist('A', err = F, gens = 2))
  cat("\n exist('B', err = F, gens = 1): ", exist('B', err = F, gens = 1))
  cat("\n exist('B', err = F, gens = 2): ", exist('B', err = F, gens = 2))
  cat("\n vget('A', err = F, gens = 2) : ", vget('A', err = F, gens = 2))
  cat("\n vget('A', err = F, gens = 1) : ", vget('A', err = F, gens = 1))
  cat("\n vget('B', err = F, gens = 2) : ", vget('B', err = F, gens = 2))
  cat("\n vget('B', err = F, gens = 1) : ", vget('B', err = F, gens = 1))
  vSet('A', 'A', gens = 2)
  vSet('B', 'B', gens = 1)
  cat("\n vget('A', gens = 2) : ", vget('A', err = F, gens = 2))
  cat("\n vget('B', gens = 1) : ", vget('B', err = F, gens = 1))
}
fun.a()
}
\seealso{
Other extensions: 
\code{\link{a.}()},
\code{\link{binfuns.}()},
\code{\link{case.}()},
\code{\link{dots.}()},
\code{\link{ex.}()},
\code{\link{failsafe.}()},
\code{\link{files.}()},
\code{\link{fork.}()},
\code{\link{fsub.}()},
\code{\link{is_failsafe.}()},
\code{\link{is_unq.}()},
\code{\link{logicals.}()},
\code{\link{make.}()},
\code{\link{n_th.}()},
\code{\link{na.}()},
\code{\link{naming.}()},
\code{\link{nx.}()},
\code{\link{os.}()},
\code{\link{pause.}()},
\code{\link{ply.}()},
\code{\link{put.}()},
\code{\link{reclass.}()},
\code{\link{recycling.}()},
\code{\link{run.}()},
\code{\link{stats.}()},
\code{\link{swap.}()},
\code{\link{values.}()},
\code{\link{x.}()},
\code{\link{xb.}()}

Other environments: 
\code{\link{os.}()},
\code{\link{recycling.}()},
\code{\link{run.}()},
\code{\link{values.}()}
}
\concept{environments}
\concept{extensions}
