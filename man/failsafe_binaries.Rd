% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/failsafe_binaries.R
\encoding{UTF-8}
\name{failsafe_binaries}
\alias{failsafe_binaries}
\alias{\%IS\%}
\alias{\%ISNT\%}
\alias{\%EQ\%}
\alias{\%NEQ\%}
\alias{\%NOR\%}
\alias{\%AND\%}
\alias{\%OR\%}
\alias{\%ONE\%}
\alias{\%IN\%}
\alias{\%OUT\%}
\alias{\%HAS\%}
\alias{\%LACKS\%}
\title{Failsafe binary logical functions}
\usage{
x \%IS\% y

x \%ISNT\% y

x \%EQ\% y

x \%NEQ\% y

x \%NOR\% y

x \%AND\% y

x \%OR\% y

x \%ONE\% y

x \%IN\% y

x \%OUT\% y

x \%HAS\% y

x \%LACKS\% y
}
\arguments{
\item{x, y}{Any R objects.}
}
\value{
A logical scalar.
}
\description{
Binary functions that always produce either \code{TRUE} or \code{FALSE} unless calling \code{identity(x)} or \code{identity(y)} produces an error.
\cr\cr These functions evaluate whether two variables meet requirements as defined in the following table:
\tabular{rl}{
\verb{\%HAS\%}   \tab Atomic object \code{x} has (contains) atomic scalar \code{y}\eqn{^a}.
\cr               \tab  
\cr   \verb{\%LACKS\%}   \tab Atomic object \code{x} lacks (does not contain) atomic scalar \code{y}\eqn{^a}.
\cr               \tab  
\cr      \verb{\%IN\%}   \tab Atomic scalar \code{x} is contained in atomic object \code{y}\eqn{^b}.
\cr               \tab  
\cr     \verb{\%OUT\%}   \tab Atomic scalar \code{x} is outside of (not contained in) atomic object \code{y}\eqn{^b}.
\cr               \tab  
\cr      \verb{\%IS\%}   \tab \code{x} and \code{y} are \code{\link[base]{identical}}.
\cr               \tab  
\cr    \verb{\%ISNT\%}   \tab \code{x} and \code{y} are \emph{not} \code{\link[base]{identical}}.
\cr               \tab  
\cr      \verb{\%EQ\%}   \tab \code{x} and \code{y} are \code{\link[base]{setequal}}\eqn{^c}.
\cr               \tab  
\cr     \verb{\%NEQ\%}   \tab \code{x} and \code{y} are \emph{not} \code{\link[base]{setequal}}\eqn{^c}.
\cr               \tab  
\cr     \verb{\%NOR\%}   \tab Neither \code{x} nor \code{y} is scalar \code{TRUE}.
\cr               \tab  
\cr     \verb{\%AND\%}   \tab Both \code{x} and \code{y} are scalar \code{TRUE}.
\cr               \tab  
\cr     \verb{\%ONE\%}   \tab Either \code{x} is scalar \code{TRUE}, \code{y} is scalar \code{TRUE}, but not both.
\cr               \tab  
\cr      \verb{\%OR\%}   \tab \code{x} is scalar \code{TRUE}, \code{y} is scalar \code{TRUE}, or both.
}
   \eqn{^{a.}} If \code{x} is not atomic scalar, \code{y} is not atomic, or \code{x} and \code{y} are not compatible, \verb{\%HAS\%} and \verb{\%LACKS\%} return \code{FALSE} and \code{TRUE}, respectively.
\cr
\cr    \eqn{^{b.}} If \code{x} is not atomic, \code{y} is not atomic scalar, or \code{x} and \code{y} are not compatible, \verb{\%IN\%} and \verb{\%OUT\%} return \code{FALSE} and \code{TRUE}, respectively.
\cr
\cr    \eqn{^{c.}} If \code{x} and \code{y} are not \code{\link{compatible}}, \verb{\%EQ\%} and \verb{\%NEQ\%} return \code{FALSE} and \code{TRUE}, respectively.
}
\examples{
abc <- c("a", "b", "c")
ABC <- abc
attr(ABC, "custom") <- "custom"

abc \%IS\% letters[1:3]
abc \%IS\% ABC
abc \%IS\% NULL

abc \%EQ\% letters[1:3]
abc \%EQ\% ABC
abc \%EQ\% NULL

NULL \%IN\% abc
"a" \%IN\% abc
1 \%IN\% abc

NULL \%OUT\% abc
"a" \%OUT\% abc
1 \%OUT\% abc

abc \%HAS\% NULL
abc \%HAS\% "a"
abc \%HAS\% 1

abc \%LACKS\% NULL
abc \%LACKS\% "a"
abc \%LACKS\% 1

FALSE \%OR\% FALSE
TRUE \%OR\% TRUE
TRUE \%OR\% 42
"A" \%OR\% FALSE

FALSE \%AND\% FALSE
TRUE \%AND\% TRUE
TRUE \%AND\% 42
"A" \%AND\% FALSE

FALSE \%NOR\% FALSE
TRUE \%NOR\% TRUE
TRUE \%NOR\% 42
"A" \%NOR\% FALSE

FALSE \%ONE\% FALSE
TRUE \%ONE\% TRUE
TRUE \%ONE\% 42
"A" \%ONE\% FALSE
}
\seealso{
Other extensions: 
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{envir_vals}},
\code{\link{evals}},
\code{\link{failsafe_is}},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{is_unique}()},
\code{\link{n_is}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{rd}},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uv}()},
\code{\link{wv}()},
\code{\link{xat}()}

Other failsafe: 
\code{\link{failsafe_is}},
\code{\link{failsafe}()}

Other logicals: 
\code{\link{evals}},
\code{\link{failsafe_is}},
\code{\link{meets}()}
}
\concept{extensions}
\concept{failsafe}
\concept{logicals}
