% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mmm.R
\name{mmm}
\alias{mmm}
\alias{mmm_vals}
\alias{xchr}
\alias{xch1}
\alias{xclr}
\alias{xfac}
\alias{xfrc}
\alias{xind}
\alias{xlgc}
\alias{xneg}
\alias{xngw}
\alias{xnng}
\alias{xnnw}
\alias{xnps}
\alias{xnpw}
\alias{xnst}
\alias{xnum}
\alias{xodd}
\alias{xord}
\alias{xpct}
\alias{xpos}
\alias{xppn}
\alias{xpsw}
\alias{xsrt}
\alias{xstr}
\alias{xuno}
\alias{xwhl}
\alias{is_mmm}
\title{Extended Mode (mmm) Property Family}
\usage{
mmm_vals()

xchr(x)

xch1(x)

xclr(x)

xfac(x)

xfrc(x)

xind(x)

xlgc(x)

xneg(x)

xngw(x)

xnng(x)

xnnw(x)

xnps(x)

xnpw(x)

xnst(x)

xnum(x)

xodd(x)

xord(x)

xpct(x)

xpos(x)

xppn(x)

xpsw(x)

xsrt(x)

xstr(x)

xuno(x)

xwhl(x)

mmm(x)

is_mmm(x, xxx, ...)
}
\arguments{
\item{x}{An object.}

\item{...}{Additional arguments to \code{\link{meets}} containing value and
element/row/column count restrictions.}

\item{mmm}{A character scalar containing one or more values from
\code{mmm_vals()} separated by pipes and/or underscores. Combinations
of mmms can be specified by separating them with underscores. Separating
mmms or combinations of mmms with pipes will result in a value of
\code{TRUE} if any of them applies to \code{x}.}
}
\value{
\code{mmm_vals} and \code{mmm} returns a character vector or
\code{NULL}. All others return either \code{TRUE} or \code{FALSE}. See
details for more information.
}
\description{
Extended modes are defined for non-empty atomic objects. For all
other objects, the extended mode is \code{NULL}. These are not formally
defined classes, but are evaluated dynamically based on the current
characteristics of an object. See details.
}
\details{
Extended modes \strong{apply only to non-empty atomic objects}.
Atomic objects that contain only \code{NA} values are of every extended
mode, as they can be coerced to any mode without introducing new \code{NA}
values. The following tables gives mmm values, names, and requirements
\strong{for non-\code{NA} values only}.
\cr\cr
\strong{Character Extended Modes}
\tabular{lll}{
\strong{Value}\tab\strong{Name}\tab\strong{Requirements}
\cr\emph{\code{'chr'}}\tab\emph{character}\tab\emph{character}
\cr \code{'clr'}\tab color\tab hex color value or color name
\cr \code{'ch1'}\tab ch.one\tab single characters
\cr \code{'str'}\tab string\tab no blank ("") values
}
\strong{Categorical Extended Modes}
\tabular{lll}{
\strong{Value}\tab\strong{Name}\tab\strong{Requirements}
\cr\code{'fac'}\tab factor\tab factor
\cr\code{'lgc'}\tab logical\tab logical
\cr\code{'ord'}\tab ordered\tab ordered factor
\cr\code{'uno'}\tab unordered\tab unordered factor
}
\strong{Combination Extended Modes}
\tabular{lll}{
\strong{Value}\tab\strong{Name}\tab\strong{Requirements}
\cr\code{'ind'}\tab indexer\tab logical or positive whole number
\cr\code{'srt'}\tab sortable\tab character, logical, numeric, or ordered
\cr\code{'nst'}\tab nonsortable\tab atomic, but not sortable
}
\strong{Numeric Extended Modes}
\tabular{lll}{
\strong{Value}\tab\strong{Name}\tab\strong{Requirements}
\cr\emph{\code{'num'}}\tab\emph{numeric}       \tab\emph{numeric}
\cr      \code{'frc'} \tab fractional          \tab any fractional value
\cr      \code{'pct'} \tab percent             \tab values in [0, 100]
\cr      \code{'ppn'} \tab proportion          \tab values in [0, 1]
\cr\emph{\code{'pos'}}\tab\emph{positive}      \tab\emph{values > 0}
\cr\emph{\code{'nng'}}\tab\emph{non-negative}  \tab\emph{values ≥ 0}
\cr\emph{\code{'nps'}}\tab\emph{non-positive}  \tab\emph{values ≤ 0}
\cr\emph{\code{'neg'}}\tab\emph{negative}      \tab\emph{values < 0}
\cr      \code{'whl'} \tab whole               \tab whole numbers
\cr      \code{'evn'} \tab even                \tab even (whole) numbers
\cr      \code{'odd'} \tab odd                 \tab odd (whole) numbers
\cr\emph{\code{'psw'}}\tab\emph{positive whole}\tab\emph{whole numbers > 0}
\cr\emph{\code{'nnw'}}\tab\emph{non-neg whole} \tab\emph{whole numbers ≥ 0}
\cr\emph{\code{'npw'}}\tab\emph{non-pos whole} \tab\emph{whole numbers ≤ 0}
\cr\emph{\code{'ngw'}}\tab\emph{negative whole}\tab\emph{whole numbers < 0}
}
\strong{\code{mmm_vals}}
\cr Gets all valid extended mode properties.
\cr\cr
\strong{\code{mmm}}
\cr Gets a character vector containing every extended mode property from
\code{mmm_vals()} that is applicable to \code{x}.
\cr\cr
\strong{\code{is_mmm}}
\cr Evaluates whether \code{xxx} contains an extended mode property
applicable to \code{x}.
\cr\cr
\strong{\code{xmmm}}
\cr Evaluates whether \code{x} has the extended mode property represented by
\code{mmm}.
\cr\cr
\strong{Additional Arguments in \code{...}}
\cr Submitting additional arguments to \code{is_mmm} via \code{...} allows
for checking not just extended mode but whether length, number of rows,
number of columns, and element values meet flexible criteria.
}
\seealso{
Other props: 
\code{\link{ccc}()},
\code{\link{cmp_ccc}},
\code{\link{cmp_mmm_agn}},
\code{\link{cmp_mmm_arr}},
\code{\link{cmp_mmm_atb}},
\code{\link{cmp_mmm_avl}},
\code{\link{cmp_mmm_avt}},
\code{\link{cmp_mmm_gen}},
\code{\link{cmp_mmm_mat}},
\code{\link{cmp_mmm_mvc}},
\code{\link{cmp_mmm_scl}},
\code{\link{cmp_mmm_vec}},
\code{\link{cmp_mmm}},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{fff}()},
\code{\link{meets}()},
\code{\link{mmm_agn}},
\code{\link{mmm_arr}},
\code{\link{mmm_atb}},
\code{\link{mmm_avl}},
\code{\link{mmm_avt}},
\code{\link{mmm_mat}},
\code{\link{mmm_mvc}},
\code{\link{mmm_scl}},
\code{\link{mmm_vec}},
\code{\link{pop_xxx}},
\code{\link{sss}()},
\code{\link{ttt}()},
\code{\link{xxx}()}
}
\concept{props}
