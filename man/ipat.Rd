% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipat.R
\encoding{UTF-8}
\name{ipat}
\alias{ipat}
\alias{has_pat}
\alias{wpat}
\alias{npat}
\alias{ppat}
\alias{ppats}
\title{Simplified string indexing for fixed patterns}
\usage{
ipat(x, pat)

has_pat(x, pat)

wpat(x, pat)

npat(x, pat)

ppat(x, pat)

ppats(x, pat)
}
\arguments{
\item{x}{A character vector.}

\item{pat}{A fixed value \link[=cmp_str_scl]{complete string scalar} pattern to search for in \code{x}.}
}
\value{
\strong{A positive whole number \link[=VLS]{vlist}} \cr\cr \code{ppats}
\cr\cr  \strong{A positive whole number vector}             \cr\cr \verb{wpat, npat, ppat}
\cr\cr  \strong{A logical scalar}                           \cr\cr \verb{has_pat, ipat}
}
\description{
Logically index, numerically index, and count the number of times a pattern occurs.
}
\details{
\tabular{ll}{  \code{has_pat}   \tab Evaluates whether each element of \code{x} contains the string in \code{pat}.                                                        \cr   \tab   \cr
  \code{ppats}     \tab Identifies the position of the first character of \emph{every} instance of a pattern in each element of a character vector.      \cr   \tab   \cr
  \code{ppat}      \tab Identifies the position of \emph{the first} character of the first instance of a pattern in each element of a character vector.  \cr   \tab   \cr
  \code{npat}      \tab Counts the number of times a pattern appears in each element of a character vector.                                         \cr   \tab   \cr
  \code{ipat}      \tab Logically indexes character vector elements containing a pattern as \code{TRUE} or \code{FALSE}.                                      \cr   \tab   \cr
  \code{wpat}      \tab Numerically indexes character vector elements containing a pattern as integer element numbers.                                             }
\cr\cr These functions Always \link[=a]{atomizes} \code{...} to create a single character vector to search for a fixed pattern.
}
\examples{
words <- c("apple", "banana", "carrot")
has_pat(words, "a")
ipat(words, "a")
has_pat(words, "b")
ipat(words, "b")
wpat(words, "a")
wpat(words, "b")
npat(words, "a")
npat(words, "b")
ppat(words, "a")
ppat(words, "b")
ppats(words, "a")
ppats(words, "b")
}
\seealso{
Other strings: 
\code{\link{blank}()},
\code{\link{chn}()},
\code{\link{delim}()},
\code{\link{fsub}()},
\code{\link{gr}},
\code{\link{makestr}()},
\code{\link{markdown}()},
\code{\link{maxnch}()},
\code{\link{ox}()},
\code{\link{pgrid}()},
\code{\link{revstr}()},
\code{\link{spaces}()},
\code{\link{ss}()},
\code{\link{tocase}()},
\code{\link{weave}()}
}
\concept{strings}
