% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recycling.R
\name{recycling}
\alias{recycling}
\alias{recyclable_n}
\alias{recyclable}
\alias{recycle}
\title{Recycling and Recyclability}
\usage{
recyclable_n(n, targ = max(n))

recyclable(..., n. = NULL, min. = 1, max. = NULL, targ. = NULL, err. = F)

recycle(..., n. = NULL, min. = 1, max. = NULL, targ. = NULL)
}
\arguments{
\item{...}{Named arguments to be recycled in the environment of the calling
function.}

\item{n.}{For \code{recyclable_n}, a \link[=cmp_psw_vec]{complete positive
whole-number vec} giving the lengths of arguments to be recycled; for
\code{recyclable} and \code{recycle}, either \code{NULL} or a
\link[=cmp_psw_vec]{complete positive whole-number vec} giving the set of
valid recycled argument lengths.}

\item{min.}{\code{NULL} or \link[=cmp_psw_scl]{complete positive whole-number
scalar} giving the minimum valid recycled argument length.}

\item{max.}{\code{NULL} or \link[=cmp_psw_scl]{complete positive whole-number
scalar} giving the maximum valid recycled argument length.}

\item{targ.}{\link[=cmp_psw_scl]{Complete positive whole-number scalar}
giving the target length of recycled arguments.}

\item{err.}{\link[=cmp_lgl_scl]{Complete logical scalar} indicating whether
to throw an error if the \code{...} arguments are not recyclable.}

\item{lengths.}{\link[=cmp_psw_vec]{Complete positive whole-number vec} of
lengths to check for recyclability.}
}
\value{
\strong{\code{recyclable_n}}
\cr A logical scalar
\cr\cr
\strong{\code{recyclable}}
\cr A logical scalar
\cr\cr
\strong{\code{recycle}}
\cr \code{NULL} (called for side effect).
}
\description{
Recycling and Recyclability
}
\section{Functions in This Family}{

\strong{\code{recyclable_n}}
\cr Checks whether the vector of lengths in \code{n.} represents recyclable
arguments subject to the setting in \code{targ.}.
\cr\cr
\strong{\code{recyclable}}
\cr Evaluates whether \code{...} arguments are recyclable subject to
settings in the arguments \code{n.}, \code{min.}, \code{max.}, and
\code{targ.}.
\cr\cr
\strong{\code{recycle}}
\cr Recycle \code{...} arguments in the environment of the calling
function subject to settings in the arguments \code{n.}, \code{min.},
\code{max.}, and \code{targ.}.
}

\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{binfuns}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{files_uj}},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{make_uj}},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{os}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put}()},
\code{\link{reclass}()},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uj_logicals}},
\code{\link{xb}()}

Other environments: 
\code{\link{callers}()},
\code{\link{envir_vals}},
\code{\link{os}()},
\code{\link{run}()}
}
\concept{environments}
\concept{extensions}
