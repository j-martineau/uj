% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recycling.R
\name{recycling}
\alias{recycling}
\alias{recyclable_n}
\alias{recyclable}
\alias{recycle}
\title{Recycling and recyclability}
\usage{
recyclable_n(..., n. = NULL, min. = NULL, max. = NULL, targ. = NULL)

recyclable(..., n. = NULL, min. = 1, max. = NULL, targ. = NULL, err. = FALSE)

recycle(..., n. = NULL, min. = 1, max. = NULL, targ. = NULL)
}
\arguments{
\item{...}{For \code{recycle}, named arguments to be recycled in the environment of the calling function. For \code{recyclable_n}, one or more objects containing only positive whole number values (\link[=av]{atomized} before processing).}

\item{n.}{Either \code{NULL} or a complete positive whole-number vec giving the set of valid recycled argument lengths.}

\item{min.}{\code{NULL} or complete positive whole-number scalar giving the minimum valid recycled argument length.}

\item{max.}{\code{NULL} or complete positive whole-number scalar giving the maximum valid recycled argument length.}

\item{targ.}{A \link[=cmp_psw_scl]{complete positive whole-number scalar} giving the target length of recycled arguments. May be greater than \code{length(av(...))}.}

\item{err.}{A non-\code{NA} logical scalar indicating whether to throw an error if the \code{...} arguments are not recyclable.}
}
\value{
\tabular{rl}{
  \code{recyclable_n} \tab   A logical scalar.
\cr \code{recyclable} \tab   A logical scalar.
\cr    \code{recycle} \tab   \code{NULL}.
}
}
\description{
Arguments are recyclable if all of their lengths are divisors of the argument with the greatest length subject to any settings in the optional arguments \code{ns.}, \code{min.}, \code{max.}, and/or \code{targ.}.
\cr\cr Functions in this family are:\tabular{rl}{
  \code{recyclable_n} \tab   Are lengths in \code{...} recyclable?.
\cr \code{recyclable} \tab   Are \code{...} arguments are recyclable?
\cr    \code{recycle} \tab   Recycles \code{...} arguments in the calling function.
}
}
\examples{
n1. <- 1
n2. <- 1:2
n3. <- 1:3
n4. <- 1:4
c1. <- paste0("'", letters[n1.], "'")
c2. <- paste0("'", letters[n2.], "'")
c3. <- paste0("'", letters[n3.], "'")
c4. <- paste0("'", letters[n4.], "'")

rec. <- function(A, B, C) {
  asc <- function(n, v) {paste0(n, " = c(", paste0(v, collapse = ", "), ")")}
  recycle(A = A, B = B, C = C)
  cat(paste0(asc("A", A), "\n", asc("B", B), "\n", asc("C", C)))
}

rec.(n4., c2., n1.)
rec.(c1., n2., c4.)
rec.(n3., c3., c1.)
rec.(n3., c3., n3.)
recyclable_n(1:3)
recyclable_n(2, 4, 8)
recyclable_n(2, 4, 8, n. = c(2, 4, 8, 16))
recyclable_n(2, 4, 8, min. = 4)
recyclable_n(2, 4, 8, max. = 4)
recyclable_n(2, 4, 8, targ. = 7)
recyclable_n(2, 4, 8, targ. = 8)
recyclable_n(2, 4, 8, targ. = 16)
recyclable(n1., c2., n3.)
recyclable(n4., c2., n1.)
recyclable(c1., n2., c4.)
recyclable(n3., c3., c1.)
recyclable(n3., c3., n3.)
}
\seealso{
Other environments: 
\code{\link{callers}()},
\code{\link{envir_vals}},
\code{\link{os}()},
\code{\link{run}()}
}
\concept{environments}
