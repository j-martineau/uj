% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ttt.R
\name{ttt.}
\alias{ttt.}
\alias{ttt}
\alias{iatm}
\alias{idef}
\alias{ifun}
\alias{inil}
\alias{inll}
\alias{ipop}
\alias{ircr}
\alias{ttt_vals}
\alias{ittt}
\title{Fundamental type properties}
\usage{
ttt.()

ttt(x)

iatm(x)

idef(x)

ifun(x)

inil(x)

inll(x)

ipop(x)

ircr(x)

ttt_vals()

ittt(x, ttt, ...)
}
\arguments{
\item{x}{An object.}

\item{ttt}{\link[cmp_chr_scl]{Complete character scalar }containing one or
more values from \code{ttt_vals()} separated by pipes and/or underscores
("."). Combinations of fundamental types can be specified by separating
them with underscores. Separating fundamental types or combinations of
fundamental types with pipes will result in a value of \code{TRUE} if any
of them applies to \code{x}.}

\item{...}{Additional arguments to \code{\link{meets}} containing value and
element/row/column count restrictions.}
}
\value{
\code{ttt_vals} and \code{ttt} return a character scalar or
vector. All others return either \code{TRUE} or \code{FALSE}.
}
\description{
An object's fundamental type (ttt) is defined by its most
basic structural properties as described in the following table:
\tabular{lll}{
FUNDAMENTAL   \tab FUNDAMENTAL   \tab CHARACTERISTICS OF                \cr
TYPE VALUE    \tab TYPE NAME     \tab QUALIFYING OBJECTS                \cr
\code{'nll'}\tab null        \tab \code{NULL}                           \cr
\code{'def'}\tab defined     \tab Not \code{NULL}                       \cr
\code{'nil'}\tab nil-length  \tab Length is 0 (includes \code{NULL})    \cr
\code{'pop'}\tab populated   \tab Length is > 0                         \cr
\code{'fun'}\tab function reference
\tab Function object or character scalar
containing a function name            \cr
\code{'atm'}\tab atomic      \tab atomic                                \cr
\code{'rcr'}\tab recursive   \tab List-like (\code{\link[is_dtf]{dtf}},
lists, or objects containing an element
that is not an atomic scalar)           }
Functions related to fundamental type are described in the following
table:\tabular{ll}{
FUNCTION          \tab WHAT THE                                           \cr
FORMAT            \tab FUNCTION DOES                                      \cr
\code{i•••}       \tab Evaluates whether an object is of the fundamental type
completeness represented by \code{•••}.            \cr
\code{ttt}        \tab Gets a character vector containing all fundamental
type properties of an object.                      \cr
\code{ittt}       \tab Evaluates an object for a specific fundamental type
and any additional properties specified in
\code{...}.                                        \cr
\code{ttt_vals}   \tab Gets a character vector of all possible fundamental
type property values.                                }
}
\section{Functions}{
\itemize{
\item \code{ttt()}: Get a character vector of all fundamental type properties
applicable to \code{x}.

\item \code{iatm()}: Is \code{x} atomic (regardless of length)?

\item \code{idef()}: Is \code{x} defined (non-\code{NULL})?

\item \code{ifun()}: Is \code{x} a function or a function name?

\item \code{inil()}: Is \code{x} nil (of length 0)?

\item \code{inll()}: Is \code{x} \code{NULL}

\item \code{ipop()}: Is \code{x} populated (of length > 0)?

\item \code{ircr()}: Is \code{x} recursive?

\item \code{ttt_vals()}: Get a character vector of all possible fundamental type
property values.

\item \code{ittt()}: Determine whether \code{x} is of the fundamental type(s)
contained in \code{ttt} subject to the additional specifications in
\code{...}.

}}
\section{Additional Arguments in \code{...}}{

Submitting additional arguments to \code{ittt} via \code{...} allows
for checking not just the fundamental but whether length, number of rows,
number of columns, and element values meet flexible criteria.
}

\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{ppp.}()},
\code{\link{sss.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()}
}
\concept{props}
