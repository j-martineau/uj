% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/values.R
\encoding{UTF-8}
\name{values_help}
\alias{values_help}
\alias{values}
\alias{value_names}
\alias{value_descriptions}
\alias{value_table}
\alias{value}
\alias{vals}
\alias{val_names}
\alias{val_table}
\alias{val}
\alias{vs}
\alias{vnames}
\alias{vtable}
\alias{v}
\title{Named values (unique to package \code{uj})}
\usage{
values_help()

values(vec = FALSE)

value_names()

value_descriptions()

value_table()

value(...)

vals(vec = FALSE)

val_names()

val_table()

val(...)

vs(vec = FALSE)

vnames()

vtable()

v(...)
}
\arguments{
\item{vec}{Logical scalar indicating whether to collapse multi-element values of the result using a pipe (|) delimiter.}

\item{...}{Unquoted, comma-separated list of names of values to return. If multiple values are specified, they are coerced into a single atomic vector result.}
}
\value{
\strong{A character vector}         \cr\cr \verb{value_names, val_names, vnames}
\cr\cr  \strong{A data.frame}               \cr\cr \verb{value_table, val_table, vtable}
\cr\cr  \strong{A \link[=VLS]{vlist}}       \cr\cr \verb{values, values, vs}
\cr\cr  \strong{An atomic scalar or vector} \cr\cr \verb{value, val, v}
}
\description{
Get names, definitions, and values of special \code{uj} package named values.
}
\details{
\tabular{ll}{  \verb{value_names, val_names, vnames}   \tab Get names of all package values.                                                                                                                                                                                        \cr   \tab   \cr
  \verb{value_table, val_table, vtable}   \tab Get a data.frame of all \code{uj}-specific named values with three columns: \code{name}, \code{value}, and \code{description}, where named values with multiple elements are pipe-delimited and all values are converted to mode character. \cr   \tab   \cr
  \verb{values, values, vs}               \tab Get a named list where names are the arguments submitted to \code{v(...)}, element values are the values of the contents of the named element, and the attribute \code{'descriptions'} gives associated verbose descriptions.     \cr   \tab   \cr
  \verb{value, val, v}                    \tab Gets package values by name.                                                                                                                                                                                                           }
}
\section{Functions}{
\itemize{
\item \code{values()}: Gets package values by name

\item \code{value_names()}: Get names of all \code{uj} package constant values. Returns a character scalar.

\item \code{value_descriptions()}: Get plain language descriptions of \code{uj} package constant values. Returns a character scalar.

\item \code{value_table()}: Builds a table of \code{uj} package constants and plain language descriptions.

\item \code{value()}: Gets a single package \code{uj} constant value.

\item \code{vals()}: An alias for \code{values}.

\item \code{val_names()}: An alias for \code{value_names}.

\item \code{val_table()}: An alias for \code{value_table}.

\item \code{val()}: An alias for \code{value}.

\item \code{vs()}: An alias for \code{values}

\item \code{vnames()}: An alias for \code{value_names}

\item \code{vtable()}: An alias for \code{value_table}

\item \code{v()}: An alias for \code{value}

}}
\examples{
egValues <- function() {

  print(uj::v(.))
  print(uj::v(pipe, pipe1, eq))
  print(uj::vnames())
  print(uj::values())
  print(uj::vtable())

}

egValues()
}
