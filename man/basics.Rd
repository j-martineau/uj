% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basics.R
\encoding{UTF-8}
\name{basics}
\alias{basics}
\alias{g}
\alias{g0}
\alias{g1}
\alias{p}
\alias{p0}
\alias{p1}
\alias{na}
\alias{ok}
\alias{wna}
\alias{wok}
\alias{null}
\alias{def}
\alias{lo}
\alias{hi}
\alias{len}
\alias{mid}
\alias{spf}
\alias{levs}
\alias{rounded}
\alias{clabs}
\alias{dlabs}
\alias{rlabs}
\alias{vlabs}
\alias{is_atm}
\alias{is_chr}
\alias{is_fac}
\alias{is_int}
\alias{is_lgl}
\alias{is_num}
\alias{is_ord}
\alias{is_uno}
\alias{not_atm}
\alias{not_chr}
\alias{not_fac}
\alias{not_int}
\alias{not_lgl}
\alias{not_num}
\alias{not_ord}
\alias{not_uno}
\alias{is_arr}
\alias{is_dtf}
\alias{is_fun}
\alias{is_lst}
\alias{is_mat}
\alias{is_vec}
\alias{not_arr}
\alias{not_dtf}
\alias{not_fun}
\alias{not_lst}
\alias{not_mat}
\alias{not_veq}
\alias{x_in}
\alias{x_mf}
\title{Wrappers for \code{base} functions}
\usage{
basics()

g(G, ...)

g0(...)

g1(...)

p(P, ...)

p0(...)

p1(...)

na(X)

ok(X)

wna(X)

wok(X)

null(X)

def(X)

lo(X)

hi(X)

len(X)

mid(X, Start, Stop)

spf(Fmt, ...)

levs(X)

rounded(X)

clabs(X)

dlabs()

rlabs(X)

vlabs(X)

is_atm(X)

is_chr(X)

is_fac(X)

is_int(X)

is_lgl(X)

is_num(X)

is_ord(X)

is_uno(X)

not_atm(X)

not_chr(X)

not_fac(X)

not_int(X)

not_lgl(X)

not_num(X)

not_ord(X)

not_uno(X)

is_arr(X)

is_dtf(X)

is_fun(X)

is_lst(X)

is_mat(X)

is_vec(X)

not_arr(X)

not_dtf(X)

not_fun(X)

not_lst(X)

not_mat(X)

not_veq(X, Y)

x_in(X, ...)

x_mf(X, ...)
}
\arguments{
\item{...}{one or more \R objects, to be converted to character vectors.}
}
\value{
A character vector of the concatenated values.  This will be of length
  zero if all the objects are, unless \code{collapse} is non-NULL, in which
  case it is \code{""} (a single empty string).

  If any input into an element of the result is in UTF-8 (and none are
  declared with encoding \code{"bytes"}, see \code{\link[base]{Encoding}}),
  that element will be in UTF-8, otherwise in the current encoding in
  which case the encoding of the element is declared if the current
  locale is either Latin-1 or UTF-8, at least one of the corresponding
  inputs (including separators) had a declared encoding and all inputs
  were either ASCII or declared.

  If an input into an element is declared with encoding \code{"bytes"},
  no translation will be done of any of the elements and the resulting
  element will have encoding \code{"bytes"}.  If \code{collapse} is
  non-NULL, this applies also to the second, collapsing, phase, but some
  translation may have been done in pasting object together in the first
  phase.
}
\description{
Wrappers for frequently used \code{base} package functions.
}
\details{
\strong{Basic function wrappers not related to counts/lengths}
\tabular{ll}{  \code{g}       \tab \code{paste0(av(...), collapse = g)} (glues \code{...}) \cr
  \code{p}       \tab \code{paste(..., sep = p)}                         \cr
  \code{g0}      \tab \code{paste0(av(...), collapse = "")}              \cr
  \code{p0}      \tab \code{paste(..., sep = "")}                        \cr
  \code{g1}      \tab \code{paste0(av(...), collapse = " ")}             \cr
  \code{p1}      \tab \code{paste(..., sep = " ")}          \cr   \tab   \cr
  \code{hi}      \tab \code{ceiling(X)}                                  \cr
  \code{lo}      \tab \code{floor(X)}                       \cr   \tab   \cr
  \code{na}      \tab \code{is.na(X)}                                    \cr
  \code{ok}      \tab \code{!is.na(X)}                      \cr   \tab   \cr
  \code{wna}     \tab \code{which(na(X))}                                \cr
  \code{wok}     \tab \code{which(ok(X))}                   \cr   \tab   \cr
  \code{len}     \tab \code{nchar(X)}                       \cr   \tab   \cr
  \code{mid}     \tab \code{substr(.)}                      \cr   \tab   \cr
  \code{spf}     \tab \code{sprintf(.)}                     \cr   \tab   \cr
  \code{levs}    \tab \code{levels(X)}                      \cr   \tab   \cr
  \code{none}    \tab \code{!any(av(...))}                  \cr   \tab   \cr
  \code{x_in}    \tab \code{X[isIN(X, ...)]}                             \cr
  \code{x_mf}    \tab \code{X[isMF(X, ...)]}                \cr   \tab   \cr
  \code{clabs}   \tab \code{colnames(X)}                                 \cr
  \code{dlabs}   \tab \code{...names(X)}                                 \cr
  \code{elabs}   \tab \code{names(X)}                                    \cr
  \code{rlabs}   \tab \code{rownames}                       \cr   \tab     }
\tabular{ll}{  \verb{is_arr, not_arr}   \tab \verb{(!)is.array(X)}                           \cr
  \verb{is_dtf, not_dtf}   \tab \verb{(!)is.data.frame(X)}                      \cr
  \verb{is_fun, not_fun}   \tab \verb{(!)is.function(X)}                        \cr
  \verb{is_lst, not_lst}   \tab \verb{(!)is.list(X)}                            \cr
  \verb{is_mat, not_mat}   \tab \verb{(!)is.matrix(X)}                          \cr
  \verb{is_vec, not_veq}   \tab \verb{(!)is.vector(X)}             \cr   \tab   \cr
  \verb{is_atm, not_atm}   \tab \verb{(!)is.atomic(X)}                          \cr
  \verb{is_chr, not_chr}   \tab \verb{(!)is.character(X)}                       \cr
  \verb{is_fac, not_fac}   \tab \verb{(!)is.factor(X)}                          \cr
  \verb{is_int, not_int}   \tab \verb{(!)is.integer(X)}                         \cr
  \verb{is_lgl, not_lgl}   \tab \verb{(!)is.logical(X)}                         \cr
  \verb{is_num, not_num}   \tab \verb{(!)is.numeric(X)}                         \cr
  \verb{is_ord, not_ord}   \tab \verb{(!)is.ordered(X)}                         \cr
  \verb{is_uno, not_uno}   \tab \verb{(!)is_fac(X) & (!)is_ord(X)} \cr   \tab     }
}
\examples{
vals <- c(1:3, 2:4) / 3
vars <- c("a", "bb", "ccc", "dddd", "ccc", "bb")
text <- "\%s = \%0.2f and \%s = \%0.0f"
vals
vars
text
lo(vals)
hi(vals)
len(vars)
mid(vars, 1, 3)
spf(text, vars[1:3], vals[1:3], vars[4:6], vals[4:6])
### more examples ###
}
\references{
Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988)
  \emph{The New S Language}.
  Wadsworth & Brooks/Cole.
}
\seealso{
Other wraps: 
\code{\link{dp}()},
\code{\link{dt}()},
\code{\link{ggp}()},
\code{\link{gr}},
\code{\link{rd}()},
\code{\link{sca}()},
\code{\link{tb}()}
}
\concept{wraps}
