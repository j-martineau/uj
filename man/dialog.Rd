% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dialog.R
\encoding{UTF-8}
\name{dialog}
\alias{dialog}
\alias{alert}
\alias{acknowledge}
\alias{choose1}
\alias{chooseN}
\alias{NO}
\alias{YES}
\alias{OK}
\alias{CANCEL}
\alias{ask}
\alias{ask_new}
\alias{choose_dir}
\alias{choose_doc}
\title{Dialog with users using package \code{svDialogs}}
\usage{
alert(
  ...,
  type = "alert",
  lab = "",
  blank = "",
  ftype = "r|y|p",
  flab = "k|y|i",
  fmsg = "d|d|d",
  d = " "
)

acknowledge(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

choose1(options, ..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

chooseN(
  options,
  ...,
  all = TRUE,
  none = FALSE,
  n = NULL,
  min.n = NULL,
  max.n = NULL,
  ftype = "y|r|p",
  flab = "k|y|i",
  fmsg = "d|d|d",
  d = " "
)

NO(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

YES(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

OK(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

CANCEL(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

ask(..., ftype = "y|r|p", flab = "k|y|i", fmsg = "d|d|d", d = " ")

ask_new(
  old,
  unq = TRUE,
  ftype = "y|r|p",
  flab = "k|y|i",
  fmsg = "d|d|d",
  d = " "
)

choose_dir(
  dir.type = "directory",
  ftype = "y|r|p",
  flab = "k|y|i",
  fmsg = "d|d|d",
  d = " "
)

choose_doc(
  doc.type = "document",
  ftype = "y|r|p",
  flab = "k|y|i",
  fmsg = "d|d|d",
  d = " "
)
}
\arguments{
\item{...}{An arbitrary, optional number of arguments which are \link[=av]{atomized} into a character scalar message to be posted to the console.}

\item{type}{A character scalar type of alert to post to the console. \code{type = 'error'} results in stopping execution after raising the alert. Predefined alert types are \code{c('alert', 'error', 'update', 'warning')}. Custom types are also accepted, but they should be short to avoid formatting problems.}

\item{lab}{A character scalar alert title to post to the console. Should be relatively short to avoid formatting problems.}

\item{blank}{A character scalar containing a default message if \link[=av]{atomizing} and collapsing \code{...} to a character scalar results in a blank string (\code{""}).}

\item{ftype}{A formatting value consistent with the description in the \emph{specifying formats} section giving formatting instructions for the alert type.}

\item{flab}{A formatting value consistent with the description in the \emph{specifying formats} section giving formatting instructions for the alert title.}

\item{fmsg}{A formatting value consistent with the description in the \emph{specifying formats} section giving formatting instructions for the alert message.}

\item{d}{A character scalar delimiter for collapsing \code{...} args into a character scalar.}

\item{options}{An atomic vector list of options to choose from.}

\item{all}{Scalar \code{TRUE} or \code{FALSE} indicating whether to add an \code{{ ALL }} value to \code{options}.}

\item{none}{Scalar \code{TRUE} or \code{FALSE} indicating whether to add a \code{{ NONE }} value to \code{options} (implying that it is valid to select none).}

\item{n}{An optional \link[=cmp_psw_scl]{complete positive numeric whole-number scalar} (?cmp_psw_scl) indicating the number of options that must be selected. Must be contained in \code{1:length(options)}.}

\item{min.n}{An optional \link[=CMP]{complete} \link[=PSW]{positive numeric whole-number} \link[=SCL]{scalar} indicating the minimum number of options that may be selected. Must be \code{NULL} when \code{n} is non-\code{NULL}.}

\item{max.n}{An optional complete positive numeric whole-number scalar indicating the maximum number of options that may be selected. Must be \code{NULL} when \code{n} is non-\code{NULL}.}

\item{old}{A \link[=chr_vec]{character vec} of unique values to be replaced.}

\item{unq}{Scalar \code{TRUE} or \code{FALSE} indicating whether replacement values must be unique.}
}
\value{
\strong{The} \code{NULL} \strong{object} \cr\cr \verb{acknowledge, alert}
\cr\cr  \strong{A character scalar}    \cr\cr \code{choose_dir} (a directory path) \cr \code{choose_doc} (a document path) \cr \code{ask}
\cr\cr  \strong{A character vector}    \cr\cr \code{ask_new}
\cr\cr  \strong{An atomic vector}      \cr\cr \code{chooseN}
\cr\cr  \strong{An atomic scalar}      \cr\cr \code{choose1}
\cr\cr  \strong{A logical scalar}      \cr\cr \verb{CANCEL, YES, NO, OK}
}
\description{
All functions \link[=collapse_dots]{collapses} \code{...} args into a prompt. Each posts an alert to the console, posts the prompt (if any), followed by a specific action.
}
\details{
\tabular{ll}{  \code{acknowledge}   \tab Waits for user to acknowledge.\eqn{^{(1)}}        \cr   \tab   \cr
  \verb{OK, CANCEL}    \tab Offers \code{OK/CANCEL}.\eqn{^{(1,4)}}                 \cr   \tab   \cr
  \code{choose_doc}    \tab Asks user to choose a document.\eqn{^{(2)}}       \cr
  \code{choose_dir}    \tab Asks user to choose a directory.\eqn{^{(2)}}      \cr   \tab   \cr
  \code{choose1}       \tab Asks user to choose \code{1} option.\eqn{^{(1,2)}}     \cr
  \code{chooseN}       \tab Asks user to choose \verb{1+} options.\eqn{^{(1,2,3)}} \cr   \tab   \cr
  \verb{YES, NO}       \tab Offers \code{YES/NO/CANCEL}.\eqn{^{(1,2,4)}}           \cr   \tab   \cr
  \code{ask_new}       \tab Asks for a list of new values.\eqn{^{(1,2)}}      \cr   \tab   \cr
  \code{alert}         \tab None.\eqn{^{(1)}}                                 \cr   \tab   \cr
  \code{ask}           \tab Asks for typed input.\eqn{^{(1,2)}}               \cr   \tab     }
\tabular{l}{  \eqn{^{(1)}} Default style, background color, and foreground color of console text depend on \code{type}. \cr
  \eqn{^{(2)}} Stops execution if user chooses \code{CANCEL}.                                               \cr
  \eqn{^{(3)}} Stops execution if \code{stop | (type = 'error' & is.null(stop))}.                           \cr
  \eqn{^{(4)}} Returns \code{TRUE} if user choice matches the function name.                                  }
}
\section{Specifying formats}{
 When not \code{NULL} format arguments (\code{bg.format}, \code{fg.format}, and \code{st.format}) must be \link[=cmp_str_vec]{complete string vecs} that when \link[=av]{atomized} and \link[=ssP]{split along pipes} results in a three-element character vector, the first element of which is used to specify \link[=bg]{text background color} and must be a value from \code{\link{bg_vals}()}, the second element of which is used to specify \link[=fg]{text foreground color} and must be a value from \code{\link{fg_vals}()}, and the last of which specifies \link[=st]{text style} and must be a value from \code{\link{st_vals}()}.
}

\examples{
egA <- "two-part"
egB <- "message"
egFT <- c("yellow", "red", "plain")
egFL <- c("blk|wht", "und")
egFM <- "b|y|i"
egType = "type"
egLab = "title"
egOpts <- paste("option", letters[1:10])
egMsg1 <- "Do you want to continue?"
egMsg2 <- "Why do you want to continue?"

alert(egA, egB, d = " ")
alert(egA, egB, type = egType, d = " ")
alert(egA, egB, lab = l, d = " ")
alert(egA, egB, type = egType, lab = egLab, d = " ")
alert(egA, egB, type = egType, lab = egLab, d = " ", fmsg = egFM)
alert(egA, egB, type = egType, lab = egLab, d = " ", flab = egFL)
alert(egA, egB, type = egType, lab = egLab, d = " ", ftype = egFT)
alert(egA, egB, type = egType, lab = egLab, d = " ", ftype = egFT, flab = egFL, fmsg = egFM)
alert(type = egType, lab = egLab, ftype = egFT, flab = egFL)
alert(type = egType, ftype = egFT)
alert(lab = egLab, flab = egFL)
\dontrun{
  acknowledge(egA, egB)
  choose1(egOpts)
  chooseN(egOpts)
  chooseN(egOpts, all = T, none = F, min = 6, max = 10)
  NO(egMsg1)
  OK(egMsg2)
  YES(egMsg1)
  CANCEL(egMsg1)
  ask(Msg2)
  ask_new(egOpts)
  choose_dir(dir.type = "directory for R scripts")
  choose_doc(doc.type = "document to read")
}
}
\seealso{
Other user: 
\code{\link{say}()}
}
\concept{dialogs}
\concept{user}
