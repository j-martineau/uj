% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_unique.R
\encoding{UTF-8}
\name{is_unique}
\alias{is_unique}
\alias{is_unique0}
\alias{not_unique}
\alias{not_unique0}
\alias{is_unq}
\alias{is_unq0}
\alias{not_unq}
\alias{not_unq0}
\title{Does an atomic object only contain unique values?}
\usage{
is_unique(x, a = FALSE, na = FALSE)

is_unique0(...)

not_unique(x, a = FALSE, na = FALSE)

not_unique0(...)

is_unq(x, a = FALSE, na = FALSE)

is_unq0(...)

not_unq(x, a = FALSE, na = FALSE)

not_unq0(...)
}
\arguments{
\item{x}{An atomic object.}

\item{a}{\code{TRUE} or \code{FALSE} indicating whether to reduce \code{x} to an atomic vector containing all of its atomic values. When \code{FALSE} and \code{x} is not atomic, throws an error.}

\item{na}{\code{TRUE} or \code{FALSE} indicating whether \code{NA} values are allowed.}
}
\value{
Scalar \code{TRUE} or scalar \code{FALSE}.
}
\description{
Evaluates whether \code{x} contains only only unique atomic values, with options for for atomizing before evaluation and for handling \code{NA} values.
}
\details{
\tabular{ll}{  \verb{not_unique0, not_unq0}   \tab whether \code{x} \emph{is not} an atomic vector containing only unique values.                           \cr   \tab   \cr
  \verb{not_unique, not_unq}     \tab whether \code{x} \emph{is not} a unique data.frame, list, or vector depending on values of \code{a} and \code{na}. \cr   \tab   \cr
  \verb{is_unique0, is_unq0}     \tab whether \code{x} \emph{is} an atomic vector containing only unique values.                               \cr   \tab   \cr
  \verb{is_unique, is_unq}       \tab whether \code{x} \emph{is} a unique data.frame, list, or vector depending on values of \code{a} and \code{na}.                    }
}
\examples{
is_unique(letters)
is_unq(sample(letters, 27, replace = T))
}
\seealso{
Other extensions: 
\code{\link{N}()},
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}()},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{sum0}()},
\code{\link{swap}()},
\code{\link{value_exists}()}

Other properties: 
\code{\link{as_mmm}()},
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{checker}},
\code{\link{cls}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{iii}()},
\code{\link{meets}()},
\code{\link{mmm_ccc}()},
\code{\link{mmm}()},
\code{\link{ppp}()},
\code{\link{sss}()},
\code{\link{unq_ccc}()}
}
\concept{extensions}
\concept{properties}
