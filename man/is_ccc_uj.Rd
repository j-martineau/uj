% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_ccc.R
\name{is_ccc_uj}
\alias{is_ccc_uj}
\alias{is_arr}
\alias{is_gen}
\alias{is_tab}
\alias{is_vls}
\alias{is_vtp}
\alias{is_mat}
\alias{is_mvc}
\alias{is_scl}
\alias{is_vec}
\title{Mode-Agnostic Extended Class}
\usage{
is_ccc_uj()

is_arr(x)

is_gen(x)

is_tab(x)

is_vls(x)

is_vtp(x)

is_mat(x)

is_mvc(x)

is_scl(x)

is_vec(x)
}
\description{
Extended classes are not formally defined as a new classes, but
are dynamically evaluated for characteristics through a call to
\code{is_ccc(x)} where 'ccc') is the extended \code{TRUE} or \code{FALSE}
is always returned, and \code{FALSE} is always returned for the \code{NULL}
object. In this package, the following types of objects are new and are
defined as given in the following table.\tabular{lll}{
EXTENDED CLASS \tab EXTENDED CLASS \tab CHARACTERISTICS               \cr
PROPERTY VALUE \tab PROPERTY NAME  \tab QUALIFYING                    \cr
\code{'vls'}   \tab vlist          \tab non-data.frame (vector) list  \cr
\code{'gen'}   \tab generic        \tab any vector, vlist, or array   \cr
\code{'scl'}   \tab scalar         \tab length-1 generic              \cr
\code{'mvc'}   \tab multivec       \tab multiple-element vector,
multiple-element vlist, or
multiple-element array with 1
\link[=eee]{effective dimension}   \cr
\code{'tab'}   \tab tabular        \tab \code{\link[base]{data.frame}}\cr
\code{'vec'}   \tab vec            \tab scalar or mvec                \cr
\code{'vtp'}   \tab vtype          \tab \code{link[=xemp]{empty}} or
\code{link[=xpop]{populated}} scalar,
vector, or vlist.                    }
There are additional functions checking for these extended classes, but
restricted to atomic, specific extended modes, and complete (no \code{NA}
values) and of specific extended mode defined in \code{\link{'ccc'}},
\code{\link{mmm_ccc}}, and \code{\link{cmp_mmm_ccc}}, respectively.
}
\section{Functions}{
\itemize{
\item \code{is_arr}: Is \code{x} any array?

\item \code{is_gen}: Is \code{x} a generic?

\item \code{is_tab}: Is \code{x} a tabular?

\item \code{is_vls}: Is \code{x} a vlist?

\item \code{is_vtp}: Is \code{x} a vtype?

\item \code{is_mat}: Is \code{x} a matrix?

\item \code{is_mvc}: Is \code{x} an mvect?

\item \code{is_scl}: Is \code{x} a scalar?

\item \code{is_vec}: Is \code{x} a vector?
}}

\seealso{
Other props: 
\code{\link{as_mmm_uj}()},
\code{\link{ccc_uj}()},
\code{\link{cmp_ccc_uj}()},
\code{\link{cmp_mmm_ccc_uj}()},
\code{\link{cmp_mmm_uj}()},
\code{\link{comparable_uj}()},
\code{\link{compatible_uj}()},
\code{\link{ddd_uj}()},
\code{\link{eee_uj}()},
\code{\link{fff_uj}()},
\code{\link{is_mmm_uj}()},
\code{\link{meets_uj}()},
\code{\link{mmm_ccc_uj}()},
\code{\link{mmm_uj}()},
\code{\link{sss_uj}()},
\code{\link{ttt_ccc_uj}()},
\code{\link{ttt_mmm_uj}()},
\code{\link{ttt_uj}()},
\code{\link{xxx_uj}()}
}
\concept{props}
