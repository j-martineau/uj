% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_mmm.R
\name{as_mmm}
\alias{as_mmm}
\alias{as_clr}
\alias{as_fun}
\alias{as_chr}
\alias{as_int}
\alias{as_num}
\alias{as_lgl}
\alias{as_ord}
\alias{as_uno}
\title{Coerce to base or extended mode.}
\usage{
as_clr(x, na = FALSE)

as_fun(x)

as_chr(x, ...)

as_int(x, ...)

as_num(x, ...)

as_lgl(x, ...)

as_ord(x, levs)

as_uno(x, levs)
}
\arguments{
\item{x}{For \code{as_clr}, an object of mode character; for \code{as_fun}, a character scalar function name or a function object; for \code{as_ord} and \code{as_uno}, an atomic object; and for all others, any R object.}

\item{na}{A non-\code{NA} logical scalar indicating whether \code{NA} values are acceptable.}

\item{...}{Further arguments passed to or from other methods.}

\item{levs}{A \link[=cmp_vec]{complete atomic vec} of factor levels (ordered factor levels for \code{as_ord}).}
}
\value{
\tabular{rl}{
\code{as_chr}   \tab An object of mode \code{'character'}.
\cr \code{as_clr}   \tab An object of extended mode \code{'clr'} (color valued character).
\cr \code{as_fun}   \tab A function object.
\cr \code{as_int}   \tab An object of mode \code{'integer'}.
\cr \code{as_lgl}   \tab An object of mode \code{'logical'}.
\cr \code{as_num}   \tab An object of mode \code{'numeric'}.
\cr \code{as_ord}   \tab An object of extended mode \code{'ord'} (ordered factor).
\cr \code{as_ord}   \tab An object of extended mode \code{'uno'} (unordered factor).
}
}
\description{
Functions to coerce objects to \link[base:mode]{base mode} or \link[=mmm]{extended mode}:
\tabular{rl}{
\cr \code{as_clr}   \tab Coerces valid R character color representation values to hexadecimal character RGB color values.
\cr            \tab  
\cr \code{as_fun}   \tab Returns \code{x} if it is a function, otherwise, search for a function named \code{x} and return it.
\cr            \tab  
\cr \code{as_chr}   \tab Thinly wraps \code{\link[base:as.character]{base::as.character}}.
\cr            \tab  
\cr \code{as_int}   \tab Thinly wraps \code{\link[base:as.integer]{base::as.integer}}.
\cr            \tab  
\cr \code{as_num}   \tab Thinly wraps \code{\link[base:as.numeric]{base::as.numeric}}.
\cr            \tab  
\cr \code{as_lgl}   \tab Thinly wraps \code{\link[base:as.logical]{base::as.logical}}.
\cr            \tab  
\cr \code{as_ord}   \tab As extended mode ordered factor. Wraps \code{base::factor(x, levels = levs, ordered = TRUE)}.
\cr            \tab  
\cr \code{as_uno}   \tab As extended mode unordered factor. Wraps \code{base::factor(x, levels = levs, ordered = FALSE)}.
}
}
\examples{
bins. <- sample(c(0, 1), 10, replace = T)
chrs. <- c("3.14", "2.72", "1.41")
clrs. <- c("red", "#AABBCC", "#AABBCCDD", "blue")
nums. <- c(pi, exp(1), sqrt(2))

as_fun(unique)
as_fun("unique")

bins.
as_lgl(bins.)

chrs.
as_num(chrs.)
as_int(chrs.)

clrs.
as_clr(clrs.)

nums.
as_chr(nums.)

as_uno(clrs., levs = unique(clrs.))
as_ord(clrs., levs = sort(unique(clrs.)))
}
\seealso{
Other props: 
\code{\link{bbb_ccc}()},
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{ccc}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{iii}()},
\code{\link{meets}()},
\code{\link{mmm_ccc}()},
\code{\link{mmm}()},
\code{\link{ppp}()},
\code{\link{sss}()}
}
\concept{props}
