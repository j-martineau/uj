% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_mmm.R
\encoding{UTF-8}
\name{as_mmm}
\alias{as_mmm}
\alias{as_chr}
\alias{as_clr}
\alias{as_fun}
\alias{as_int}
\alias{as_num}
\alias{as_lgl}
\alias{as_ord}
\alias{as_uno}
\title{Coerce to base mode or \code{xmode}}
\usage{
as_mmm(X, Mode, Levs = NULL, Na = FALSE)

as_chr(X, Na = FALSE)

as_clr(X, Na = FALSE)

as_fun(X)

as_int(X)

as_num(X)

as_lgl(X)

as_ord(X, Levs)

as_uno(X, Levs)
}
\arguments{
\item{X}{For \code{as_clr}, an object of mode character; for \code{as_fun}, a character scalar function name or a function object; for \code{as_ord} and \code{as_uno}, an atomic object; and for all others, any R object.}

\item{Levs}{A \link[=cmp_vec]{complete atomic vec} of factor levels (ordered factor levels for \code{asORD}).}

\item{Na}{\code{TRUE} or \code{FALSE} indicating whether \code{NA} values are acceptable.}

\item{...}{Further arguments passed to or from other methods.}
}
\value{
\strong{An object of base mode} \code{'character'}                         \cr\cr \code{as_chr}
\cr\cr  \strong{An object of base mode} \code{'integer'}                           \cr\cr \code{as_int}
\cr\cr  \strong{An object of base mode} \code{'logical'}                           \cr\cr \code{as_lgl}
\cr\cr  \strong{An object of base mode} \code{'numeric'}                           \cr\cr \code{as_num}
\cr\cr  \strong{An object of \link[=mmm]{xmode}} \code{'ord'} (ordered factor)     \cr\cr \code{as_ord}
\cr\cr  \strong{An object of xmode} \code{'uno'} (unordered factor)                \cr\cr \code{as_uno}
\cr\cr  \strong{An object of xmode} \code{'clr'} (hex color in form \code{'#RRGGBBAA'}) \cr\cr \code{as_clr}
}
\description{
Functions to coerce objects to \link[base:mode]{base mode} or \code{\link[=mmm]{xmode}}.
}
\details{
Functions in this family are as follows:
\tabular{ll}{  \code{as_chr}   \tab Thinly wraps \code{\link[base]{as.character}}.                                                        \cr
  \code{as_int}   \tab Thinly wraps \code{\link[base]{as.integer}}.                                                          \cr
  \code{as_num}   \tab Thinly wraps \code{\link[base]{as.numeric}}.                                                          \cr
  \code{as_lgl}   \tab Thinly wraps \code{\link[base]{as.logical}}.                                             \cr   \tab   \cr
  \code{as_ord}   \tab As xmode \code{'ord'} (ordered factor). Wraps \code{factor(X, levels = Levs, ordered = TRUE)}.     \cr   \tab   \cr
  \code{as_uno}   \tab As xmode \code{'uno'} (unordered factor). Wraps \code{factor(X, levels = Levs, ordered = FALSE)}.  \cr   \tab   \cr
  \code{as_clr}   \tab Coerces character color values to hexadecimal.                                           \cr   \tab   \cr
  \code{as_fun}   \tab If \code{X} is a character scalar function return that function, but if \code{X} is a function object, return it. }
}
\examples{
bins. <- sample(c(0, 1), 10, replace = T)
chrs. <- c("3.14", "2.72", "1.41")
clrs. <- c("red", "#AABBCC", "#AABBCCDD", "blue")
nums. <- c(pi, exp(1), sqrt(2))

as_fun(unique)
as_fun("unique")

bins.
as_lgl(bins.)

chrs.
as_num(chrs.)
as_int(chrs.)

clrs.
as_clr(clrs.)

nums.
as_chr(nums.)

as_uno(clrs., Levs = unique(clrs.))
as_ord(clrs., Levs = sort(unique(clrs.)))
}
\seealso{
Other properties: 
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{cls}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{iii}()},
\code{\link{is_unique}()},
\code{\link{meets}()},
\code{\link{mmm_ccc}()},
\code{\link{mmm}()},
\code{\link{ppp_fast}()},
\code{\link{ppp}()},
\code{\link{sss}()},
\code{\link{stopperr}()},
\code{\link{unq_ccc}()}
}
\concept{properties}
