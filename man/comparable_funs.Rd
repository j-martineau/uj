% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparable.R
\encoding{UTF-8}
\name{comparable_funs}
\alias{comparable_funs}
\alias{comparable}
\alias{comparable_xy}
\title{Are Objects Comparable?}
\usage{
comparable_funs()

comparable(..., .rec = FALSE)

comparable_xy(x, y, rec = FALSE)
}
\arguments{
\item{...}{An arbitrary number of arguments to be checked for comparability with each other.}

\item{x, y}{Arguments to be checked for comparability.}

\item{rec, .rec}{\code{TRUE} or \code{FALSE} indicating whether \code{...} arguments must be recyclable to be comparable.}
}
\value{
A logical scalar.
}
\description{
Determines whether modes of arguments are comparable (i.e., sortable and compatible with each other), meaning that the are either all character, all logical, all numeric, or all ordered factor with the same set of levels (in the same order).
}
\section{Functions}{
\itemize{
\item \code{comparable()}: Check an arbitrary number of \code{...} arguments for comparability. Also checks for mutual recyclability when \code{.rec = TRUE}.

\item \code{comparable_xy()}: Checks \code{x} and \code{y} for comparability. Also checks for mutual recyclability when \code{rec = T}.

}}
\examples{
az. <- letters
comparable(1:10, pi, exp(1))
comparable(az., az., "", "!")
comparable(az., factor(az.))
comparable(1:10, 1:3, rec. = TRUE)
comparable(list(az., 1:10), az., 1:10)
comparable(factor(az., az., ordered = T), factor("q", az., ordered = T))
}
