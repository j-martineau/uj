% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R
\encoding{UTF-8}
\name{paths_help}
\alias{paths_help}
\alias{is_path}
\alias{as_path}
\alias{object_dirs}
\alias{parent_dirs}
\alias{object_path}
\alias{parent_path}
\alias{object_name}
\alias{parent_name}
\alias{new_dirs}
\title{Evaluate and manipulate paths to files or folders}
\usage{
paths_help()

is_path(..., err = F)

as_path(..., err = T)

object_dirs(path, err = T)

parent_dirs(path, err = T)

object_path(path, err = T)

parent_path(path, err = T)

object_name(path, err = T)

parent_name(path, err = T)

new_dirs(dirs, path = NULL)
}
\arguments{
\item{...}{Atomic arguments pasted to create a path.}

\item{err}{\code{TRUE} or \code{FALSE} indicating whether an error should be thrown if \code{...} is not a valid object path when collapsed to a character scalar.}

\item{path}{A \link[=cmp_chr_scl]{complete character scalar} path to either a directory or a file.}

\item{dirs}{A \link[=cmp_chr_vec]{complete character vec} of new sub-directory names.}
}
\value{
\strong{A character scalar} \cr\cr \verb{object_dirs, parent_path} \cr \verb{object_name, parent_name} \cr \code{as_path}
\cr\cr  \strong{A character vector} \cr\cr \verb{object_dirs, parent_dirs}
\cr\cr  \strong{A logical scalar}   \cr\cr \code{is_path}
}
\description{
Take an file reference and get its directories, path, and name; its parent's directories, path, and name. Convert a \code{...} args to a path, check the validity of a path, and create new directories within a given directory.
}
\details{
In most cases, if (optionally) specified, functions throw an error if \code{...} does not resolve to a valid object path.
}
\section{Functions}{
\itemize{
\item \code{is_path()}: Checks whether \code{...} resolves to a valid path for an object (file or folder) when \code{...} arguments are collapsed into a character scalar.

\item \code{as_path()}: Collapses \code{...} into a path using the current platform file path separator \code{.Platform$file.sep}.

\item \code{object_dirs()}: Calls \code{object_path} and split the resulting character scalar into a character vector containing the name of the root folder, the names of any intermediate folders, the name of the parent folder of the object, and the name of the object.

\item \code{parent_dirs()}: Calls \code{parent_path} and split the resulting character scalar into a character vector containing the name of the root folder, the names of any intermediate folders, and the name of the parent folder of the object specified by \code{...}.

\item \code{object_path()}: Collapses \code{...} into a character scalar and expand the path to the object indicated by the result to account for relative paths.

\item \code{parent_path()}: Calls \code{object_path} and extract from the resulting character scalar just the path to the parent folder of the object specified by \code{...} (i.e., discarding the name of the object itself).

\item \code{object_name()}: Calls \code{object_path} and extract from the resulting character scalar just the name of the object, discarding the path to its parent.

\item \code{parent_name()}: Calls \code{parent_path} and extract from the resulting character scalar just the name of last folder in the path.

\item \code{new_dirs()}: Creates sub-directories within an existing directory, optionally asking the user to choose that existing directory.

}}
\examples{
path. <- path.expand("~")
parts. <- ss(.Platform$file.sep, path.)
parts. <- parts.[parts. != ""]
parts.[1] <- paste0(.Platform$file.sep, parts.[1])
parts. <- paste0("'", parts., "'")
code. <- paste0(parts., collapse = ", ")
is_path. <- paste0("is_path(", code., ")")
as_path. <- paste0("as_path(", code., ")")

path.
parts.
is_path.
as_path.

parent_dirs(path.)
object_dirs(path.)
parent_path(path.)
object_path(path.)
parent_name(path.)
object_name(path.)
run(is_path.)
run(as_path.)
}
\seealso{
Other files: 
\code{\link{rd_help}()},
\code{\link{read_rct_delim}()}
}
\concept{files}
