% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccc.R
\encoding{UTF-8}
\name{ccc_PROPS}
\alias{ccc_PROPS}
\alias{ccc}
\alias{ccc_funs}
\alias{ccc_props}
\alias{is_ccc_spec}
\alias{CCC}
\alias{ARR}
\alias{DTF}
\alias{GEN}
\alias{MAT}
\alias{MVC}
\alias{SCL}
\alias{VEC}
\alias{VLS}
\title{Extended class properties}
\usage{
ccc_PROPS()

ccc(x)

ccc_funs()

ccc_props()

is_ccc_spec(spec)

CCC(x, spec, ...)

ARR(x, ...)

DTF(x, ...)

GEN(x, ...)

MAT(x, ...)

MVC(x, ...)

SCL(x, ...)

VEC(x, ...)

VLS(x, ...)
}
\arguments{
\item{x}{An R object.}

\item{spec}{\code{NULL} or a \link[=cmp_chr_scl]{complete character vec} containing one or more xclass properties (i.e., from \code{\link{ccc_props}()}). Properties may be pipe-delimited. If there are multiple properties in \code{spec}, \code{x} is inspected for a match to any of the specified properties.}

\item{...}{
  Arguments passed on to \code{\link[=meets]{meets}}
  \describe{
    \item{\code{}}{}
  }}
}
\description{
Extended class properties are defined as follows:
\tabular{lll}{  \verb{'arr', 'ARR'}   \tab array      \tab arrays                                   \cr
  \verb{'mat', 'MAT'}   \tab matrix     \tab matrices                                 \cr
  \verb{'dtf', 'DTF'}   \tab dtf        \tab data.frames                              \cr
  \verb{'vls', 'VLS'}   \tab vlist      \tab vector-lists  \eqn{^{(1)}}               \cr
  \verb{'gen', 'GEN'}   \tab generic    \tab vectors, vlists, and arrays              \cr
  \verb{'scl', 'SCL'}   \tab scalar     \tab length-\code{1} generics                      \cr
  \verb{'mvc', 'MVC'}   \tab multivec   \tab length-\verb{2+} \link[=LIN]{linear} generics \cr
  \verb{'vec', 'VEC'}   \tab vec        \tab scalars and multivecs                      }
\tabular{l}{  \eqn{^{(1)}} Non-\code{data.frame} lists. }
}
\section{Functions}{
\itemize{
\item \code{ccc()}: Lists all extended class properties of \code{x}. Returns a sorted, lowercase, character vector.

\item \code{ccc_funs()}: Lists all extended class property checking functions. Returns a sorted, uppercase, character vector.

\item \code{ccc_props()}: Lists all extended class properties. Returns a sorted, lowercase, character vector.

\item \code{is_ccc_spec()}: Checks whether \code{spec} is an extended class property spec. Returns a logical scalar. See \code{\link{ppp}} for a definition of a property spec.

\item \code{CCC()}: Checks \code{x} against the extended class property spec \code{spec}. Returns a logical scalar. See \code{\link{ppp}} for a definition of a property spec.

\item \code{ARR()}: Checks \code{x} for array-ness. Returns a logical scalar.

\item \code{DTF()}: Checks \code{x} for dtf-ness. Returns a logical scalar.

\item \code{GEN()}: Checks \code{x} for generic-ness. Returns a logical scalar.

\item \code{MAT()}: Checks \code{x} for matrix-ness. Returns a logical scalar.

\item \code{MVC()}: Checks \code{x} for multivec-ness. Returns a logical scalar.

\item \code{SCL()}: Checks \code{x} for scalar-ness. Returns a logical scalar.

\item \code{VEC()}: Checks \code{x} for vec-ness. Returns a logical scalar.

\item \code{VLS()}: Checks \code{x} for vector-list-ness. Returns a logical scalar.

}}
\section{Specifying count and value restrictions}{
 Specifying restrictions in \code{...} is optional. The full set of recognized arguments names are defined in the following table along with the properties each specifies:
\tabular{ll}{  \verb{.max, .maxr, .maxc}   \tab Scalar maximum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.min, .minr, .minc}   \tab Scalar minimum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.lt, .le, .ge, .gt}   \tab \link[=cmp_srt_scl]{Complete sortable scalar} less-than, less-than-or-equal, greater-than-or-equal, and greater-than bounds, respectively. \cr   \tab   \cr
  \verb{.n, .nr, .nc}         \tab A vector of valid numbers of elements, rows, and columns, respectively.                                                                    \cr   \tab   \cr
  \code{.vals}                \tab A vector of valid values.                                                                                                                                 }
}

\examples{
ccc_funs()
ccc_props()
is_ccc_spec("scl|vls")
CCC(letters, "vec|dtf")
VEC(letters)
ccc(letters)
}
