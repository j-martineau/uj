% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/errs.R
\name{errs_uj}
\alias{errs_uj}
\alias{err_check}
\alias{bank_err}
\alias{bank_lgl}
\alias{bank_not}
\alias{bank_pop}
\alias{bank_funs}
\alias{bank_xxx}
\alias{bank_vals}
\alias{bank_dots}
\alias{bank_when}
\alias{bank_pats}
\alias{bank_fail}
\title{Error Management}
\usage{
errs_uj()

err_check(gens. = 0)

bank_err(..., gens. = 0)

bank_lgl(..., na. = F, extras. = NULL)

bank_not(...)

bank_pop(...)

bank_funs(funs., ...)

bank_xxx(xxx., ..., nas. = F)

bank_vals(...)

bank_dots(xxx., ..., named. = F)

bank_when(whens., values., ...)

bank_pats(pats., ...)

bank_fail(x.)
}
\arguments{
\item{gens.}{A non-negative whole-number scalar indicating the number of
generations back in the call stack in which to bank and/or check for error
messages.}

\item{...}{For \code{bank_err}, an arbitrary number of atomic arguments that
when collapsed into a character scalar form an error message.
\cr\cr
For \code{bank_lgl}, \code{bank_pop}, \code{bank_funs}, \code{bank_prop},
and \code{bank_pats}, an arbitrary number of named arguments to be error
checked.
\cr\cr
For \code{bank_not} both an arbitrary number of named logical scalar
arguments to be checked for \code{TRUE}-ness and an arbitrary number of
unnamed atomic arguments that when collapsed form an error message.
\cr\cr
For \code{bank_vals}, an arbitrary number of named atomic scalar arguments
and an arbitrary number of unamed atomic arguments holding valid values of
the named arguments.
\cr\cr
For \code{bank_dots}, an arbitrary number of named or unnamed arguments to
be error checked.
\cr\cr
For \code{bank_when}, two named atomic scalar arguments to be error
checked.
\cr\cr
For \code{bank_when}, two named atomic scalar arguments to be error
checked.}

\item{extras.}{\code{NUlL} or an complete atomic object containing additional
atomic values that qualify as valid.}

\item{funs.}{A character scalar containing a
\link[=xxx_funs]{property function} name or multiple property function
names separated by pipes, which are used to check if named arguments in
code{...} satisfy the property specification in any of the function names.}

\item{xxx.}{A character scalar containing one or more property combos
(combos are created by separating one or more \link[=xxx_vals]{property
values} with underscores. Multiple combos are separated by pipes.}

\item{nas.}{\code{TRUE} or \code{FALSE} indicating whether atomic scalar
\code{NA} values qualify.}

\item{named.}{\code{TRUE} or \code{FALSE} indicating whether arguments in
\code{...} must be uniquely named without using blank strings.}

\item{pats.}{An atomic vlist containing multiple elements, each of which must
be a complete character mvect of the same length as the number of arguments
in \code{...}. Each element gives a pattern of valid properties for the
argument in \code{...} in the form of one property specification per
argument in \code{...} in the same order of those arguments.}

\item{when., value.}{Non-empty atomic objects.}
}
\value{
\code{NULL}. Called for the side effect of banking and/or processing
error messages.
}
\description{
Bank error messages in the immediate environment of a function
to allow for exhaustive error checking before throwing an exception.
Results in a combined, multiple-error message to be reported at the
completion of all error checks.
}
\section{Functions}{
\itemize{
\item \code{err_check}: Check for banked error messages in the environment of the
function \code{gens.} generations back in the call stack, and if there are
any, process them, stopping execution. If there are none, take no action.
Should be called after all error checking has been completed.

\item \code{bank_err}: Banks the error message in \code{...} in the environment
of the function \code{gens.} generations back in the call stack. The error
message is constructed by atomizing and gluing all arguments in \code{...}
into a character scalar.

\item \code{bank_lgl}: Checks the named arguments in \code{...} for whether they
are atomic scalar \code{TRUE} or atomic scalar \code{FALSE}. If \code{na. =
  TRUE}, also allows atomic scalar \code{NA}. If \code{extras.} contains
atomic values (logical or not), also allows those values. For each named
argument that does not meet the requirements, banks an error.

\item \code{bank_not}: For each named argument in \code{...} that is
\code{FALSE}, creates an error message by collapsing the remaining
(unnamed) arguments in \code{...} into a character scalar, and banks the
error message for that named argument. The location where the name of a
\code{FALSE} named argument should occur in the message is indicated by the
escape sequence \code{'{@}'}.

\item \code{bank_pop}: For each named argument in \code{...} that is either
\code{NULL} or empty (i.e., of length 0), banks an error message.

\item \code{bank_funs}: \emph{Bank error messages if arguments satisfy a property
function.} For each named argument in \code{...}, checks whether it
satisfies a property function in \code{funs.}, and if not, banks an error
message. \code{funs.} must be a character scalar containing the names of
one or more \link[=xxx_funs]{property functions}, separated by pipes. An
argument passes the test if calling any one of the functions results in a
value of \code{TRUE}.

\item \code{bank_xxx}: More flexible but less efficient than \code{bank_funs}.
For each named argument in \code{...}, banks an error message if it does
satisfy the \link[=is_xxx]{property specification} in \code{xxx.}. If
\code{na. = TRUE}, arguments may also be atomic scalar \code{NA} values.
\code{xxx.} must be a character scalar containing one or more property
combos. Property combos are created by separating multiple properties from
\code{\link{xxx_all()}}. A property combo may be a single property.
Multiple property combos are separated from each other using pipes. An
argument satisfies the property specification if it satisfies any of the
property combos.

\item \code{bank_vals}: Bank errors if atomic scalar arguments do not have one of
a list of values. For each named atomic scalar argument in \code{...},
checks it against the remaining (unnamed) atomic arguments in \code{...}
(which do not have to be of the same mode), and if the named argument's
value does not match a value from any unnamed argument in \code{...}, banks
an error message.

\item \code{bank_dots}: Bank errors if dot arguments do not satisfy a property
specification, and optionally, if they are not named. Checks if each
argument in \code{...} satisfies the property specification in \code{prop.}
and if not, banks an error message. If \code{named. = TRUE}, checks whether
all arguments in \code{...} are named, and if not banks an error message.

\item \code{bank_when}: Bank errors conditionally on the value of two arguments.
Banks an error if the first named atomic scalar argument in \code{...} has
a value contained in \code{when.} and the second named atomic scalar
argument in \code{...} does not contain a value from \code{value}.

\item \code{bank_pats}: Bank errors conditionally on the pattern of properties of
arguments in \code{...} matching none of the specified patterns of
associated properties in \code{pats.}.

\item \code{bank_fail}: If calling \code{identity(x)} generates an error, bank an
error message.
}}

\seealso{
Other errs: 
\code{\link{failsafe_uj}()}
}
\concept{errs}
