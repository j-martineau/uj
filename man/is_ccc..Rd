% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_ccc.R
\name{is_ccc.}
\alias{is_ccc.}
\alias{is_arr}
\alias{is_gen}
\alias{is_dtf}
\alias{is_vls}
\alias{is_vtp}
\alias{is_mat}
\alias{is_mvc}
\alias{is_scl}
\alias{is_vec}
\title{Mode-Agnostic Extended Class}
\usage{
is_ccc.()

is_arr(x)

is_gen(x)

is_dtf(x)

is_vls(x)

is_vtp(x)

is_mat(x)

is_mvc(x)

is_scl(x)

is_vec(x)
}
\arguments{
\item{x}{Any object.}
}
\description{
Extended classes are not formally defined as a new classes, but
are dynamically evaluated for characteristics through a call to
\code{is_ccc(x)} where \code{ccc} is the extended class. \code{TRUE} or
\code{FALSE} is always returned, and \code{FALSE} is always returned for
the \code{NULL} object. In this package, the following types of objects are
new and are defined as given in the following table.\tabular{lll}{
EXTENDED CLASS   \tab EXTENDED CLASS   \tab CHARACTERISTICS OF          \cr
PROPERTY VALUE   \tab PROPERTY NAME    \tab QUALIFYING OBJECTS          \cr
\code{'vls'}\tab vlist   \tab Non-data.frame (vector) list              \cr
\code{'gen'}\tab generic \tab Any vector, vlist, or array               \cr
\code{'scl'}\tab scalar  \tab Length-1 generic                          \cr
\code{'mvc'}\tab multivec\tab Multiple-element vector, multiple-element
vlist, or multiple-element array with 1
\link[eee]{effective dimension}           \cr
\code{'dtf'}\tab dtf     \tab Data.frame                                \cr
\code{'vec'}\tab vec     \tab Scalar or multivec                        \cr
\code{'vtp'}\tab vtype   \tab \link[iemp]{Empty} or \link[ipop]{populated}
scalar, vec, or vlist.                      }
There are additional functions checking for these extended classes, but
restricted to atomic, specific extended modes, and complete (no \code{NA}
values) and of specific extended mode defined in \code{\link{ccc}},
\code{\link{mmm_ccc}}, and \code{\link{cmp_mmm_ccc}}, respectively.
}
\section{Functions}{
\itemize{
\item \code{is_arr()}: Is \code{x} an array?

\item \code{is_gen()}: Is \code{x} a generic?

\item \code{is_dtf()}: Is \code{x} a dtf?

\item \code{is_vls()}: Is \code{x} a vlist?

\item \code{is_vtp()}: Is \code{x} a vtype?

\item \code{is_mat()}: Is \code{x} a matrix?

\item \code{is_mvc()}: Is \code{x} a multivec?

\item \code{is_scl()}: Is \code{x} a scalar?

\item \code{is_vec()}: Is \code{x} a vec?

}}
\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{is_mmm.}()},
\code{\link{meets.}()},
\code{\link{mmm.}()},
\code{\link{mmm_ccc.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()},
\code{\link{xxx.}()}
}
\concept{props}
