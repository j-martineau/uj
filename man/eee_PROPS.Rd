% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eee.R
\encoding{UTF-8}
\name{eee_PROPS}
\alias{eee_PROPS}
\alias{eee}
\alias{eee_funs}
\alias{eee_props}
\alias{is_eee_spec}
\alias{EEE}
\alias{E0D}
\alias{E1D}
\alias{E2D}
\alias{EHD}
\alias{EUD}
\alias{neee}
\title{Effective Dimensionality Properties}
\usage{
eee_PROPS()

eee(x)

eee_funs()

eee_props()

is_eee_spec(spec)

EEE(x, spec, ...)

E0D(x, ...)

E1D(x, ...)

E2D(x, ...)

EHD(x, ...)

EUD(x, ...)

neee(x)
}
\arguments{
\item{x}{An R object.}

\item{spec}{\code{NULL} or a \link[=cmp_chr_scl]{complete character vec} containing one or more effective dimensionality properties from \code{eee_props()}. Effective dimensionality properties may be pipe-delimited. If there are multiple properties in \code{spec}, \code{x} is inspected for a match to any of the specified properties.}

\item{...}{
  Arguments passed on to \code{\link[=meets]{meets}}
  \describe{
    \item{\code{}}{}
  }}
}
\description{
An object's effective dimensionality is defined as the number of dimensions in which it has multiple populated index positions (i.e., if a dimension has only one index position, that is not an effective dimension).
\tabular{ll}{  \verb{'eud', 'EUD'}   \tab \emph{Effectively} \code{NaN} \emph{dimensional}.                                                                                                                                                                                      \cr
  \tab Length-\code{0} objects including \code{NULL} (of undefined effective dimensionality).                                                                                                                                            \cr   \tab   \cr
  \verb{'e0d', 'E0D'}   \tab \emph{Effectively} \code{0} \emph{dimensional}                                                                                                                                                                                         \cr
  \tab \verb{1x1} data.frames and length-\code{1} vectors, \code{\link[=VLS]{vlists}}, and arrays.                                                                                                                          \cr   \tab   \cr
  \verb{'e1d', 'E1D'}   \tab \emph{Effectively} \code{1} \emph{dimensional}                                                                                                                                                                                         \cr
  \tab \code{\link[=MVC]{multivecs}}, length-\verb{2+} vlists, \code{\link[=ROW]{row}} data.frames, \code{\link[=COL]{column}} data.frames, and length-\verb{2+} arrays with \verb{2+} index positions in exactly \code{1} dimension. \cr   \tab   \cr
  \verb{'e2d', 'E2D'}   \tab \emph{Effectively} \code{2} \emph{dimensional}                                                                                                                                                                                         \cr
  \tab \verb{2+ x 2+ }data.frames and length-\verb{4+} arrays with \verb{2+} positions in exactly \code{2} dimensions.                                                                                                                \cr   \tab   \cr
  \verb{'ehd', 'EHD'}   \tab \emph{Effectively hyper dimensional}                                                                                                                                                                            \cr   \tab   \cr
  \tab Length-\verb{8+} arrays with \verb{2+} positions in \verb{3+} dimensions.                                                                                                                                                                }
}
\section{Functions}{
\itemize{
\item \code{eee()}: Lists all effective dimensionality properties possessed by \code{x}. Returns a lowercase character scalar.

\item \code{eee_funs()}: Lists all effective dimensionality checking functions. Returns a sorted, uppercase, character vector.

\item \code{eee_props()}: Lists all effective dimensionality properties. Returns a sorted, lowercase, character vector.

\item \code{is_eee_spec()}: Checks whether \code{spec} is an effective dimensionality property spec. Returns a logical scalar. See \code{\link{ppp}} for a definition of a property spec.

\item \code{EEE()}: Checks whether \code{x} matches the effective dimensionality property spec in \code{spec} subject to any count or value restrictions in \code{...}. Returns a logical scalar. See \code{\link{ppp}} for a definition of a property spec.

\item \code{E0D()}: Checks whether \code{x} is of zero effective dimensions subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{E1D()}: Checks whether \code{x} is of one effective dimension subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{E2D()}: Checks whether \code{x} is of two effective dimensions subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{EHD()}: Checks whether \code{x} is of three or more effective dimensions subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{EUD()}: Checks whether \code{x} is of undefined effective dimensionality subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{neee()}: Gets the effective dimensionality of \code{x}. Returns either \code{NaN} or a non-negative integer scalar.

}}
\section{Specifying count and value restrictions}{
 Specifying restrictions in \code{...} is optional. The full set of recognized arguments names are defined in the following table along with the properties each specifies:
\tabular{ll}{  \verb{.max, .maxr, .maxc}   \tab Scalar maximum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.min, .minr, .minc}   \tab Scalar minimum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.lt, .le, .ge, .gt}   \tab \link[=cmp_srt_scl]{Complete sortable scalar} less-than, less-than-or-equal, greater-than-or-equal, and greater-than bounds, respectively. \cr   \tab   \cr
  \verb{.n, .nr, .nc}         \tab A vector of valid numbers of elements, rows, and columns, respectively.                                                                    \cr   \tab   \cr
  \code{.vals}                \tab A vector of valid values.                                                                                                                                 }
}

\examples{
a. <- "a"
abc. <- c("a", "b", "c")
udf1 <- NULL
udf2 <- character(0)
udf3 <- matrix(nrow = 0, ncol = 0)
udf4 <- list()
zro1 <- a.
zro2 <- list(abc = abc.)
zro3 <- data.frame(a = a.)
zro4 <- array(a., dim = c(1, 1, 1))
one1 <- matrix(abc., nrow = 1)
one2 <- matrix(abc., ncol = 1)
one3 <- data.frame(a. = abc.)
one4 <- array(abc., dim = c(3, 1, 1))
two1 <- matrix(rep.int(abc., 2), nrow = 2)
two2 <- data.frame(a = abc., b = abc.)
two3 <- array(1:4, dim = c(2, 2, 1))
two4 <- array(1:4, dim = c(1, 2, 2, 1))
hyp1 <- array(1:8, dim = c(2, 2, 2))
hyp2 <- array(1:8, dim = c(2, 2, 2, 1))
hyp3 <- array(1:8, dim = c(1, 2, 2, 2, 1))
hyp4 <- array(1:16, dim = c(2, 2, 2, 2))

eee_funs()
eee_props()
is_eee_spec("eUD")
is_eee_spec("d1D")
c(neee(udf1), neee(udf2), neee(udf3), neee(udf4))
c(neee(zro1), neee(zro2), neee(zro3), neee(zro4))
c(neee(one1), neee(one2), neee(one3), neee(one4))
c(neee(two1), neee(two2), neee(two3), neee(two4))
c(neee(hyp1), neee(hyp2), neee(hyp3), neee(hyp4))
c(EEE(one1, "eud"), EEE(one1, "e0d"), EEE(one1, "e1d"), EEE(one1, "e2d"), EEE(one1, "ehd"))
c(EUD(one1), E0D(one1), E1D(one1), E2D(one1), EHD(one1))
c(eee(udf1), eee(zro1), eee(one1), eee(two1), eee(hyp1), eee(hyp4))
}
