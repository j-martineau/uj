% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggp.R
\encoding{UTF-8}
\name{gg_help}
\alias{gg_help}
\alias{ggp}
\alias{gg_aes}
\alias{gg_dot}
\alias{gg_elin}
\alias{gg_emkd}
\alias{gg_enll}
\alias{gg_erct}
\alias{gg_etxt}
\alias{gg_exp}
\alias{gg_grid}
\alias{gg_hlin}
\alias{gg_lab}
\alias{gg_labs}
\alias{gg_lin}
\alias{gg_mar}
\alias{gg_sac}
\alias{gg_scm}
\alias{gg_sdm}
\alias{gg_slm}
\alias{gg_sav}
\alias{gg_sxc}
\alias{gg_syc}
\alias{gg_thm}
\alias{gg_thm0}
\alias{gg_txt}
\alias{gg_unit}
\alias{gg_vars}
\alias{gg_vlin}
\alias{gg_wrap}
\alias{gg_xlab}
\alias{gg_ylab}
\title{Thin Wrappers of \code{ggplot2} and \code{ggtext} Functions}
\usage{
gg_help()

ggp(data = NULL, mapping = aes(), ..., environment = parent.frame())

gg_aes(x, y, ...)

gg_dot(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

gg_elin(
  colour = NULL,
  linewidth = NULL,
  linetype = NULL,
  lineend = NULL,
  color = NULL,
  arrow = NULL,
  inherit.blank = FALSE,
  size = deprecated()
)

gg_emkd(
  family = NULL,
  face = NULL,
  size = NULL,
  colour = NULL,
  fill = NULL,
  box.colour = NULL,
  linetype = NULL,
  linewidth = NULL,
  hjust = NULL,
  vjust = NULL,
  halign = NULL,
  valign = NULL,
  angle = NULL,
  lineheight = NULL,
  margin = NULL,
  padding = NULL,
  r = NULL,
  color = NULL,
  box.color = NULL,
  align_widths = NULL,
  align_heights = NULL,
  rotate_margins = NULL,
  debug = FALSE,
  inherit.blank = FALSE
)

gg_enll()

gg_erct(
  fill = NULL,
  colour = NULL,
  linewidth = NULL,
  linetype = NULL,
  color = NULL,
  inherit.blank = FALSE,
  size = deprecated()
)

gg_etxt(
  family = NULL,
  face = NULL,
  colour = NULL,
  size = NULL,
  hjust = NULL,
  vjust = NULL,
  angle = NULL,
  lineheight = NULL,
  color = NULL,
  margin = NULL,
  debug = NULL,
  inherit.blank = FALSE
)

gg_exp(mult = 0, add = 0)

gg_grid(
  rows = NULL,
  cols = NULL,
  scales = "fixed",
  space = "fixed",
  shrink = TRUE,
  labeller = "label_value",
  as.table = TRUE,
  switch = NULL,
  drop = TRUE,
  margins = FALSE,
  facets = deprecated()
)

gg_hlin(
  mapping = NULL,
  data = NULL,
  ...,
  yintercept,
  na.rm = FALSE,
  show.legend = NA
)

gg_lab(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  parse = FALSE,
  nudge_x = 0,
  nudge_y = 0,
  label.padding = unit(0.25, "lines"),
  label.r = unit(0.15, "lines"),
  label.size = 0.25,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

gg_labs(
  ...,
  title = waiver(),
  subtitle = waiver(),
  caption = waiver(),
  tag = waiver(),
  alt = waiver(),
  alt_insight = waiver()
)

gg_lin(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)

gg_mar(t = 0, r = 0, b = 0, l = 0, unit = "pt")

gg_sac(..., range = c(0.1, 1))

gg_scm(
  ...,
  values,
  aesthetics = "colour",
  breaks = waiver(),
  na.value = "grey50"
)

gg_sdm(..., values, breaks = waiver(), na.value = NA)

gg_slm(..., values, breaks = waiver(), na.value = "blank")

gg_sav(
  filename,
  plot = last_plot(),
  device = NULL,
  path = NULL,
  scale = 1,
  width = NA,
  height = NA,
  units = c("in", "cm", "mm", "px"),
  dpi = 300,
  limitsize = TRUE,
  bg = NULL,
  ...
)

gg_sxc(
  name = waiver(),
  breaks = waiver(),
  minor_breaks = waiver(),
  n.breaks = NULL,
  labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = censor,
  na.value = NA_real_,
  trans = "identity",
  guide = waiver(),
  position = "bottom",
  sec.axis = waiver()
)

gg_syc(
  name = waiver(),
  breaks = waiver(),
  minor_breaks = waiver(),
  n.breaks = NULL,
  labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = censor,
  na.value = NA_real_,
  trans = "identity",
  guide = waiver(),
  position = "left",
  sec.axis = waiver()
)

gg_thm(
  line,
  rect,
  text,
  title,
  aspect.ratio,
  axis.title,
  axis.title.x,
  axis.title.x.top,
  axis.title.x.bottom,
  axis.title.y,
  axis.title.y.left,
  axis.title.y.right,
  axis.text,
  axis.text.x,
  axis.text.x.top,
  axis.text.x.bottom,
  axis.text.y,
  axis.text.y.left,
  axis.text.y.right,
  axis.ticks,
  axis.ticks.x,
  axis.ticks.x.top,
  axis.ticks.x.bottom,
  axis.ticks.y,
  axis.ticks.y.left,
  axis.ticks.y.right,
  axis.ticks.length,
  axis.ticks.length.x,
  axis.ticks.length.x.top,
  axis.ticks.length.x.bottom,
  axis.ticks.length.y,
  axis.ticks.length.y.left,
  axis.ticks.length.y.right,
  axis.line,
  axis.line.x,
  axis.line.x.top,
  axis.line.x.bottom,
  axis.line.y,
  axis.line.y.left,
  axis.line.y.right,
  legend.background,
  legend.margin,
  legend.spacing,
  legend.spacing.x,
  legend.spacing.y,
  legend.key,
  legend.key.size,
  legend.key.height,
  legend.key.width,
  legend.text,
  legend.text.align,
  legend.title,
  legend.title.align,
  legend.position,
  legend.direction,
  legend.justification,
  legend.box,
  legend.box.just,
  legend.box.margin,
  legend.box.background,
  legend.box.spacing,
  panel.background,
  panel.border,
  panel.spacing,
  panel.spacing.x,
  panel.spacing.y,
  panel.grid,
  panel.grid.major,
  panel.grid.minor,
  panel.grid.major.x,
  panel.grid.major.y,
  panel.grid.minor.x,
  panel.grid.minor.y,
  panel.ontop,
  plot.background,
  plot.title,
  plot.title.position,
  plot.subtitle,
  plot.caption,
  plot.caption.position,
  plot.tag,
  plot.tag.position,
  plot.margin,
  strip.background,
  strip.background.x,
  strip.background.y,
  strip.clip,
  strip.placement,
  strip.text,
  strip.text.x,
  strip.text.x.bottom,
  strip.text.x.top,
  strip.text.y,
  strip.text.y.left,
  strip.text.y.right,
  strip.switch.pad.grid,
  strip.switch.pad.wrap,
  ...,
  complete = FALSE,
  validate = TRUE
)

gg_thm0(
  base_size = 11,
  base_family = "",
  base_line_size = base_size/22,
  base_rect_size = base_size/22
)

gg_txt(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  parse = FALSE,
  nudge_x = 0,
  nudge_y = 0,
  check_overlap = FALSE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

gg_unit(x, units, data = NULL)

gg_vars(...)

gg_vlin(
  mapping = NULL,
  data = NULL,
  ...,
  xintercept,
  na.rm = FALSE,
  show.legend = NA
)

gg_wrap(
  facets,
  nrow = NULL,
  ncol = NULL,
  scales = "fixed",
  shrink = TRUE,
  labeller = "label_value",
  as.table = TRUE,
  switch = deprecated(),
  drop = TRUE,
  dir = "h",
  strip.position = "top"
)

gg_xlab(label)

gg_ylab(label)
}
\description{
Thin Wrappers of \code{ggplot2} and \code{ggtext} Functions
}
\section{Functions}{
\itemize{
\item \code{ggp()}: Thinly wraps \code{\link[ggplot2]{ggplot}}.

\item \code{gg_aes()}: Thinly wraps \code{\link[ggplot2]{aes}}.

\item \code{gg_dot()}: Thinly wraps \code{\link[ggplot2]{geom_point}}.

\item \code{gg_elin()}: Thinly wraps \code{\link[ggplot2]{element_line}}.

\item \code{gg_emkd()}: Thinly wraps \code{\link[ggtext:element_markdown]{ggtext::element_markdown}}.

\item \code{gg_enll()}: Thinly wraps \code{\link[ggplot2]{element_blank}}.

\item \code{gg_erct()}: Thinly wraps \code{\link[ggplot2]{element_rect}}.

\item \code{gg_etxt()}: Thinly wraps \code{\link[ggplot2]{element_text}}.

\item \code{gg_exp()}: Thinly wraps \code{\link[ggplot2]{expansion}}.

\item \code{gg_grid()}: Thinly wraps \code{\link[ggplot2]{facet_grid}}.

\item \code{gg_hlin()}: Thinly wraps \code{\link[ggplot2]{geom_hline}}.

\item \code{gg_lab()}: Thinly wraps \code{\link[ggplot2]{geom_label}}.

\item \code{gg_labs()}: Thinly wraps \code{\link[ggplot2]{labs}}.

\item \code{gg_lin()}: Thinly wraps \code{\link[ggplot2]{geom_line}}.

\item \code{gg_mar()}: Thinly wraps \code{\link[ggplot2]{margin}}.

\item \code{gg_sac()}: Thinly wraps \code{\link[ggplot2]{scale_alpha_continuous}}.

\item \code{gg_scm()}: Thinly wraps \code{\link[ggplot2]{scale_color_manual}}.

\item \code{gg_sdm()}: Thinly wraps \code{\link[ggplot2]{scale_shape_manual}}.

\item \code{gg_slm()}: Thinly wraps \code{\link[ggplot2]{scale_linetype_manual}}.

\item \code{gg_sav()}: Thinly wraps \code{\link[ggplot2]{ggsave}}.

\item \code{gg_sxc()}: Thinly wraps \code{\link[ggplot2]{scale_x_continuous}}.

\item \code{gg_syc()}: Thinly wraps \code{\link[ggplot2]{scale_y_continuous}}.

\item \code{gg_thm()}: Thinly wraps \code{\link[ggplot2]{theme}}.

\item \code{gg_thm0()}: Thinly wraps \code{\link[ggplot2]{theme_minimal}}.

\item \code{gg_txt()}: Thinly wraps \code{\link[ggplot2]{geom_text}}.

\item \code{gg_unit()}: Thinly wraps \code{\link[ggplot2]{unit}}.

\item \code{gg_vars()}: Thinly wraps \code{\link[ggplot2]{vars}}.

\item \code{gg_vlin()}: Thinly wraps \code{\link[ggplot2]{geom_vline}}.

\item \code{gg_wrap()}: Thinly wraps \code{\link[ggplot2]{facet_wrap}}.

\item \code{gg_xlab()}: Thinly wraps \code{\link[ggplot2]{xlab}}.

\item \code{gg_ylab()}: Thinly wraps \code{\link[ggplot2]{ylab}}.

}}
\seealso{
Other plots: 
\code{\link{color_funs}()},
\code{\link{gr}},
\code{\link{markdown_help}()},
\code{\link{pals_help}()},
\code{\link{u2u_help}()}

Other wraps: 
\code{\link{basics_help}()},
\code{\link{dp}()},
\code{\link{dt}()},
\code{\link{gr}},
\code{\link{rd_help}()},
\code{\link{tb_help}()}
}
\concept{plots}
\concept{wraps}
