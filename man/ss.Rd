% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ss.R
\name{ss}
\alias{ss}
\alias{ss1}
\alias{ssP}
\alias{ssD}
\alias{ssB}
\alias{ssPD}
\alias{ssPB}
\alias{ssDB}
\alias{ssPDB}
\alias{ch}
\alias{uch}
\alias{sstb}
\title{Split Strings and Select/Check for Elements}
\usage{
ss(d, ..., trm = T, sqz = T, u = F, n = NULL)

ss1(..., trm = T, sqz = T, n = NULL, u = F)

ssP(..., trm = T, sqz = T, n = NULL, u = F)

ssD(..., trm = T, sqz = T, n = NULL, u = F)

ssB(..., trm = T, sqz = T, n = NULL, u = F)

ssPD(..., trm = T, sqz = T, n = NULL, u = F)

ssPB(..., trm = T, sqz = T, n = NULL, u = F)

ssDB(..., trm = T, sqz = T, n = NULL, u = F)

ssPDB(..., trm = T, sqz = T, n = NULL, u = F)

ch(..., trm = T, sqz = T, n = NULL, u = F)

uch(..., trm = T, sqz = T, n = NULL)

sstb(x, d, name = "string", parts = "part")
}
\arguments{
\item{d}{A complete character vec of delimiter or delimiters to use in splitting strings.}

\item{...}{An arbitrary number of objects to be \link[=av]{atomized} before splitting.}

\item{trm}{A non-\code{NA} logical scalar indicating whether to trim white space from each side of each element of the result.}

\item{sqz}{A non-\code{NA} logical scalar indicating whether to squeeze the result by removing either empty strings (for \code{ss} functions) or characters that are neither letters, digits, nor spaces (for \code{ch}).}

\item{n}{An optional \link[=cmp_psw_scl]{complete positive whole-number scalar} specifying an element to be extracted from the result. @param u complete non-\code{NA} scalar indicating whether to reduce the result to unique values.}

\item{x}{A \link[=chr_vec]{character vec} of string(s) to be split.}

\item{name}{A \link[=cmp_chr_scl]{complete character scalar} name of the variable to hold the original strings.}

\item{part}{A complete character scalar prefix for labeling components of vectors resulting from split strings.}
}
\value{
\itemize{
\item \strong{\code{sstb}}: a data.frame.
\item \strong{all others}: a character vector.
}
}
\description{
\strong{\code{ss}} splits strings using the delimiter(s) in \code{d} following this sequence:
\enumerate{
\item Reduce \code{...} to an atomic vector of all collective atomic values.
\item Convert the result to mode character.
\item Replace each element of the result with that element's constituent parts as delimited by \code{d}, producing a potentially longer character vector.
\item If \code{n} is not \code{NULL}, extracts the \code{n}-th elements(s) from the result.
\item If \code{trm} is \code{TRUE}, trims white space (i.e., spaces, tabs, newlines) from both ends of each element of the result.
\item If \code{sqz} is \code{TRUE}, removes leading and trailing white space and replaces any multi-character interior white-space strings inside the result with a single space.
\item If \code{u} is \code{TRUE}, reduces the result to unique values.}
\strong{\code{ch}} does the same as \code{ss} but with a blank string delimiter, resulting in a vector of single characters (if \code{sqz = TRUE}), also removes blank strings from the result.
\cr\cr
\strong{Extension functions} are supplied for common delimiters, signified by codes appended to \code{ss} function names:\tabular{ll}{
\emph{Code (name)}            \tab \emph{Delimiter invoked}
\cr\code{'1'} (space)         \tab\code{' '}
\cr\code{'P'} (pipe)          \tab\code{'|'}
\cr\code{'D'} (dot)           \tab\code{'.'}
\cr\code{'B'} (broken pipe)   \tab\code{'¦'}
}
\strong{\code{uch}} reduces the result of \code{ch} to unique values.
\cr\cr
\strong{\code{sstb}} assumes that splitting each element of \code{x} along the delimiter \code{d} results vectors of the same length, which are placed into a data.frame. For example, the following console excerpt demonstrates a call to \code{sstb} and its result.

\if{html}{\out{<div class="sourceCode">}}\preformatted{> sstb(x = c('a|b|c|d', 'e|f|g|h', 'i|j|k|l', 'm|n|o|p'),
+      d = '|', name = 'original', part = 'letter')

  original letter.1 letter.2 letter.3 letter.4
1  a|b|c|d        a        b        c        d
2  e|f|g|h        e        f        g        h
3  i|j|k|l        i        j        k        l
4  m|n|o|p        m        n        o        p
}\if{html}{\out{</div>}}
}
\seealso{
Other chars: 
\code{\link{chn}()},
\code{\link{max_nch}()},
\code{\link{revstr}()},
\code{\link{spacing}}

Other strings: 
\code{\link{blank}()},
\code{\link{chn}()},
\code{\link{delim}},
\code{\link{fsub}()},
\code{\link{gr}},
\code{\link{ipat}()},
\code{\link{max_nch}()},
\code{\link{mkd}},
\code{\link{mkstr}},
\code{\link{ox}()},
\code{\link{pgrid}()},
\code{\link{revstr}()},
\code{\link{spacing}},
\code{\link{tocase}()},
\code{\link{weave}()}
}
\concept{chars}
\concept{strings}
