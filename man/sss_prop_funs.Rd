% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sss.R
\encoding{UTF-8}
\name{sss_prop_funs}
\alias{sss_prop_funs}
\alias{sss}
\alias{sss_props}
\alias{sss_funs}
\alias{is_sss_spec}
\alias{SSS}
\alias{COL}
\alias{EMP}
\alias{LIN}
\alias{PNT}
\alias{RCT}
\alias{ROW}
\alias{SLD}
\alias{SQR}
\title{Shape properties}
\usage{
sss_prop_funs()

sss(x)

sss_props()

sss_funs()

is_sss_spec(spec)

SSS(x, spec, ...)

COL(x, ...)

EMP(x, ...)

LIN(x, ...)

PNT(x, ...)

RCT(x, ...)

ROW(x, ...)

SLD(x, ...)

SQR(x, ...)
}
\arguments{
\item{x}{An R object.}

\item{spec}{Either \code{NULL} or a \link[=cmp_chr_vec]{complete character vec} containing one or more shape properties (i.e., from \code{sss_funs()}). Shape properties in \code{spec} may be pipe-delimited. If there are multiple shape properties in \code{spec}, \code{x} is inspected for any match to any shape property in \code{spec}.}

\item{...}{
  Arguments passed on to \code{\link[=meets]{meets}}
  \describe{
    \item{\code{}}{}
  }}
}
\description{
Shape properties are defined as follows:
\tabular{lll}{  \verb{'emp', 'EMP'}   \tab empty    \tab of length \code{0} (but not \code{NULL})              \cr
  \verb{'pnt', 'PNT'}   \tab point    \tab of length \code{1}\eqn{^{(1)}}                   \cr
  \verb{'col', 'COL'}   \tab column   \tab \verb{1 × 2+} matrix/data.frame                  \cr
  \verb{'row', 'ROW'}   \tab row      \tab \verb{2+ × 1} matrix/data.frame                  \cr
  \verb{'lin', 'LIN'}   \tab linear   \tab \verb{2+} positions in \code{1} dimension\eqn{^{(2)}} \cr
  \verb{'rct', 'RCT'}   \tab rect     \tab \verb{2+} positions in \code{2} dimensions            \cr
  \verb{'sqr', 'SQR'}   \tab square   \tab \verb{N × N} matrix where \verb{N ≥ 2}                \cr
  \verb{'sld', 'SLD'}   \tab solid    \tab \verb{2+} positions in \verb{3+} dimensions             }
\tabular{l}{  \eqn{^{(1)}} Includes \verb{1x1} data.frames.                                                            \cr
  \eqn{^{(2)}} Length-\verb{2+} vectors, arrays of \verb{2+} positions in \code{1} dimension, row/column data.frames.  }
}
\section{Functions}{
\itemize{
\item \code{sss()}: Lists all shape properties possessed by \code{x}. Returns a sorted, lowercase, character vector.

\item \code{sss_props()}: Lists all possible shape properties. Returns a sorted, lowercase, character vector

\item \code{sss_funs()}: Lists all possible shape-property-checking functions. Returns a sorted, uppercase, character vector.

\item \code{is_sss_spec()}: Checks whether \code{spec} is a shape property spec. Returns a logical scalar. See \code{\link{ppp}} for the definition of a property spec.

\item \code{SSS()}: Checks \code{x} against the shape property spec \code{spec}. Returns a logical scalar. See \code{\link{ppp}} for the definition of a property spec.

\item \code{COL()}: Checks \code{x} against the column shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{EMP()}: Checks \code{x} against the empty shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{LIN()}: Checks \code{x} against the linear shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{PNT()}: Checks \code{x} against the point shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{RCT()}: Checks \code{x} against the rectangle shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{ROW()}: Checks \code{x} against the row shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{SLD()}: Checks \code{x} against the solid shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

\item \code{SQR()}: Checks \code{x} against the square shape property subject to any count or value restrictions in \code{...}. Returns a logical scalar.

}}
\section{Specifying count and value restrictions}{
 Specifying restrictions in \code{...} is optional. The full set of recognized arguments names are defined in the following table along with the properties each specifies:
\tabular{ll}{  \verb{.max, .maxr, .maxc}   \tab Scalar maximum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.min, .minr, .minc}   \tab Scalar minimum valid numbers of elements, rows, and columns, respectively.                                                                 \cr   \tab   \cr
  \verb{.lt, .le, .ge, .gt}   \tab \link[=cmp_srt_scl]{Complete sortable scalar} less-than, less-than-or-equal, greater-than-or-equal, and greater-than bounds, respectively. \cr   \tab   \cr
  \verb{.n, .nr, .nc}         \tab A vector of valid numbers of elements, rows, and columns, respectively.                                                                    \cr   \tab   \cr
  \code{.vals}                \tab A vector of valid values.                                                                                                                                 }
}

\examples{
Cl1 <- data.frame(letters = letters)
Cl2 <- matrix(1:10)
Emp <- vector()
Ln1 <- letters
Ln2 <- Cl1
Pt1 <- 1
Pt2 <- data.frame(letters = "a")
Rc1 <- data.frame(letters = letters, numbers = 1:26)
Rc2 <- matrix(1:10, nrow = 2)
Rw1 <- data.frame(a = "a", b = 1)
Rw2 <- matrix(1:10, nrow = 1)
Sld <- array(1:27, dim = c(3, 3, 3))
Sqr <- matrix(1:9, nrow = 3)
sss_funs()
sss_funs()
is_sss_spec("emp|pnt")
sss(Cl1)
sss(Sqr)
c(SSS(Cl1, "col"), SSS(Rw1, "col"))
c(COL(Cl1), COL(Rw1))
c(COL(Cl2), COL(Rw2))
c(EMP(Emp), EMP(Ln1))
c(LIN(Ln1), LIN(Pt1))
c(LIN(Ln2), LIN(Rc1))
c(PNT(Pt1), PNT(Rc1))
c(PNT(Pt2), PNT(Rw1))
c(RCT(Rc1), RCT(Pt1))
c(RCT(Rc2), RCT(Ln1))
c(ROW(Rw1), ROW(Cl1))
c(ROW(Rw2), ROW(Rc1))
c(SLD(Sld), SLD(Rc1))
c(SQR(Sqr), SQR(Pt1))
}
\seealso{
Other properties: 
\code{\link{as_mmm}()},
\code{\link{bbb_ccc_help}()},
\code{\link{bbb_help}()},
\code{\link{bbb_mmm_prop_funs}()},
\code{\link{ccc_help}()},
\code{\link{cls}()},
\code{\link{cmp_ccc_help}()},
\code{\link{cmp_mmm_ccc_help}()},
\code{\link{cmp_mmm_help}()},
\code{\link{compatible}()},
\code{\link{ddd_prop_funs}()},
\code{\link{eee_help}()},
\code{\link{iii_help}()},
\code{\link{meets}()},
\code{\link{mmm_ccc_help}()},
\code{\link{mmm_help}()},
\code{\link{ppp_fast_help}()},
\code{\link{ppp_help}()},
\code{\link{sss_ccc_help}()},
\code{\link{unq_ccc_prop_funs}()},
\code{\link{unq_mmm_ccc_help}()},
\code{\link{unq_mmm_help}()}
}
\concept{properties}
