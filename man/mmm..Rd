% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mmm.R
\name{mmm.}
\alias{mmm.}
\alias{mmm}
\alias{ichr}
\alias{ich1}
\alias{iclr}
\alias{ievn}
\alias{ifac}
\alias{ifrc}
\alias{iind}
\alias{ilgl}
\alias{ineg}
\alias{ingw}
\alias{inng}
\alias{innw}
\alias{inps}
\alias{inpw}
\alias{inst}
\alias{inum}
\alias{iodd}
\alias{iord}
\alias{ipct}
\alias{ipos}
\alias{ippn}
\alias{ipsw}
\alias{isrt}
\alias{istr}
\alias{iuno}
\alias{iwhl}
\alias{mmm_vals}
\alias{immm}
\title{Extended mode properties}
\usage{
mmm.()

mmm(x.)

ichr(x.)

ich1(x.)

iclr(x.)

ievn(x.)

ifac(x.)

ifrc(x.)

iind(x.)

ilgl(x.)

ineg(x.)

ingw(x.)

inng(x.)

innw(x.)

inps(x.)

inpw(x.)

inst(x.)

inum(x.)

iodd(x.)

iord(x.)

ipct(x.)

ipos(x.)

ippn(x.)

ipsw(x.)

isrt(x.)

istr(x.)

iuno(x.)

iwhl(x.)

mmm_vals()

immm(x., xxx., ...)
}
\arguments{
\item{x.}{An object.}

\item{xxx.}{A character scalar containing one or more values from
\code{mmm_vals()} separated by pipes and/or underscores. Combinations of
extended modes can be specified by separating them with underscores.
Separating extended modes or combinations of extended modes with pipes will
result in a value of \code{TRUE} if any of them applies to \code{x.}.}

\item{...}{Additional arguments to \code{\link{meets}} containing value and
element/row/column count restrictions.}
}
\value{
\code{mmm_vals} and \code{mmm} returns a character vector or
\code{NULL}. All others return either \code{TRUE} or \code{FALSE}. See
details for more information.
}
\description{
Extended modes are defined for non-empty atomic objects. For all
other objects, the extended mode is \code{NULL}. These are not formally
defined classes, but are evaluated dynamically based on the current
characteristics of an object.
\cr\cr
Atomic objects that contain only \code{NA} values are of every extended
mode, as they can be coerced to any mode without introducing new \code{NA}
values. The following tables gives extended mode values, names, and
requirements
\cr\cr
\strong{Character Extended Modes}\tabular{lll}{
EXTENDED    \tab EXTENDED       \tab QUALIFYING                        \cr
MODE VALUE  \tab MODE NAME      \tab CHARACTERISTICS                   \cr
\code{'chr'}\tab character      \tab character                         \cr
\code{'clr'}\tab color          \tab hex color value or color name     \cr
\code{'ch1'}\tab onechar        \tab single characters                 \cr
\code{'str'}\tab string         \tab no blank ("") values                }
\strong{Categorical Extended Modes}\tabular{lll}{
EXTENDED    \tab EXTENDED       \tab QUALIFYING                        \cr
MODE VALUE  \tab MODE NAME      \tab CHARACTERISTICS                   \cr
\code{'fac'}\tab factor         \tab factor                            \cr
\code{'lgl'}\tab logical        \tab logical                           \cr
\code{'ord'}\tab ordered        \tab ordered factor                    \cr
\code{'uno'}\tab unordered      \tab unordered factor                    }
\strong{Combination Extended Modes}\tabular{lll}{
EXTENDED    \tab EXTENDED       \tab QUALIFYING                        \cr
MODE VALUE  \tab MODE NAME      \tab CHARACTERISTICS                   \cr
\code{'ind'}\tab indexer        \tab logical or positive whole number  \cr
\code{'srt'}\tab sortable       \tab character, logical, numeric, or
ordered factor                    \cr
\code{'nst'}\tab non-sortable   \tab atomic, but not sortable            }
\strong{Numeric Extended Modes}\tabular{lll}{
EXTENDED    \tab EXTENDED       \tab QUALIFYING                        \cr
MODE VALUE  \tab MODE NAME      \tab CHARACTERISTICS                   \cr
\code{'num'}\tab numeric        \tab numeric                           \cr
\code{'frc'}\tab fractional     \tab fractionally valued numeric       \cr
\code{'pct'}\tab percent        \tab percentage valued (in [0, 100]) \cr
\code{'ppn'}\tab proportion     \tab proportion valued (in [0, 1])   \cr
\code{'pos'}\tab positive       \tab positive valued numeric           \cr
\code{'nng'}\tab non-negative   \tab non-negative valued numeric       \cr
\code{'nps'}\tab non-positive   \tab non-positive valued numeric       \cr
\code{'neg'}\tab negative       \tab negative valued numeric           \cr
\code{'whl'}\tab whole          \tab whole number valued               \cr
\code{'evn'}\tab even           \tab even (whole) number-valued        \cr
\code{'odd'}\tab odd            \tab odd (whole) number-valued         \cr
\code{'psw'}\tab positive whole \tab positive whole-number valued      \cr
\code{'nnw'}\tab non-neg whole  \tab non-negative whole-number valued  \cr
\code{'npw'}\tab non-pos whole  \tab non-positive whole-number valued  \cr
\code{'ngw'}\tab negative whole \tab negative whole-number valued        }
\strong{Additional Arguments in \code{...}}
\cr Submitting additional arguments to \code{is_mmm} via \code{...} allows
for checking not just extended mode but whether length, number of rows,
number of columns, and element values meet flexible criteria.
}
\section{Functions}{
\itemize{
\item \code{mmm()}: Get a character vector containing every extended mode
property from \code{mmm_vals()} that is applicable to \code{x}.

\item \code{ichr()}: Is \code{x.} of extended mode character?

\item \code{ich1()}: Is \code{x.} of extended mode onechar?

\item \code{iclr()}: Is \code{x.} of extended mode color?

\item \code{ievn()}: Is \code{x.} of extended mode even-numeric?

\item \code{ifac()}: Is \code{x.} of extended mode factor?

\item \code{ifrc()}: Is \code{x.} of extended mode fractional-numeric?

\item \code{iind()}: Is \code{x.} of extended mode indexer?

\item \code{ilgl()}: Is \code{x.} of extended mode logical?

\item \code{ineg()}: Is \code{x.} of extended mode negative-numeric?

\item \code{ingw()}: Is \code{x.} of extended mode negative-whole-numeric?

\item \code{inng()}: Is \code{x.} of extended mode non-negative-numeric?

\item \code{innw()}: Is \code{x.} of extended mode non-negative-whole-numeric?

\item \code{inps()}: Is \code{x.} of extended mode non-positive-numeric?

\item \code{inpw()}: Is \code{x.} of extended mode non-positive-whole-numeric?

\item \code{inst()}: Is \code{x.} of extended mode non-sortable?

\item \code{inum()}: Is \code{x.} of extended mode numeric?

\item \code{iodd()}: Is \code{x.} of extended mode odd-numeric?

\item \code{iord()}: Is \code{x.} of extended mode ordered factor?

\item \code{ipct()}: Is \code{x.} of extended mode percentage-numeric?

\item \code{ipos()}: Is \code{x.} of extended mode positive-numeric?

\item \code{ippn()}: Is \code{x.} of extended mode proportion-numeric?

\item \code{ipsw()}: Is \code{x.} of extended mode positive-whole-numeric?

\item \code{isrt()}: Is \code{x.} of extended mode sortable?

\item \code{istr()}: Is \code{x.} of extended mode string?

\item \code{iuno()}: Is \code{x.} of extended mode unordered factor?

\item \code{iwhl()}: Is \code{x.} of extended mode whole-numeric?

\item \code{mmm_vals()}: Get a character vector of all possible extended mode
values.

\item \code{immm()}: Does \code{x} have the extended mode properties in
\code{xxx.}?

}}
\seealso{
Other props: 
\code{\link{as_mmm.}()},
\code{\link{ccc.}()},
\code{\link{cmp_ccc.}()},
\code{\link{cmp_mmm.}()},
\code{\link{cmp_mmm_ccc.}()},
\code{\link{comparable.}()},
\code{\link{compatible.}()},
\code{\link{ddd.}()},
\code{\link{eee.}()},
\code{\link{fff.}()},
\code{\link{is_ccc_uj}()},
\code{\link{is_mmm.}()},
\code{\link{meets.}()},
\code{\link{mmm_ccc.}()},
\code{\link{sss.}()},
\code{\link{ttt.}()},
\code{\link{ttt_ccc.}()},
\code{\link{ttt_mmm.}()},
\code{\link{xxx.}()}
}
\concept{props}
