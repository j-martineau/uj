% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eee.R
\name{eee_uj}
\alias{eee_uj}
\alias{eee}
\alias{neee}
\alias{ie0D}
\alias{ie1D}
\alias{ie2D}
\alias{ieHD}
\alias{ieUD}
\alias{eee_vals}
\alias{ieee}
\title{Effective Dimensionality (eee) Property Family}
\usage{
eee_uj()

eee(x.)

neee(x.)

ie0D(x.)

ie1D(x.)

ie2D(x.)

ieHD(x.)

ieUD(x.)

eee_vals()

ieee(x., xxx., ...)
}
\arguments{
\item{x.}{An object.}

\item{xxx.}{A character scalar containing one or more values from
\code{eee_vals()} separated by pipes and/or underscores. Combinations of
effective dimensionality  properties can be specified by separating them
with underscores. Separating effective dimensionality properties or
combinations of effective dimensionality properties with pipes will result
in a value of \code{TRUE} if any of them applies to \code{x}.}

\item{...}{Additional arguments to \code{\link{meets}} containing value and
element/row/column count restrictions.}
}
\value{
\code{eee_vals} and \code{eee} return a character scalar or
vector of effective dimensionality property values. \code{eee(x.)} returns
\code{NaN} or a non-negative whole-number scalar. All others return either
\code{TRUE} or \code{FALSE}.
}
\description{
Get a character scalar effective dimensionality property
applicable to \code{x.}.
}
\details{
Effective dimensionality of a non-empty object is defined as
the number of dimensions with multiple indexed positions. Effective
dimensionality is undefined for empty objects. The following table
describes values of effective dimensionality, property names assigned to
them, and a definition of those values.\tabular{llll}{
NUMBER OF  \tab EFFECTIVE      \tab EFFECTIVE      \tab CHARACTERISTICS\cr
EFFECTIVE  \tab DIMENSIONALITY \tab DIMENSIONALITY \tab OF QUALIFYING  \cr
DIMENSIONS \tab PROPERTY VALUE \tab PROPERTY NAME  \tab OBJECTS        \cr
\code{NaN} \tab \code{'eUD'}   \tab effectively dimensionally undefined
\tab \code{NULL} or length 0.           \cr
\code{0}   \tab \code{'e0D'}   \tab effectively \code{0}-dimensional
\tab vector of length 1, vlist of length 1,
array of length 1, or code{1 × 1}
tibble.                            \cr
\code{1}   \tab \code{'e1D'}   \tab effectively \code{1}-dimensional
\tab vector or vlist of length 2+ or
non-empty array with multiple index
positions in \code{1} dimension.   \cr
\code{2}   \tab \code{'e2D'}   \tab effectively \code{2}-dimensional
\tab tibble with multiple rows and multiple
columns, matrix with multiple rows and
multiple columns, non-empty array with
multiple index positions in only
\code{2} dimensions.               \cr
\code{≥ 3} \tab\code{'eHD'}    \tab effectively hyper-dimensional
\tab non-empty array with multiple index
positions in at least 3 dimensions.  }
}
\section{Functions}{
\itemize{
\item \code{eee}: Get the effective dimensionality property of \code{x.}

\item \code{neee}: Gets the \strong{number} of effective dimensions of \code{x.}
(i.e., not a character scalar value from \code{eee_vals()}.

\item \code{ie0D}: Evaluate whether the effective dimensionality of \code{x.}
is \code{0}.

\item \code{ie1D}: Evaluate whether the effective dimensionality of \code{x.}
is \code{1}.

\item \code{ie2D}: Evaluate whether the effective dimensionality of \code{x.}
is \code{2}.

\item \code{ieHD}: Evaluate whether the effective dimensionality of \code{x.}
is \code{3+}.

\item \code{ieUD}: Evaluate whether the effective dimensionality of \code{x.}
is undefined, or \code{NaN}.

\item \code{eee_vals}: Get a character vector of all possible essential
dimensionality property values.

\item \code{ieee}: Evaluates whether any (combination) property in
\code{xxx.} is an effective dimensionality property applicable to \code{x.}
}}

\section{Additional Arguments in \code{...}}{

Submitting additional arguments to \code{is_eee} via \code{...} allows
for checking not just the effective dimensionality but also whether length,
number of rows, number of columns, and element values meet flexible
criteria.
}

\seealso{
Other props: 
\code{\link{as_mmm_uj}()},
\code{\link{ccc_uj}()},
\code{\link{cmp_ccc_uj}()},
\code{\link{cmp_mmm_ccc_uj}()},
\code{\link{cmp_mmm_uj}()},
\code{\link{comparable_uj}()},
\code{\link{compatible_uj}()},
\code{\link{ddd_uj}()},
\code{\link{fff_uj}()},
\code{\link{is_ccc_uj}()},
\code{\link{is_mmm_uj}()},
\code{\link{meets_uj}()},
\code{\link{mmm_ccc_uj}()},
\code{\link{mmm_uj}()},
\code{\link{sss_uj}()},
\code{\link{ttt_ccc_uj}()},
\code{\link{ttt_mmm_uj}()},
\code{\link{ttt_uj}()},
\code{\link{xxx_uj}()}
}
\concept{props}
