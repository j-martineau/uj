% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delim.R
\encoding{UTF-8}
\name{delim}
\alias{delim}
\alias{da}
\alias{dw}
\alias{daw}
\alias{dww}
\alias{da0}
\alias{da1}
\alias{daB}
\alias{daC}
\alias{daD}
\alias{daG}
\alias{daP}
\alias{daQ}
\alias{daS}
\alias{daT}
\alias{dw0}
\alias{dw1}
\alias{dwB}
\alias{dwC}
\alias{dwD}
\alias{dwG}
\alias{dwP}
\alias{dwQ}
\alias{dwS}
\alias{dwT}
\alias{daw00}
\alias{daw01}
\alias{daw0B}
\alias{daw0C}
\alias{daw0D}
\alias{daw0G}
\alias{daw0P}
\alias{daw0Q}
\alias{daw0S}
\alias{daw0T}
\alias{daw10}
\alias{daw11}
\alias{daw1B}
\alias{daw1C}
\alias{daw1D}
\alias{daw1G}
\alias{daw1P}
\alias{daw1Q}
\alias{daw1S}
\alias{daw1T}
\alias{dawB0}
\alias{dawB1}
\alias{dawBB}
\alias{dawBC}
\alias{dawBD}
\alias{dawBG}
\alias{dawBP}
\alias{dawBQ}
\alias{dawBS}
\alias{dawBT}
\alias{dawC0}
\alias{dawC1}
\alias{dawCB}
\alias{dawCC}
\alias{dawCD}
\alias{dawCG}
\alias{dawCP}
\alias{dawCQ}
\alias{dawCS}
\alias{dawCT}
\alias{dawD0}
\alias{dawD1}
\alias{dawDB}
\alias{dawDC}
\alias{dawDD}
\alias{dawDG}
\alias{dawDP}
\alias{dawDQ}
\alias{dawDS}
\alias{dawDT}
\alias{dawG0}
\alias{dawG1}
\alias{dawGB}
\alias{dawGC}
\alias{dawGD}
\alias{dawGG}
\alias{dawGP}
\alias{dawGQ}
\alias{dawGS}
\alias{dawGT}
\alias{dawP0}
\alias{dawP1}
\alias{dawPB}
\alias{dawPC}
\alias{dawPD}
\alias{dawPG}
\alias{dawPP}
\alias{dawPQ}
\alias{dawPS}
\alias{dawPT}
\alias{dawQ0}
\alias{dawQ1}
\alias{dawQB}
\alias{dawQC}
\alias{dawQD}
\alias{dawQG}
\alias{dawQP}
\alias{dawQQ}
\alias{dawQS}
\alias{dawQT}
\alias{dawS0}
\alias{dawS1}
\alias{dawSB}
\alias{dawSC}
\alias{dawSD}
\alias{dawSG}
\alias{dawSP}
\alias{dawSQ}
\alias{dawSS}
\alias{dawST}
\alias{dawT0}
\alias{dawT1}
\alias{dawTB}
\alias{dawTC}
\alias{dawTD}
\alias{dawTG}
\alias{dawTP}
\alias{dawTQ}
\alias{dawTS}
\alias{dawTT}
\alias{dww00}
\alias{dww01}
\alias{dww0B}
\alias{dww0C}
\alias{dww0D}
\alias{dww0G}
\alias{dww0P}
\alias{dww0Q}
\alias{dww0S}
\alias{dww0T}
\alias{dww10}
\alias{dww11}
\alias{dww1B}
\alias{dww1C}
\alias{dww1D}
\alias{dww1G}
\alias{dww1P}
\alias{dww1Q}
\alias{dww1S}
\alias{dww1T}
\alias{dwwB0}
\alias{dwwB1}
\alias{dwwBB}
\alias{dwwBC}
\alias{dwwBD}
\alias{dwwBG}
\alias{dwwBP}
\alias{dwwBQ}
\alias{dwwBS}
\alias{dwwBT}
\alias{dwwC0}
\alias{dwwC1}
\alias{dwwCB}
\alias{dwwCC}
\alias{dwwCD}
\alias{dwwCG}
\alias{dwwCP}
\alias{dwwCQ}
\alias{dwwCS}
\alias{dwwCT}
\alias{dwwD0}
\alias{dwwD1}
\alias{dwwDB}
\alias{dwwDC}
\alias{dwwDD}
\alias{dwwDG}
\alias{dwwDP}
\alias{dwwDQ}
\alias{dwwDS}
\alias{dwwDT}
\alias{dwwG0}
\alias{dwwG1}
\alias{dwwGB}
\alias{dwwGC}
\alias{dwwGD}
\alias{dwwGG}
\alias{dwwGP}
\alias{dwwGQ}
\alias{dwwGS}
\alias{dwwGT}
\alias{dwwP0}
\alias{dwwP1}
\alias{dwwPB}
\alias{dwwPC}
\alias{dwwPD}
\alias{dwwPG}
\alias{dwwPP}
\alias{dwwPQ}
\alias{dwwPS}
\alias{dwwPT}
\alias{dwwQ0}
\alias{dwwQ1}
\alias{dwwQB}
\alias{dwwQC}
\alias{dwwQD}
\alias{dwwQG}
\alias{dwwQP}
\alias{dwwQQ}
\alias{dwwQS}
\alias{dwwQT}
\alias{dwwS0}
\alias{dwwS1}
\alias{dwwSB}
\alias{dwwSC}
\alias{dwwSD}
\alias{dwwSG}
\alias{dwwSP}
\alias{dwwSQ}
\alias{dwwSS}
\alias{dwwST}
\alias{dwwT0}
\alias{dwwT1}
\alias{dwwTB}
\alias{dwwTC}
\alias{dwwTD}
\alias{dwwTG}
\alias{dwwTP}
\alias{dwwTQ}
\alias{dwwTS}
\alias{dwwTT}
\title{Error-checked string delimiting}
\usage{
da(d, ...)

dw(d, ...)

daw(d, D, ...)

dww(d, D, ...)

da0(...)

da1(...)

daB(...)

daC(...)

daD(...)

daG(...)

daP(...)

daQ(...)

daS(...)

daT(...)

dw0(...)

dw1(...)

dwB(...)

dwC(...)

dwD(...)

dwG(...)

dwP(...)

dwQ(...)

dwS(...)

dwT(...)

daw00(...)

daw01(...)

daw0B(...)

daw0C(...)

daw0D(...)

daw0G(...)

daw0P(...)

daw0Q(...)

daw0S(...)

daw0T(...)

daw10(...)

daw11(...)

daw1B(...)

daw1C(...)

daw1D(...)

daw1G(...)

daw1P(...)

daw1Q(...)

daw1S(...)

daw1T(...)

dawB0(...)

dawB1(...)

dawBB(...)

dawBC(...)

dawBD(...)

dawBG(...)

dawBP(...)

dawBQ(...)

dawBS(...)

dawBT(...)

dawC0(...)

dawC1(...)

dawCB(...)

dawCC(...)

dawCD(...)

dawCG(...)

dawCP(...)

dawCQ(...)

dawCS(...)

dawCT(...)

dawD0(...)

dawD1(...)

dawDB(...)

dawDC(...)

dawDD(...)

dawDG(...)

dawDP(...)

dawDQ(...)

dawDS(...)

dawDT(...)

dawG0(...)

dawG1(...)

dawGB(...)

dawGC(...)

dawGD(...)

dawGG(...)

dawGP(...)

dawGQ(...)

dawGS(...)

dawGT(...)

dawP0(...)

dawP1(...)

dawPB(...)

dawPC(...)

dawPD(...)

dawPG(...)

dawPP(...)

dawPQ(...)

dawPS(...)

dawPT(...)

dawQ0(...)

dawQ1(...)

dawQB(...)

dawQC(...)

dawQD(...)

dawQG(...)

dawQP(...)

dawQQ(...)

dawQS(...)

dawQT(...)

dawS0(...)

dawS1(...)

dawSB(...)

dawSC(...)

dawSD(...)

dawSG(...)

dawSP(...)

dawSQ(...)

dawSS(...)

dawST(...)

dawT0(...)

dawT1(...)

dawTB(...)

dawTC(...)

dawTD(...)

dawTG(...)

dawTP(...)

dawTQ(...)

dawTS(...)

dawTT(...)

dww00(...)

dww01(...)

dww0B(...)

dww0C(...)

dww0D(...)

dww0G(...)

dww0P(...)

dww0Q(...)

dww0S(...)

dww0T(...)

dww10(...)

dww11(...)

dww1B(...)

dww1C(...)

dww1D(...)

dww1G(...)

dww1P(...)

dww1Q(...)

dww1S(...)

dww1T(...)

dwwB0(...)

dwwB1(...)

dwwBB(...)

dwwBC(...)

dwwBD(...)

dwwBG(...)

dwwBP(...)

dwwBQ(...)

dwwBS(...)

dwwBT(...)

dwwC0(...)

dwwC1(...)

dwwCB(...)

dwwCC(...)

dwwCD(...)

dwwCG(...)

dwwCP(...)

dwwCQ(...)

dwwCS(...)

dwwCT(...)

dwwD0(...)

dwwD1(...)

dwwDB(...)

dwwDC(...)

dwwDD(...)

dwwDG(...)

dwwDP(...)

dwwDQ(...)

dwwDS(...)

dwwDT(...)

dwwG0(...)

dwwG1(...)

dwwGB(...)

dwwGC(...)

dwwGD(...)

dwwGG(...)

dwwGP(...)

dwwGQ(...)

dwwGS(...)

dwwGT(...)

dwwP0(...)

dwwP1(...)

dwwPB(...)

dwwPC(...)

dwwPD(...)

dwwPG(...)

dwwPP(...)

dwwPQ(...)

dwwPS(...)

dwwPT(...)

dwwQ0(...)

dwwQ1(...)

dwwQB(...)

dwwQC(...)

dwwQD(...)

dwwQG(...)

dwwQP(...)

dwwQQ(...)

dwwQS(...)

dwwQT(...)

dwwS0(...)

dwwS1(...)

dwwSB(...)

dwwSC(...)

dwwSD(...)

dwwSG(...)

dwwSP(...)

dwwSQ(...)

dwwSS(...)

dwwST(...)

dwwT0(...)

dwwT1(...)

dwwTB(...)

dwwTC(...)

dwwTD(...)

dwwTG(...)

dwwTP(...)

dwwTQ(...)

dwwTS(...)

dwwTT(...)
}
\arguments{
\item{d, D}{\link[=chr_scl]{Character scalar} delimiters.}

\item{...}{An arbitrary number of atomic vector arguments to be delimited. Argument in \code{...} must be recyclable for functions that delimit across \code{...} arguments as the first or only step (i.e., functions with names beginning with \code{da}).}
}
\value{
\emph{A character vector} \cr   \verb{daX, da, dw}
\cr\cr \emph{A character scalar} \cr   \verb{dawXY, dwwXY, daw, dww}
}
\description{
Simplified and extended \code{base::paste} and \code{base::paste0}. There are both primary functions with user-specified delimiters and convenience functions for common delimiters.
\cr
\cr
\strong{Primary functions}
\tabular{rl}{
  \code{dww}   \tab Delimit elements within each (atomic vector) \code{...} argument using delimiter \code{d}, then delimit elements within the resulting vector using delimiter \code{D}. Produces a character scalar of \code{...length()} substrings delimited by \code{D} where each substring contains sub-substrings delimited by \code{d}.
\cr \code{daw}   \tab Delimit across corresponding elements of (recyclable atomic vector) \code{...} arguments using delimiter \code{d}, then delimit elements within the resulting character vector using delimiter \code{D}. Produces a character scalar of \code{...length()} substrings delimited by \code{D} where each substring contains \code{max(lengths(list(...)))} sub-substrings delimited by \code{d}.
\cr  \code{dw}   \tab Delimits elements within each (atomic vector) \code{...} argument using delimiter \code{d}. Produces a character vector of \code{...length()} substrings delimited by \code{d}.
\cr  \code{da}   \tab Delimits across corresponding elements of (recyclable atomic vector) \code{...} arguments using delimiter \code{d}. Produces a character vector of \code{max(lengths(list(...)))} substrings delimited by \code{d}.
}
\cr \strong{Common-delimiter convenience functions}
\cr Convenience function names are constructed by append \code{1} or \code{2} codes for common delimiters to the function name as follows (where \code{X} and \code{Y} are placeholders for common-delimiter codes):
\tabular{rl}{
  \code{dawXY}   \tab Delimits across with \code{X} then within with \code{Y}.
\cr \code{dwwXY}   \tab Delimits within with \code{X} then again with \code{Y}.
\cr   \code{daX}   \tab Delimits across with \code{X}.
\cr   \code{dwX}   \tab Delimits within with \code{X}.
}
\cr Common delimiters are encoded as: \tabular{cll}{
  \emph{Code}   \tab \emph{Name}                      \tab \emph{Delimiter}
\cr   \code{'0'}   \tab blank                       \tab \code{''}
\cr \code{'1'}     \tab space                       \tab \code{' '}
\cr \code{'B'}     \tab broken pipe                 \tab \code{'¦'}
\cr \code{'C'}     \tab colon                       \tab \code{':'}
\cr \code{'D'}     \tab dot                         \tab \code{'.'}
\cr \code{'G'}     \tab grammatical comma\eqn{^1}   \tab \code{', '}
\cr \code{'P'}     \tab pipe                        \tab \code{'|'}
\cr \code{'Q'}     \tab back-tick                   \tab \code{'``'}
\cr \code{'S'}     \tab simple comma\eqn{^1}        \tab \code{','}
\cr \code{'T'}     \tab tilde                       \tab \code{'~'}
}
\verb{ }\eqn{^{1.}} 'Grammatical comma' vs. 'simple comma' indicates whether the function produces grammatical comma-delimited lists vs. simple comma-delimited values (e.g., \code{'1, 2, 3'} vs. \code{'1,2,3'}).
}
\examples{
# delimit across using delimiter '|'.
# aliases paste(1:3, 4:6, sep = '|').
da('|', 1:3, 4:6)

# delimit within using delimiter ':'.
# aliases sapply(list(1:3, 4:6), paste0, collapse = ':').
dw(':', 1:3, 4:6)

# delimit across using '|', then within using ':'
# aliases paste(..., sep = d, collapse = D)
daw('|', ':', 1:3, 4:6)

# delimit within using '|' then again within using ':'.
# aliases paste0(sapply(list(...), paste0, collapse = d), collapse = D).
dww('|', ':', 1:3, 4:6)

# delimit across using pipe (encoded by 'P' suffix in function name).
daP(1:3, 4:6)

# delimit within using colon (encoded by 'C' suffix in function name).
dwC(1:3, 4:6)

# delimit across using pipe, then within using colon.
dawPC(1:3, 4:6)

# delimit within using colon, then again using pipe.
dwwCP(1:3, 4:6)
}
\seealso{
Other strings: 
\code{\link{blank}()},
\code{\link{chn}()},
\code{\link{fsub}()},
\code{\link{gr}},
\code{\link{ipat}()},
\code{\link{makestr}},
\code{\link{markdown}},
\code{\link{max_nch}()},
\code{\link{ox}()},
\code{\link{pgrid}()},
\code{\link{revstr}()},
\code{\link{spaces}()},
\code{\link{ss}()},
\code{\link{tocase}()},
\code{\link{weave}()}
}
\concept{strings}
