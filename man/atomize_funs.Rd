% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atomize_funs.R
\encoding{UTF-8}
\name{atomize_funs}
\alias{atomize_funs}
\alias{atomize}
\alias{glue_av}
\alias{paste_av}
\alias{sort_uv}
\alias{which_av}
\alias{sort_av}
\alias{unique_av}
\alias{atoms}
\alias{av}
\alias{a}
\alias{sv}
\alias{gv}
\alias{pv}
\alias{uv}
\alias{suv}
\alias{wv}
\title{Atomize}
\usage{
atomize_funs()

atomize(...)

glue_av(..., g = "")

paste_av(..., p = "", s = "")

sort_uv(...)

which_av(...)

sort_av(...)

unique_av(...)

atoms(...)

av(...)

a(...)

sv(...)

gv(..., g = "")

pv(..., p = "", s = "")

uv(...)

suv(...)

wv(...)
}
\arguments{
\item{...}{Arguments to be atomized. Expected to atomize to a logical vector for \code{which_av} and its aliases \code{wav} and \code{wv}.}

\item{g}{Character scalar glue for gluing.}

\item{p}{Character scalar prefix.}

\item{s}{Character scalar suffix.}
}
\description{
Get (and maybe process) a vector of all atoms contained in the full set of \code{...} args.
}
\section{Functions}{
\itemize{
\item \code{atomize()}: Flattens \code{...} args to an atomic vector of the constituent atomic elements of \code{...} without any attributes. Returns an atomic vector.

\item \code{glue_av()}: Atomizes \code{...} and glues the resulting atomic vector into an atomic scalar using \code{g} as the glue. Thinly wraps \code{paste0(av(...), collapse = "g")}. Returns a character scalar.

\item \code{paste_av()}: Atomizes \code{...} and pastes a prefix and a suffix to the resulting values. Thinly wraps \code{paste(p, av(...), s)}. Returns a character vector.

\item \code{sort_uv()}: Atomizes \code{...} and sorts the unique values of the result. Thinly wraps \code{sort(unique(av(...)))}. Returns a sorted unique atomic vector.

\item \code{which_av()}: Atomizes \code{...} and integer indexes the \code{TRUE} values in the result. Thinly wraps \code{which(av(...))}. Returns a logical vector.

\item \code{sort_av()}: Atomizes \code{...} and sorts the result. Thinly wraps \code{sort(av(...))}. Returns a sorted atomic vector.

\item \code{unique_av()}: Atomizes \code{...} and returns the unique values of the result. Thinly wraps \code{unique(av(...))}. Returns a unique atomic vector.

\item \code{atoms()}: An alias for \code{atomize}.

\item \code{av()}: An alias for \code{atomize}.

\item \code{a()}: An alias for \code{atomize}.

\item \code{sv()}: An alias for \code{sort_av}.

\item \code{gv()}: An alias for \code{glue_av}.

\item \code{pv()}: An alias for \code{paste_av}.

\item \code{uv()}: An alias for \code{unique_av}.

\item \code{suv()}: An alias for \code{sort_uv}.

\item \code{wv()}: An alias for \code{which_av}.

}}
\examples{
x <- list("a", "b", "c")
y <- data.frame(1:3)
x
y
a(x)
av(y)
atoms(x, y)
atomize(x, "d", y, 4)
glue_av(letters, LETTERS, g = "-")
paste_av(letters, p = "\u2022 ", s = ".")
sort_av(letters, LETTERS, 0:9)
sort_uv(letters, LETTERS, 0:9)
unique_av(letters, "d", 0:9, 5)
}
\seealso{
Other extensions: 
\code{\link{N}()},
\code{\link{case}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{failsafe}()},
\code{\link{flex_rbind}()},
\code{\link{fork}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}()},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{stats0}()},
\code{\link{swaps}()},
\code{\link{value_exists}()}

Other values: 
\code{\link{na}()},
\code{\link{nth}},
\code{\link{values}()}
}
\concept{extensions}
\concept{values}
