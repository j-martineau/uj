% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compatible.R
\encoding{UTF-8}
\name{compatible}
\alias{compatible}
\alias{compatible_mats}
\alias{compatible_dtfs}
\title{Are objects compatible?}
\usage{
compatible(..., rec. = FALSE)

compatible_mats(b, ...)

compatible_dtfs(b, ...)
}
\arguments{
\item{...}{An arbitrary number of arguments to be checked for compatibility with each other.}

\item{rec.}{A non-\code{NA} logical scalar indicating whether arguments in \code{...} must be recyclable to be compatible.}
}
\value{
A logical scalar.
}
\description{
\tabular{rl}{
  \code{compatible}   \tab Evaluates whether all \code{...} arguments are compatible, meaning all numeric, all character, all logical, all unordered factor with the same levels, or ordered factor with the same levels in the same order.
} \tabular{rl}{
  \code{compatible_atms}   \tab Evaluates whether all \code{...} arguments are compatible matrices and (for row binding) have the same number of columns or (for column binding) have the same number of rows.
\cr \code{compatible_dtfs}   \tab Evaluates whether all \code{...} arguments are \link[=atm_dtf]{atomic data.frames}. For row binding, also evaluates whether they have the same number of columns and all corresponding columns are compatible. For column binding, also evaluates whether they have the same number of rows.
}
}
\examples{
n0 <- 0
n7 <- 0:7
n9 <- 0:9

c0 <- as.character(n0)
c7 <- as.character(n7)
c9 <- as.character(n9)

l0 <- n0 < 4
l7 <- n7 < 3
l9 <- n9 < 2

dtf7.ncl. <- data.frame(n = n7, c = c7, l = l7)
dtf9.ncl. <- data.frame(n = n9, c = c9, l = l9)
dtf7.cln. <- data.frame(C = c7, L = l7, N = n7)
dtf9.cln. <- data.frame(C = c9, L = l9, N = n9)

u00 <- factor(c0, levels = c0, ordered = F)
u07 <- factor(c0, levels = c7, ordered = F)
u09 <- factor(c0, levels = c9, ordered = F)
u79 <- factor(c7, levels = c9, ordered = F)
u99 <- factor(c9, levels = c9, ordered = F)

o00 <- factor(c0, levels = c0, ordered = F)
o07 <- factor(c0, levels = c7, ordered = F)
o09 <- factor(c0, levels = c9, ordered = F)
o79 <- factor(c7, levels = c9, ordered = F)
o99 <- factor(c9, levels = c9, ordered = F)

compatible(n0, n7, n9)
compatible(c0, c7, c9, rec. = T)

compatible(c0, c7, c9)
compatible(l0, l7, l9, rec. = T)

compatible(l0, l7, l9)
compatible(n0, n7, n9, rec. = T)

compatible(u09, u79, u99)
compatible(u00, u07, u09)

compatible(o09, o79, o99)
compatible(o00, o07, o09)

dtf7.ncl. <- data.frame(n = n7, c = c7, l = l7)
dtf9.ncl. <- data.frame(n = n9, c = c9, l = l9)
dtf7.cln. <- data.frame(C = c7, L = l7, N = n7)
dtf9.cln. <- data.frame(C = c9, L = l9, N = n9)

compatible_dtfs("r", dtf7.ncl., dtf9.ncl.)
compatible_dtfs("c", dtf7.ncl., dtf9.ncl.)
compatible_dtfs("r", dtf7.ncl., dtf7.cln.)
compatible_dtfs("c", dtf7.ncl., dtf7.cln.)
}
\seealso{
Other extensions: 
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{envir_vals}},
\code{\link{evals}},
\code{\link{failsafe_binaries}},
\code{\link{failsafe_is}},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{is_unique}()},
\code{\link{n_is}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{stats0}},
\code{\link{swap}()}

Other properties: 
\code{\link{as_mmm}},
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{cls}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{ddd}()},
\code{\link{eee}()},
\code{\link{err_check}()},
\code{\link{iii}()},
\code{\link{is_unique}()},
\code{\link{meets}()},
\code{\link{mmm_ccc}()},
\code{\link{mmm}()},
\code{\link{ppp}()},
\code{\link{sss}()},
\code{\link{unq_ccc}()}
}
\concept{extensions}
\concept{properties}
