% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eee.R
\name{eee}
\alias{eee}
\alias{eee_props}
\alias{is_eee_spec}
\alias{ieee}
\alias{ie0D}
\alias{ie1D}
\alias{ie2D}
\alias{ieHD}
\alias{ieUD}
\alias{neee}
\title{Effective dimensionality properties}
\usage{
eee(x)

eee_props()

is_eee_spec(spec)

ieee(x, spec, ...)

ie0D(x, ...)

ie1D(x, ...)

ie2D(x, ...)

ieHD(x, ...)

ieUD(x, ...)

neee(x)
}
\arguments{
\item{x}{An R object.}

\item{spec}{\code{NULL} or a \link[=cmp_chr_scl]{complete character vec}
containing one or more effective dimensionality properties (i.e., from
\code{eee_vals()}). \strong{NOTE}: properties may be pipe-separated. If
If there are multiple properties in \code{spec}, \code{x} is inspected for
a match to any of the specified properties.}

\item{...}{
  Arguments passed on to \code{\link[=meets]{meets}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
\strong{\code{eee_vals}}: A character vector.
\cr\cr\strong{\code{eee}}: A character scalar or character vector.
\cr\cr\strong{\code{iEEE, ieee, is_eee_spec}}: A logical scalar.
}
\description{
Effective dimensionality of a non-empty object is defined as
the number of dimensions with multiple indexed positions. Effective
dimensionality is undefined for empty objects. The following table
describes values of effective dimensionality, property names assigned to
them, and a definition of those values.\tabular{llll}{
NUMBER OF    \tab EFFECTIVE        \tab EFFECTIVE
\tab CHARACTERISTICS\cr
EFFECTIVE    \tab DIMENSIONALITY   \tab DIMENSIONALITY   
\tab OF QUALIFYING\cr
DIMENSIONS   \tab PROPERTY VALUE   \tab PROPERTY NAME   
\tab OBJECTS      \cr
\code{NaN}\tab\code{'eUD'}\tab Effectively dimensionally undefined
\tab \code{NULL} or of length 0.              \cr
\code{0}  \tab\code{'e0D'}\tab Effectively \code{0}-dimensional
\tab Vector of length 1, vlist of length 1, array
of length 1, or code{1 × 1} data.frame   \cr
\code{1}  \tab\code{'e1D'}\tab Effectively \code{1}-dimensional
\tab Vector or vlist of length 2+ or
non-empty array with multiple index
positions in \code{1} dimension.         \cr
\code{2}  \tab\code{'e2D'}\tab Effectively \code{2}-dimensional
\tab Data frames or matrices with multiple rows
and multiple columns and non-empty arrays
with multiple index positions in exactly
\code{2} dimensions.                     \cr
\code{≥ 3}\tab\code{'eHD'}\tab Effectively hyper-dimensional
\tab Non-empty array with multiple index
positions in at least 3 dimensions.        }
Functions related to effective dimensionality properties are as follows:
\tabular{ll}{
EEE FUNCTION         \tab WHAT IT DOES                                \cr
\code{iEEE}          \tab Evaluates whether \code{x} matches the
effective dimensionality property \code{EEE}
(subject to any restrictions in \code{...}).\cr
\code{eee}           \tab Gets a character vector containing all
effective dimensionality properties matching
\code{x}.                                   \cr
\code{ieee}          \tab Evaluates \code{x} against the
effective dimensionality property specification
in \code{spec} (subject to any restrictions in
\code{...}).                                \cr
\code{eee_props}     \tab Gets a character vector of all possible
effective dimensionality property values.   \cr
\code{is_eee_spec}   \tab Evaluates whether \code{spec} is a valid
effective dimensionality property
specification.                                }
}
\section{Specifying Count and Value Restrictions}{

Specifying additional requirements in \code{...} is optional. The full set
of recognized arguments names are defined in the following table along with
the properties each specifies:\tabular{ll}{
NAME          \tab WHAT IT SPECIFIES                                    \cr
\code{n}      \tab Vec of valid lengths/numbers of elements.            \cr
\code{nr}     \tab Vec of valid numbers of rows.                        \cr
\code{nc}     \tab Vec of valid numbers of columns.                     \cr
\code{min}    \tab Scalar minimum valid length/number of element.       \cr
\code{minr}   \tab Scalar minimum valid number of rows.                 \cr
\code{minc}   \tab Scalar minimum valid number of columns.              \cr
\code{max}    \tab Scalar maximum valid length/number of element.       \cr
\code{maxr}   \tab Scalar maximum valid number of rows.                 \cr
\code{maxc}   \tab Scalar maximum valid number of columns.              \cr
\code{vals}   \tab Vec of valid values.                                 \cr
\code{lt}     \tab Scalar less-than bound on values of \code{x}.        \cr
\code{le}     \tab Scalar less-than-or-equal bound on values of
\code{x}.                                            \cr
\code{ge}     \tab Scalar greater-than-or-equal bound on values of
\code{x}.                                            \cr
\code{gt}     \tab Scalar greater-than bound on values of \code{x}.       }
}

\seealso{
Other props: 
\code{\link{as_mmm}},
\code{\link{bbb_ccc}()},
\code{\link{bbb_mmm}()},
\code{\link{bbb}()},
\code{\link{ccc}()},
\code{\link{cmp_ccc}()},
\code{\link{cmp_mmm_ccc_props}()},
\code{\link{cmp_mmm_ccc}()},
\code{\link{cmp_mmm}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{ddd}()},
\code{\link{iii}()},
\code{\link{meets}()},
\code{\link{mmm}()},
\code{\link{ppp}()},
\code{\link{sss}()}
}
\concept{props}
