% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basics.R
\encoding{UTF-8}
\name{basics_help}
\alias{basics_help}
\alias{g}
\alias{g0}
\alias{g1}
\alias{p}
\alias{p0}
\alias{p1}
\alias{na}
\alias{ok}
\alias{wna}
\alias{wok}
\alias{null}
\alias{def}
\alias{lo}
\alias{hi}
\alias{len}
\alias{mid}
\alias{spf}
\alias{levs}
\alias{rounded}
\alias{clabs}
\alias{dlabs}
\alias{rlabs}
\alias{vlabs}
\alias{is_atm}
\alias{is_chr}
\alias{is_fac}
\alias{is_int}
\alias{is_lgl}
\alias{is_num}
\alias{is_ord}
\alias{is_uno}
\alias{not_atm}
\alias{not_chr}
\alias{not_fac}
\alias{not_int}
\alias{not_lgl}
\alias{not_num}
\alias{not_ord}
\alias{not_uno}
\alias{is_arr}
\alias{is_dtf}
\alias{is_fun}
\alias{is_lst}
\alias{is_mat}
\alias{is_vec}
\alias{not_arr}
\alias{not_dtf}
\alias{not_fun}
\alias{not_lst}
\alias{not_mat}
\alias{not_vec}
\alias{x_in}
\alias{x_mf}
\title{Wrappers for \code{base} functions}
\usage{
basics_help()

g(g, ...)

g0(...)

g1(...)

p(p, ...)

p0(...)

p1(...)

na(x)

ok(x)

wna(x)

wok(x)

null(x)

def(x)

lo(x)

hi(x)

len(x)

mid(x, start, stop)

spf(fmt, ...)

levs(x)

rounded(x)

clabs(x)

dlabs()

rlabs(x)

vlabs(x)

is_atm(x)

is_chr(x)

is_fac(x)

is_int(x)

is_lgl(x)

is_num(x)

is_ord(x)

is_uno(x)

not_atm(x)

not_chr(x)

not_fac(x)

not_int(x)

not_lgl(x)

not_num(x)

not_ord(x)

not_uno(x)

is_arr(x)

is_dtf(x)

is_fun(x)

is_lst(x)

is_mat(x)

is_vec(x)

not_arr(x)

not_dtf(x)

not_fun(x)

not_lst(x)

not_mat(x)

not_vec(x)

x_in(x, ...)

x_mf(x, ...)
}
\description{
Wrappers for frequently used \code{base} package functions.
}
\details{
\strong{Basic function wrappers not related to counts/lengths}
\tabular{ll}{  \code{g}       \tab \code{paste0(av(...), collapse = g)} (glues \code{...}) \cr
  \code{p}       \tab \code{paste(..., sep = p)}                         \cr
  \code{g0}      \tab \code{paste0(av(...), collapse = "")}              \cr
  \code{p0}      \tab \code{paste(..., sep = "")}                        \cr
  \code{g1}      \tab \code{paste0(av(...), collapse = " ")}             \cr
  \code{p1}      \tab \code{paste(..., sep = " ")}          \cr   \tab   \cr
  \code{hi}      \tab \code{ceiling(x)}                                  \cr
  \code{lo}      \tab \code{floor(x)}                       \cr   \tab   \cr
  \code{na}      \tab \code{is.na(x)}                                    \cr
  \code{ok}      \tab \code{!is.na(x)}                      \cr   \tab   \cr
  \code{wna}     \tab \code{which(na(x))}                                \cr
  \code{wok}     \tab \code{which(ok(x))}                   \cr   \tab   \cr
  \code{len}     \tab \code{nchar(x)}                       \cr   \tab   \cr
  \code{mid}     \tab \code{substr(.)}                      \cr   \tab   \cr
  \code{spf}     \tab \code{sprintf(.)}                     \cr   \tab   \cr
  \code{levs}    \tab \code{levels(x)}                      \cr   \tab   \cr
  \code{none}    \tab \code{!any(av(...))}                  \cr   \tab   \cr
  \code{x_in}    \tab \code{x[isIN(x, ...)]}                             \cr
  \code{x_mf}    \tab \code{x[isMF(x, ...)]}                \cr   \tab   \cr
  \code{clabs}   \tab \code{colnames(x)}                                 \cr
  \code{dlabs}   \tab \code{...names(x)}                                 \cr
  \code{elabs}   \tab \code{names(x)}                                    \cr
  \code{rlabs}   \tab \code{rownames}                       \cr   \tab     }
\tabular{ll}{  \verb{is_arr, not_arr}   \tab \verb{(!)is.array(x)}                           \cr
  \verb{is_dtf, not_dtf}   \tab \verb{(!)is.data.frame(x)}                      \cr
  \verb{is_fun, not_fun}   \tab \verb{(!)is.function(x)}                        \cr
  \verb{is_lst, not_lst}   \tab \verb{(!)is.list(x)}                            \cr
  \verb{is_mat, not_mat}   \tab \verb{(!)is.matrix(x)}                          \cr
  \verb{is_vec, not_veq}   \tab \verb{(!)is.vector(x)}             \cr   \tab   \cr
  \verb{is_atm, not_atm}   \tab \verb{(!)is.atomic(x)}                          \cr
  \verb{is_chr, not_chr}   \tab \verb{(!)is.character(x)}                       \cr
  \verb{is_fac, not_fac}   \tab \verb{(!)is.factor(x)}                          \cr
  \verb{is_int, not_int}   \tab \verb{(!)is.integer(x)}                         \cr
  \verb{is_lgl, not_lgl}   \tab \verb{(!)is.logical(x)}                         \cr
  \verb{is_num, not_num}   \tab \verb{(!)is.numeric(x)}                         \cr
  \verb{is_ord, not_ord}   \tab \verb{(!)is.ordered(x)}                         \cr
  \verb{is_uno, not_uno}   \tab \verb{(!)is_fac(x) & (!)is_ord(x)} \cr   \tab     }
}
\section{Functions}{
\itemize{
\item \code{g()}: Calls \code{paste0(av(...), collapse = g)}.

\item \code{g0()}: Calls \code{paste0(av(...), collapse = "")}.

\item \code{g1()}: Calls \code{paste0(av(...), collapse = " ")}.

\item \code{p()}: Calls \code{paste0(..., sep = p)}.

\item \code{p0()}: Calls \code{paste0(...)}.

\item \code{p1()}: Calls \code{paste(..., sep = " ")}.

\item \code{na()}: A thin wrapper for \code{\link[base]{is.na}}

\item \code{ok()}: A thin wrapper for \code{\link[base]{!is.na}}

\item \code{wna()}: Evaluates which values of \code{x} are \code{NA}.

\item \code{wok()}: Evaluates which values of \code{x} are OK (i.e., not \code{NA}).

\item \code{null()}: Evaluates whether \code{x} is \code{NULL}.

\item \code{def()}: Evaluates whether \code{x} is defined (i.e., not \code{NULL}).

\item \code{lo()}: A thin wrapper for \code{\link[base]{floor}}

\item \code{hi()}: A thin wrapper for \code{\link[base]{ceiling}}

\item \code{len()}: A thin wrapper for \code{\link[base]{nchar}}

\item \code{mid()}: A thin wrapper for \code{\link[base]{substr}}

\item \code{spf()}: A thin wrapper for \code{\link[base]{sprintf}}.

\item \code{levs()}: Gets the levels (ordered, unordered factor) \code{x}.

\item \code{rounded()}: Evaluates whether \code{x} is rounded to the nearest integer.

\item \code{clabs()}: Gets names of columns of \code{x}.

\item \code{dlabs()}: Gets names of dots (\code{...}).

\item \code{rlabs()}: Gets names of the rows of \code{x}.

\item \code{vlabs()}: Gets names of the values of \code{x}.

\item \code{is_atm()}: Evaluates whether \code{x} is of atomic mode.

\item \code{is_chr()}: Evaluates whether \code{x} is of mode character.

\item \code{is_fac()}: Evaluates whether \code{x} is of mode factor.

\item \code{is_int()}: Evaluates whether \code{x} is of mode integer.

\item \code{is_lgl()}: Evaluates whether \code{x} is of mode logical

\item \code{is_num()}: Evaluates whether \code{x} is of mode numeric.

\item \code{is_ord()}: Evaluates whether \code{x} is of mode ordered factor.

\item \code{is_uno()}: Evaluates whether \code{x} is of mode unordered factor.

\item \code{not_atm()}: Evaluates whether \code{x} is \emph{not} atomic.

\item \code{not_chr()}: Evaluates whether \code{x} is \emph{not} of mode character

\item \code{not_fac()}: Evaluates whether \code{x} is \emph{not} of mode factor.

\item \code{not_int()}: Evaluates whether \code{x} is \emph{not} of mode integer.

\item \code{not_lgl()}: Evaluates whether \code{x} is \emph{not} of mode logical.

\item \code{not_num()}: Evaluates whether \code{x} is \emph{not} of mode numeric.

\item \code{not_ord()}: Evaluates whether \code{x} is \emph{not} of mode ordered factor.

\item \code{not_uno()}: Evaluates whether \code{x} is \emph{not} of mode unordered factor.

\item \code{is_arr()}: Evaluates whether \code{x} is an array.

\item \code{is_dtf()}: Evaluates whether \code{x} is a data.frame.

\item \code{is_fun()}: Evaluates whether \code{x} is a function.

\item \code{is_lst()}: Evaluates whether \code{x} is a list.

\item \code{is_mat()}: Evaluates whether \code{x} is a matrix.

\item \code{is_vec()}: Evaluates whether \code{x} is a vector.

\item \code{not_arr()}: Evaluates whether \code{x} is \emph{not} an array

\item \code{not_dtf()}: Evaluates whether \code{x} is \emph{not} a data.frame.

\item \code{not_fun()}: Evaluates whether \code{x} is \emph{not} a function.

\item \code{not_lst()}: Evaluates whether \code{x} is \emph{not} a list.

\item \code{not_mat()}: Evaluates whether \code{x} is \emph{not} a matrix.

\item \code{not_vec()}: Evaluates whether \code{x} is \emph{not} a vector.

\item \code{x_in()}: Evaluates whether elements of \code{x} are contained in the atomic elements of \code{...}.

\item \code{x_mf()}: Evaluates whether elements of \code{x} are missing from the atomic elements of \code{...}.

}}
\examples{
vals <- c(1:3, 2:4) / 3
vars <- c("a", "bb", "ccc", "dddd", "ccc", "bb")
text <- "\%s = \%0.2f and \%s = \%0.0f"
vals
vars
text
lo(vals)
hi(vals)
len(vars)
mid(vars, 1, 3)
spf(text, vars[1:3], vals[1:3], vars[4:6], vals[4:6])
### more examples ###
}
\seealso{
Other wraps: 
\code{\link{dp}()},
\code{\link{dt}()},
\code{\link{gg_help}()},
\code{\link{gr}},
\code{\link{rd_help}()},
\code{\link{tb_help}()}
}
\concept{wraps}
