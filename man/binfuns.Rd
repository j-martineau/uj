% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binfuns.R
\name{binfuns}
\alias{binfuns}
\alias{\%IS\%}
\alias{\%ISNT\%}
\alias{\%EQ\%}
\alias{\%NEQ\%}
\alias{\%AND\%}
\alias{\%OR\%}
\alias{\%NOT\%}
\alias{\%ONE\%}
\alias{\%IN\%}
\alias{\%OUT\%}
\alias{\%HAS\%}
\alias{\%LACKS\%}
\title{Scalar Result Failsafe Binary Logical Functions}
\usage{
x \%IS\% y

x \%ISNT\% y

x \%EQ\% y

x \%NEQ\% y

x \%AND\% y

x \%OR\% y

x \%NOT\% y

x \%ONE\% y

x \%IN\% y

x \%OUT\% y

x \%HAS\% y

x \%LACKS\% y
}
\arguments{
\item{x, y}{Any R objects.}
}
\value{
A logical scalar.
}
\description{
\tabular{ll}{
FUNCTION    \tab WHAT IT DOES                                           \cr
\verb{\%IS\%}      \tab Evaluate whether \code{x} and \code{y} are identical.            \cr
\verb{\%ISNT\%}    \tab Evaluate whether \code{x} and \code{y} are NOT identical.        \cr
\verb{\%EQ\%}      \tab Evaluate whether \code{x} and \code{y} are setequal. (A)         \cr
\verb{\%NEQ\%}     \tab Evaluate whether \code{x} and \code{y} are NOT setequal. (A)     \cr
\verb{\%AND\%}     \tab Evaluate whether \code{x} and \code{y} are both scalar \code{TRUE}.   \cr
\verb{\%OR\%}      \tab Evaluate whether \code{x} and \code{y} is scalar \code{TRUE} or both. \cr
\verb{\%NOR\%}     \tab Evaluate whether \code{x} and \code{y} are both scalar \code{FALSE}.  \cr
\verb{\%ONE\%}     \tab Evaluate whether either \code{x} or \code{y} is scalar \code{TRUE}, but
not both.                                              \cr
\verb{\%IN\%}      \tab Evaluate whether atomic scalar \code{x} is contained in atomic
object \code{y}. (B)                                        \cr
\verb{\%OUT\%}     \tab Evaluate whether atomic scalar \code{x} is NOT contained in
atomic object \code{y}. (B)                                 \cr
\verb{\%HAS\%}     \tab Evaluate whether atomic object \code{x} contains atomic scalar
\code{y} (C).                                               \cr
\verb{\%LACKS\%}   \tab Evaluate whether atomic object \code{x} lacks (does not
contain) atomic scalar \code{y}. (C)                          }
(A) If \code{x} and \code{y} are not \link[=compatible]{compatible}, \verb{\%EQ\%} and
\verb{\%NEQ\%} return \code{FALSE} and \code{TRUE}, respectively.
\cr\cr
(B) If \code{x} is not atomic, \code{y} is not atomic scalar, or \code{x} and \code{y} are not
compatible, \verb{\%IN\%} and \verb{\%OUT\%} return \code{FALSE} and \code{TRUE}, respectively.
\cr\cr
(C) If \code{x} is not atomic scalar, \code{y} is not atomic, or \code{x} and \code{y} are not
compatible, \verb{\%HAS\%} and \verb{\%LACKS\%} return \code{FALSE} and \code{TRUE}, respectively.
}
\seealso{
Other extensions: 
\code{\link{atomize}},
\code{\link{callers}()},
\code{\link{case}()},
\code{\link{dots_uj}},
\code{\link{envir_vals}},
\code{\link{ex}()},
\code{\link{failsafe}()},
\code{\link{files_uj}},
\code{\link{fork}()},
\code{\link{fsub}()},
\code{\link{is_failsafe}},
\code{\link{is_unq}()},
\code{\link{make_uj}},
\code{\link{n_is}()},
\code{\link{n_th}()},
\code{\link{naming}},
\code{\link{na}()},
\code{\link{os}()},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{put}()},
\code{\link{reclass}()},
\code{\link{recycling}},
\code{\link{removal}},
\code{\link{run}()},
\code{\link{stats0}},
\code{\link{swap}()},
\code{\link{uj_logicals}},
\code{\link{xb}()}

Other logicals: 
\code{\link{is_failsafe}},
\code{\link{uj_logicals}}

Other failsafe: 
\code{\link{failsafe}()},
\code{\link{is_failsafe}}
}
\concept{extensions}
\concept{failsafe}
\concept{logicals}
