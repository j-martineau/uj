% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callers.R
\encoding{UTF-8}
\name{callers}
\alias{callers}
\alias{caller}
\alias{ncallers}
\title{Generations of functions in the call stack}
\usage{
callers(gens = NULL)

caller()

ncallers()
}
\arguments{
\item{gens}{A \link[cmp_psw_vec]{complete positive whole-number vec} giving the number(s) of generations back in the function call stack to go.}
}
\value{
\emph{A character vector}
\cr    \code{callers}
\cr\cr \emph{A character scalar}
\cr    \code{caller}
\cr\cr \emph{A numeric scalar}
\cr    \code{ncallers}
}
\description{
\tabular{rl}{
  \code{ncallers}   \tab Gets the number of functions in the call stack.
\cr             \tab  
\cr \code{callers}   \tab Gets names of all calling functions, with the immediate calling function in position \code{1}, optionally selecting the \code{gens.}-th element(s).
\cr             \tab  
\cr  \code{caller}   \tab Gets the name of the immediate calling function.
}
}
\examples{
fun.a <- function() {A <- 0; fun.b()}
fun.b <- function() {B <- 1; fun.c()}
fun.c <- function() {
  cat("\n callers(): " , paste0("'", callers(), "'"))
  cat("\n callers(1): '", callers(1), "'")
  cat("\n callers(2): '", callers(2), "'")
  cat("\n")
  cat("\n vexists('A', err = F, gens = 1): ", vexists('A', err = F, gens = 1))
  cat("\n vexists('A', err = F, gens = 2): ", vexists('A', err = F, gens = 2))
  cat("\n vget('A', err = F, gens = 2): ", vget('A', err = F, gens = 2))
  cat("\n")
  cat("\n vexists('B', err = F, gens = 1): ", vexists('B', err = F, gens = 1))
  cat("\n vexists('B', err = F, gens = 2): ", vexists('B', err = F, gens = 2))
  cat("\n vget('B', err = F, gens = 1): ", vget('B', err = F, gens = 1))
}
fun.a()
}
\seealso{
Other environments: 
\code{\link{envir_vals}},
\code{\link{os}()},
\code{\link{recycling}}

Other meta: 
\code{\link{dots_uj}},
\code{\link{pause}()},
\code{\link{ply}()},
\code{\link{recycling}},
\code{\link{run}()},
\code{\link{say}()},
\code{\link{x}()}
}
\concept{environments}
\concept{meta}
