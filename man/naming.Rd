% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/naming.R
\encoding{UTF-8}
\name{naming}
\alias{naming}
\alias{namev}
\alias{namer}
\alias{namec}
\alias{namel}
\alias{namerc}
\alias{name}
\alias{named}
\alias{enamed}
\alias{rnamed}
\alias{cnamed}
\alias{rcnamed}
\alias{dnamed}
\alias{getnames}
\alias{dn}
\alias{en}
\alias{rn}
\alias{cn}
\alias{rcn}
\title{Get names, set names, determine whether named}
\usage{
namev(x, en)

namer(x, rn)

namec(x, cn)

namel(x, ln)

namerc(x, rn, cn)

name(x, en = NULL, rn = NULL, cn = NULL)

named(x, d = 0, u = T, blank = F)

enamed(x, u = T, blank = F)

rnamed(x, u = T, blank = F)

cnamed(x, u = T, blank = F)

rcnamed(x, u = T, blank = F)

dnamed(..., u = T, blank = F)

getnames(x, d = 0, u = T, err = F)

dn(..., u. = T, err. = F)

en(x, u = T, err = F)

rn(x, u = T, err = F)

cn(x, u = T, err = F)

rcn(x, u = T, err = F)
}
\arguments{
\item{x}{Vector or list for \code{namev} and \code{vn}; matrix or data.frame for \code{rn}, \code{namer}, \code{cn}, \code{namec}, and \code{namerc}; or any object for \code{namel}.}

\item{en}{A complete character vec of element names.}

\item{rn}{A complete character vec of row names.}

\item{cn}{A \link[=cmp_chr_vec]{complete character vec} of column names.}

\item{ln}{A non-\code{NA} character scalar to name the single elemnt of the resulting \link[=ivls]{vlist}.}

\item{d}{A \link[=cmp_psw_scl]{complete positive whole-number scalar} giving the dimension(s) to name: \code{0} for elements (of atomic or list vectors only), \code{1} for rows of matrices or tibbles, \code{2} for columns of matrices or data.frames, or \code{12} for rows and columns of matrices or data.frames.}

\item{u}{A non-\code{NA} logical scalar indicating whether names must be unique.}

\item{blank}{A non-\code{NA} logical scalar indicating whether blank strings (\code{""}) are allowed as names.}

\item{...}{An arbitrary number of arguments.}

\item{err}{A non-\code{NA} logical scalar indicating whether names must exist.}

\item{u.}{A non-\code{NA} logical scalar indicating whether \code{...} arg names must be unique.}

\item{err.}{A non-\code{NA} logical scalar indicating whether \code{...} args must have names.}
}
\value{
\emph{A logical scalar}
\cr   \verb{rcnamed, rnamed, cnamed}
\cr   \verb{dnamed,  enamed}
\cr   \code{named}
\cr
\cr \emph{A matrix or data.frame}
\cr   \verb{namerc, namer, namec}
\cr
\cr \emph{A character vector}
\cr   \verb{rn, cn, en}
\cr
\cr \emph{A \link[=ivec]{vec} or \link[=ivls]{vlist}}
\cr   \code{namev}
\cr
\cr\emph{A vec, vlist, matrix, or data.frame}
\cr   \code{name}
\cr
\cr \emph{A \code{1}-element vlist}
\cr   \code{namel}
\cr
\cr \emph{A \code{2}-element vlist}
\cr   \code{rcn}
}
\description{
\tabular{rl}{
  \code{uj::getnames}   \tab General name retrieval function (with optional restrictions).
\cr     \code{rcn}   \tab Gets matrix and data.frame row and column names.
\cr      \code{rn}   \tab Gets matrix and data.frame row names.
\cr      \code{cn}   \tab Gets matrix and data.frame row names.
\cr      \code{en}   \tab Gets vector abd \link[=ivls]{vlist} element names.
\cr      \code{dn}   \tab Gets \code{...} argument names.
\cr             \tab  
\cr   \code{named}   \tab General name existence check (with optional restrictions).
\cr \code{rcnamed}   \tab Are both rows and columns named?
\cr  \code{rnamed}   \tab Are rows of \code{x} named?
\cr  \code{cnamed}   \tab Are columns of \code{x} named?
\cr  \code{enamed}   \tab Are elements of \code{x} named?
\cr  \code{dnamed}   \tab Are \code{...} arguments named?
\cr             \tab  
\cr    \code{name}   \tab General naming function
\cr  \code{namerc}   \tab Names rows and columns of \code{x}.
\cr   \code{namer}   \tab Names rows of \code{x}.
\cr   \code{namec}   \tab Names columns of \code{x}.
\cr   \code{namev}   \tab Names elements of a vector or \code{\link[=ivls]{vlist}}.
\cr   \code{namel}   \tab Creates and names a \code{1}-element list.
}
}
\examples{
dots_named. <- function(...) {dnamed(...)}

Vec. <- 1:5
Vls. <- list(num = 1:5, ae = letters[1:5])
Mat. <- matrix(letters[1:25], nrow = 5)
Dtf. <- data.frame(ae = letters[1:5], AE = LETTERS[1:5])

Vec.
Vls.
Mat.
Dtf.

named(Vec.)
named(Vls.)
named(Mat., d = 12)
named(Dtf., d = 2)

enamed(Vls.)
rnamed(Mat.)
cnamed(Dtf.)
rcnamed(Dtf.)

dots_named.(Vec., Vls.)
dots_named.(var1 = Vec., var2 = Vls.)

uj::getnames(Vls.)
uj::getnames(Mat., d = 1)
uj::getnames(Dtf., d = 2)

en(Vec.)
en(Vls.)

rn(Mat.)
cn(Dtf.)
rcn(Dtf.)

namel(Dtf., "a data.frame")
namev(Vec., letters[Vec.])
namer(Mat., letters[Vec.])
namec(Dtf., c("letters", "LETTERS"))
namerc(Mat., letters[Vec.], Vec.)

}
\seealso{
Other extensions: 
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{envir_vals}},
\code{\link{evals}},
\code{\link{failsafe_binaries}},
\code{\link{failsafe_is}},
\code{\link{failsafe}()},
\code{\link{fork}()},
\code{\link{is_unique}()},
\code{\link{n_is}()},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{stats0}},
\code{\link{swap}()}
}
\concept{extensions}
