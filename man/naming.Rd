% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/naming.R
\encoding{UTF-8}
\name{naming}
\alias{naming}
\alias{name_vals}
\alias{name_rows}
\alias{name_cols}
\alias{name_scl_vls}
\alias{name_rcs}
\alias{name}
\alias{named}
\alias{named_elts}
\alias{named_rows}
\alias{named_cols}
\alias{named_rcs}
\alias{dnamed}
\alias{get_names}
\alias{dnames}
\alias{dn}
\alias{enames}
\alias{en}
\alias{rnames}
\alias{rn}
\alias{cnames}
\alias{cn}
\alias{rcnames}
\alias{rcn}
\title{Naming utilities}
\usage{
name_vals(x, names)

name_rows(x, names)

name_cols(x, names)

name_scl_vls(x, name)

name_rcs(x, rnames, cnames)

name(x, vnames = NULL, rnames = NULL, cnames = NULL)

named(x, .D = 0, .U = T, .BL = F)

named_elts(x, .U = T, .BL = F)

named_rows(x, .U = T, .BL = F)

named_cols(x, .U = T, .BL = F)

named_rcs(x, .U = T, .BL = F)

dnamed(..., .U = T, BL = F)

get_names(x, .D = 0, .U = T, .ERR = F)

dnames(..., .U = T, .ERR = F)

dn(..., .U = T, .ERR = F)

enames(x, .U = T, .ERR = F)

en(x, .U = T, .ERR = F)

rnames(x, .U = T, .ERR = F)

rn(x, .U = T, .ERR = F)

cnames(x, .U = T, .ERR = F)

cn(x, .U = T, .ERR = F)

rcnames(x, .U = T, .ERR = F)

rcn(x, .U = T, .ERR = F)
}
\arguments{
\item{x}{Vector or list for \code{name_vals} and \code{val_names / vn}; matrix or data.frame for \code{rnames / rn}, \code{cnames / cn}, \code{rcnames / rcn}, \code{name_rcs}, \code{name_cols}, and \code{name_rows}; or any object for \code{name_scl_vls}.}

\item{names, rnames, cnames, vnames}{A \link[=cmp_chr_vec]{complete character vec}.}

\item{name}{A non-\code{NA} character scalar to name the single element of the resulting \link[=VLS]{vlist}.}

\item{.D}{A \link[=cmp_psw_scl]{complete positive whole-number scalar} giving the dimension(s) to name: \code{0} for elements (of atomic or list vectors only), \code{1} for rows of matrices or tibbles, \code{2} for columns of matrices or data.frames, or \code{12} for rows and columns of matrices or data.frames.}

\item{.U}{\code{TRUE} or \code{FALSE} indicating whether names must be unique.}

\item{.BL, BL}{\code{TRUE} or \code{FALSE} indicating whether blank strings (\code{""}) are allowed as names.}

\item{...}{An arbitrary number of arguments.}

\item{.ERR}{\code{TRUE} or \code{FALSE} indicating whether names must exist.}

\item{ERR}{\code{TRUE} or \code{FALSE} indicating whether \code{...} args must have names.}
}
\value{
\strong{A \link[=VEC]{vec}, \link[=VLS]{vlist}, matrix, or data.frame} \cr\cr \code{name}
\cr\cr  \strong{A vector or a vlist of length} \code{2}                             \cr\cr \code{get_names}
\cr\cr  \strong{A matrix or data.frame}                                        \cr\cr \verb{name_rcs, name_rows, name_cols}
\cr\cr  \strong{A \link[=VLS]{vlist} of length} \code{2}                            \cr\cr \verb{rc_names, rcn}
\cr\cr  \strong{A \code{1}-element \link[=VLS]{vlist}}                              \cr\cr \code{name_scl_vls}
\cr\cr  \strong{A character vector}                                            \cr\cr \verb{rnames, cnames, enames}  \cr \verb{rn, cn, en}
\cr\cr  \strong{A logical scalar}                                              \cr\cr \verb{rcs_are_named, rows_are_named, cols_are_named} \cr \verb{dots_are_named, vals_are_named, named}
\cr\cr  \strong{A vector or \link[=VLS]{vlist}}                                \cr\cr \code{name_vals}
}
\description{
Get object names (with optional restrictions), check whether names exist (with optional restrictions), and apply names.
}
\details{
\tabular{ll}{  \code{get_names}        \tab name retrieval                      \cr
  \verb{rcnames, rcn}     \tab Row and column names                \cr
  \verb{rnames, rn}       \tab Row names                           \cr
  \verb{cnames, cn}       \tab Column names                        \cr
  \verb{vnames, vn}       \tab Value/element names                 \cr
  \verb{dnames, dn}       \tab \code{...} arg names                     \cr   \tab   \cr
  \code{named}            \tab name existence check                \cr
  \code{rcs_are_named}    \tab Are both rows and columns named?    \cr
  \code{cols_are_named}   \tab Are columns of \code{x} named?           \cr
  \code{dots_are_named}   \tab Are \code{...} arguments named?          \cr
  \code{rows_are_named}   \tab Are rows of \code{x} named?              \cr   \tab   \cr
  \code{vals_are_named}   \tab Are values/elements of \code{x} named?   \cr
  \code{name}             \tab Naming                              \cr
  \code{name_rcs}         \tab name rows and columns of \code{x}        \cr
  \code{name_cols}        \tab name columns of \code{x}.                \cr
  \code{name_rows}        \tab name rows of \code{x}.                   \cr
  \code{name_vals}        \tab name values/elements of a \code{x}.      \cr   \tab   \cr
  \code{name_scl_vls}     \tab Create and name a scalar \code{\link[=VLS]{vlist}} }
}
\examples{
egDotsNamed <- function(...) {dnamed(...)}

egVec <- 1:5
egVls <- list(num = 1:5, ae = letters[1:5])
egMat <- matrix(letters[1:25], nrow = 5)
egDtf <- data.frame(ae = letters[1:5], AE = LETTERS[1:5])

egVec
egVls
egMat
egDtf

named(egVec)
named(egVls)
named(egMat, .D = 12)
named(egDtf, .D = 2)

vals_are_named(egVls)
rows_are_named(egMat)
cols_are_named(egDtf)
rcs_are_named(egDtf)

dots_are_named(egVec, egVls)
dots_are_named(var1 = egVec, var2 = egVls)

get_names(egVls)
get_names(egMat, .D = 1)
get_names(egDtf, .D = 2)

en(egVec)
en(egVls)

rn(egMat)
cn(egDtf)
rcn(egDtf)

name_scl_vls(egDtf, "a data.frame")
name_vals(egVec, letters[egVec])
name_rows(egMat, letters[egVec])
name_cols(egDtf, c("letters", "LETTERS"))
name_rcs(egMat, letters[egVec], egVec)
}
\seealso{
Other extensions: 
\code{\link{N}()},
\code{\link{atomize}()},
\code{\link{case}()},
\code{\link{cb}()},
\code{\link{comparable}()},
\code{\link{compatible}()},
\code{\link{declare}},
\code{\link{dups}()},
\code{\link{failsafe}()},
\code{\link{flex_rbind}()},
\code{\link{fork}()},
\code{\link{is_unique}()},
\code{\link{na}()},
\code{\link{paths}},
\code{\link{purge}()},
\code{\link{rd}()},
\code{\link{r}()},
\code{\link{sets}()},
\code{\link{sum0}()},
\code{\link{swap}()},
\code{\link{value_exists}()}
}
\concept{extensions}
