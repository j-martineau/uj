% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weave.R
\encoding{UTF-8}
\name{weave}
\alias{weave}
\title{Weave inlay values into a string}
\usage{
weave(x, ...)
}
\arguments{
\item{x}{A \link[=cmp_chr_scl]{complete character scalar} with embedded escape sequences. See details.}

\item{...}{Arbitrary number of atomic scalar/vector arguments to be inserted into \code{x} with formatting specified in inlay escape sequences. The \code{N}-th argument in \code{...} corresponds to the \code{N}-th inlay escape sequence in \code{x}. The number of inlay escape sequences in \code{x} must be equal to the number of \code{...} arguments. See details.}
}
\value{
A character scalar.
}
\description{
A reformulation of \code{\link[base]{sprintf}} relying on a template containing escape sequences which in turn contain formatting switches. Escape sequences specify where to insert inlay arguments. Switches specify how to format arguments to be inlaid, and come in three families.
\cr\cr \strong{Decimal switches} specify number of decimal places for numeric arguments, taking the values \code{'0'} to \code{'9'}.
\cr\cr \strong{Quote switches} specify quoting argument elements as follows: \tabular{lcll}{
   \tab \strong{Switch} \tab \strong{Style} \tab   \strong{Type}
\cr    \tab   \code{'q'}    \tab straight  \tab   single
\cr    \tab   \code{'Q'}    \tab           \tab   double
\cr    \tab   \code{'t'}    \tab typeset   \tab   single
\cr    \tab   \code{'T'}    \tab           \tab   typeset
}
\cr \strong{List switches} specify formatting arguments as comma-separated lists: \tabular{lclll}{
   \tab \strong{Switch} \tab   \strong{Type of List} \tab   \strong{Subtype}     \tab   \strong{Result with \verb{arg = 1:3}}
\cr    \tab   \code{'l'}    \tab   \emph{list}           \tab   simple          \tab   \code{'1, 2, 3'}
\cr    \tab   \code{'|'}    \tab   \emph{Oxford comma}   \tab   or              \tab   \code{'1, 2, or 3'}
\cr    \tab   \code{'&'}    \tab                    \tab   and             \tab   \code{'1, 2, and 3'}
\cr    \tab   \code{'a'}    \tab                    \tab   all of          \tab   \verb{any of 1, 2, or 3}
\cr    \tab   \code{'A'}    \tab                    \tab   any of          \tab   \verb{all of 1, 2, and 3}
\cr    \tab   \code{'e'}    \tab                    \tab   either/or       \tab   \verb{either 1, 2, or 3}
\cr    \tab   \code{'n'}    \tab                    \tab   neither/nor     \tab   \verb{neither 1, 2, nor 3}
\cr    \tab   \code{'b'}    \tab   \emph{enclosed}       \tab   braces          \tab   \code{'{1, 2, 3}'}
\cr    \tab   \code{'c'}    \tab                    \tab   concatenated    \tab   \code{'c(1, 2, 3)'}
\cr    \tab   \code{'p'}    \tab                    \tab   parentheses     \tab   \code{'(1, 2, 3)'}
\cr    \tab   \code{'s'}    \tab                    \tab   square brackets \tab   \code{'[1, 2, 3]'}
}
\cr \strong{Escape sequences} are formatted as \code{'{@}'}, \code{'{@x}'}, \code{'{@xy}'}, and \verb{'\{@xyz\}} where \code{x}, \code{y}, and \code{z} are formatting switches and where there may only be \code{1} formatting switch per family.
\cr\cr Escape sequences in format \code{'{@}'} mean 'insert \link[=atm_scl]{atomic scalar} arg \emph{as is}.
\cr\cr Escape sequences in formats \verb{'\{@x\}', '\{@xy\}',} and \code{'{@xyz}'} mean 'insert \link[=atm_scl]{atomic vec} arg \emph{after applying}, respectively, switch \code{x}; switches \code{x} and \code{y}; and switches \code{x}, \code{y}, and \code{z}.
\cr\cr \strong{Ordering of switches} in escape sequences is arbitrary. Regardless of order in escape sequences, formatting switches are always applied in this order:
\tabular{rl}{
  1.  \tab Decimal switch (if any).
\cr   2.  \tab Quote switch (if any).
\cr   3.  \tab List switch (if any).
}
}
\examples{
cat(weave('{@}', FALSE))
cat(weave('{@}', 42))
cat(weave('{@b}', 4:7))
cat(weave('{@q}', 'foo::bar'))
cat(weave('{@0}', pi))
cat(weave('{@c2}', c(pi, exp(1), 42)))
cat(weave('{@Q6}', pi))
cat(weave('{@et3}', c(pi, exp(1))))
cat(weave('{@aq}', c('me', 'myself', 'I')))
}
\seealso{
Other strings: 
\code{\link{blank}()},
\code{\link{chn}()},
\code{\link{delim}},
\code{\link{fsub}()},
\code{\link{gr}},
\code{\link{ipat}()},
\code{\link{makestr}},
\code{\link{markdown}},
\code{\link{max_nch}()},
\code{\link{ox}()},
\code{\link{pgrid}()},
\code{\link{revstr}()},
\code{\link{spaces}()},
\code{\link{ss}()},
\code{\link{tocase}()}
}
\concept{strings}
