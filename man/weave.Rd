% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weave.R
\name{weave}
\alias{weave}
\title{Weave inlay values into a string}
\usage{
weave(x, ...)
}
\arguments{
\item{x}{An atomic scalar with inlay escape sequences (see details).}

\item{...}{An arbitrary number of atomic scalar/vector arguments to be
inserted into \code{x} with formatting specified in inlay escape sequences.
The \code{N}-th argument in \code{...} corresponds to the \code{N}-th inlay
escape sequence in \code{x}. The number of inlay escape sequences in
\code{x} must be equal to the number of arguments in \code{...}.}
}
\value{
A character scalar.
}
\description{
A replacement for \code{sprintf} for basic uses. \code{x} must
be a character scalar. All arguments in \code{...} must be atomic scalars
or 1-dimensional vectors.
}
\details{
Inlay escape sequences to specify formatting follow the patterns
given in the following table with associated meanings of each pattern:
\tabular{ll}{
\strong{Pattern }   \tab \strong{Meaning insert argument...}
\cr\code{'{@}'}    \tab ...as is (argument must be scalar)
\cr\code{'{@x}'}   \tab ...after applying formatting switch \code{'x'}
\cr\code{'{@xy}'}  \tab ...after applying formatting switches \code{'x'}
and \code{'y'}
\cr\code{'{@xyz}' }\tab ...after applying formatting switches \code{'x'},
\code{'y'}, and \code{'z'}
}
There are three families of switches:
\tabular{ll}{
\strong{Family}    \tab\strong{Purpose}
\cr\code{decimals }\tab specify the number of decimal points to include
in formatting numeric arguments
\cr\code{quotes}   \tab types of quotes in which to enclose formatted
argument values
\cr\code{list}     \tab type of list to create in formatting arguments
that may have more than one element.
}
Each escape sequence can contain only 1 switch from each family, but no
family is required to have a switch in any given escape sequence. In the
following table, the values switches may take are summarized, giving the
value, the family it belongs to, and the formatting instructions indicated
by the switch.
\tabular{lll}{
\strong{Switch  }\tab\strong{Switch}\tab\strong{Formatting}
\cr\strong{Value}\tab\strong{Family}      \tab\strong{Specifications}
\cr\code{'0'}\tab\code{decimals }\tab 0 decimal places
\cr\code{'1'}\tab\code{decimals}\tab 1 decimal place
\cr\code{'2'}\tab\code{decimals}\tab 2 decimal places
\cr ...      \tab ...           \tab ...
\cr\code{'8'}\tab\code{decimals}\tab 8 decimal places
\cr\code{'9'}\tab\code{decimals}\tab 9 decimal places
\cr\code{'q'}\tab\code{quote}\tab single straight quotes
\cr\code{'Q'}\tab\code{quote}\tab double straight quotes.
\cr\code{'t'}\tab\code{quote}\tab single typeset quotes
\cr\code{'T'}\tab\code{quote}\tab double typeset quotes
\cr\code{'b'}\tab\code{quote}\tab comma-separated list in braces
\cr\code{'c'}\tab\code{list}\tab comma-separated list in \code{'c(...)'}
\cr\code{'l'}\tab\code{list}\tab comma-separated list
\cr\code{'p'}\tab\code{list}\tab comma-separated list in parentheses
\cr\code{'s'}\tab\code{list}\tab comma-separated list in square brackets
\cr\code{'a'}\tab\code{list}\tab
\link[=ox_and]{Oxford-comma separated 'and' list}
\cr\code{'o'}\tab\code{list}\tab
\link[=ox_or]{Oxford-comma separated 'or' list}
}
Switches may be given in any order, and there can only be one switch from
each family in a given inlay escape sequence. Regardless of order in the
escape sequence, switches from the \code{decimals} family are processed
first, followed by switches from the \code{quote} family, followed by
switches from the \code{list} family.
\cr\cr
Example are provided in the following table, giving inlay escape sequences,
the value of an argument to be formatted using the inlay escape sequence,
and the result of applying the inlay escape sequence's formatting switches
to the argument.
\tabular{lll}{
\strong{Escape}\tab\strong{Argument  }\tab\strong{Resulting Formatted}
\cr\strong{Sequence  }\tab\strong{Value}\tab\strong{Character Scalar}
\cr\code{'{@}'}\tab\code{FALSE}\tab\code{'FALSE'}
\cr\code{'{@}'}\tab\code{42}\tab\code{'42'}
\cr\code{'{@b}'}\tab\code{4:7}\tab\code{'{4, 5, 6, 7}'}
\cr\code{'{@q}'}\tab\code{'foo::bar'}\tab\code{"'foo::bar'"}
\cr\code{'{@0}'}\tab\code{pi}\tab\code{'3'}
\cr\code{'{@aQ}'}\tab\code{c('me', 'myself', 'I') }\tab
\code{'"me", "myself", and "I"'}
\cr\code{'{@c2}'} \tab\code{c(pi, exp(1), 42)}\tab
\code{'c(3.14, 2.62, 42.00)'}
\cr\code{'{@Q6}'} \tab\code{pi}\tab\code{'"3.141593"'}
\cr\code{'{@ot3}'}\tab\code{c(pi, exp(1))}\tab\code{'‘3.142’ or ‘2.718’'}
  }
}
\seealso{
Other strings: 
\code{\link{Oxford}},
\code{\link{delim}},
\code{\link{ipat}()},
\code{\link{pgrid}()},
\code{\link{spacing}},
\code{\link{ss}()},
\code{\link{tocase}()}
}
\concept{strings}
